{"version":3,"sources":["store/reducers/index.js","store/actions.js","components/LeftPanePopoverTab.js","components/LeftPaneTab.js","components/LeftPane.js","components/Matrix.js","components/LeftPaneModalTab.js","components/LeftPaneModal.js","components/SearchDisplayTab.js","components/SearchDisplay.js","components/ListDisplayTab.js","components/ColCharts.js","components/BodyChart.js","components/FilterBody.js","components/FilterPane.js","components/BodyZones.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","searchDisplay","searchData","names","params","listDisplay","searchTermDisplay","searchTermQuery","currentFilteredArray","filter","minYear","maxYear","venueFilter","sourceFilter","categories","functions","bodyZones","fabrication","material","arrFunc","arrBod","arrFab","arrMat","selFunction","selBodyZones","selFabrication","selMaterial","showFunc","showBod","showFab","showMat","bookMarks","viewBookmarks","isLoggedIn","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","val","toConsumableArray","value","listView","temp","index","indexOf","splice","push","jsonToSend","JSON","stringify","username","password","bookmarks","request","Request","method","headers","Content-Type","body","fetch","then","response","status","toString","text","parse","message","console","log","valName","valPassword","LeftPanePopoverTab","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","subtype","tempArr","listArr","includes","setState","onSelect","onSelFunction","onSelBodyZones","onSelFabrication","onSelMaterial","selArr","inp","_this2","subtypes","sort","map","input","react_default","a","createElement","key","className","name","id","label","style","width","color","backgroundColor","Component","connect","dispatch","LeftPaneTab","toggle","popoverOpen","popoverFunc","popoverBod","popoverFab","popoverMat","arr","myVal","src","alt","UncontrolledPopover","hideArrow","modifiers","offset","trigger","target","PopoverHeader","transform","PopoverBody","padding","components_LeftPanePopoverTab","LeftPane","onShowFunction","onShowBodyZones","onShowFabrication","onShowMaterial","listItems","i","tempList","item","listItem","components_LeftPaneTab","clicked","Matrix","name_array","bool_param","query_param_array","updateQuery","toggleDisplay","filterYear","filterVenue","venue","toLowerCase","filterSource","source","filterArr","bool_array","funcCount","trim","fabCount","matCount","bodCount","funcBodCount","matBodCount","fabBodCount","fabFuncCount","matFuncCount","matFabCount","matFabFuncCount","matFabBodCount","funcFabBodCount","curFuncFabBodCount","funcMatBodCount","allCount","w_f","window","innerWidth","h_f","innerHeight","lib","height","viewBox","size","x","y","flat","spacing","origin","q","r","s","textAnchor","dy","fill","query_param","LeftPaneModalTab","curInp","onSelectFunction","onSelectBodyZones","onSelectFabrication","onSelectMaterial","curInput","background","fontWeight","LeftPaneModal","funcModal","components_LeftPaneModalTab","fabModal","matModal","SearchDisplayTab","toggleCost","tooltipOpenCost","toggleImp","tooltipOpenImp","toggleWear","tooltipOpenWear","updateBookmark","substring","bind","assertThisInitialized","item1","document","getElementById","item2","item3","item4","item5","addEventListener","e","getBoundingClientRect","bottom","deltaY","scrollLeft","check","wearToken","parseInt","costToken","col","href","onerror","objectFit","loggedIn","Input","checked","borderRadius","opacity","fontSize","class","count","display","overflowX","overflowY","flexWrap","SearchDisplay","filterFunc","filterBod","filterFab","filterMat","shuffleArray","array","j","Math","floor","random","_ref","seed","sin","filterData","research","tutorials","aesthetics","concepts","allData","searchQuery","filteredArrayUpdate","researchArr","tutorialsArr","aestheticsArr","conceptsArr","patentsArr","listContents","scope","corLabel","Table","striped","components_SearchDisplayTab","backToSearch","ColCharts","data","function","subType","Results","fillColor","w","h","es6","margin","top","right","left","dataKey","cursor","BodyChart","out","position","Range","Slider","createSliderWithTooltip","FilterBody","toggleStats","prevState","modal","filterToggle","onChange","onVenueClick","split","onSourceClick","sourceInit","toggleBookmarks","dropdownOpen","showLabels","venueArr","mainPage","curSearchData","unshift","myData","filterEngineering","filterFashion","engLength","fashLength","Set","DropdownItem","yearData","_loop","concat","Projects","closeBtn","Button","hide","handleStyle","trackStyle","allowCross","railStyle","min","max","defaultValue","float","marginTop","ButtonDropdown","isOpen","DropdownToggle","caret","DropdownMenu","marginLeft","Fragment","Label","Progress","multi","bar","outline","zIndex","Modal","maxWidth","maxHeight","ModalHeader","close","ModalBody","components_ColCharts","components_BodyChart","FilterPane","toggleVisibility","visibility","handleChange","event","handleSubmit","searchTermDisplayUpdate","searchTermQueryUpdate","preventDefault","toggleHome","toggleBack","logout","popVal","move","onSubmit","placeholder","Popover","placement","defineProperty","components_FilterBody","showLoop","BodyZones","componentWillMount","clickTimeout","handleClicks","area","doubleClicked","clearTimeout","setTimeout","zone","img","myMap","areas","shape","coords","ImageMapper_default","HomePage","onSignUpWarningChange","signUpWarning","onLoginWarningChange","loginWarning","onSignUpUsernameChange","signUpUsername","onLoginUsernameChange","loginUsername","onSignUpEmailChange","signUpEmail","onSignUpPasswordChange","signUpPassword","onLoginPasswordChange","loginPassword","onLoginSubmit","authSuccess","toggleDisp","pwd","objReceived","onSignUpSubmit","email","backgroundSize","textAlign","borderStyle","borderColor","Form","valuename","valuepass","App","toggleToSearch","displayHome","computeImplementationMetric","fabricationChart","laser cutting","3d printing","layering","printing","painting","sticking","heat pressing","heat transfer","soldering","origami","molding and casting","pleating and folding","knit","embroidery and applique","patchwork and patterning","woven","non woven","machining","cut and sew","joining","functionChart","storage","breathability","energy harvesting","feedback","electronic connections","wireless communication","control","movement","sensing","protective","magnetic","cognitive","modularity","emissivity","wearability","morphology","gestures","impMetric","fabScore","funcScore","ans","computeCostMetric","cut and wew","materialChart","conductive inks","polymers","molding materials","threads","conductive threads","adhesives","paper and cardboard","electronics","textiles and composites","hardware","organic materials","inks & finishes","metal","shape memory alloy","costMetric","matScore","computeWearability","totalCount","attachScore","mainScore","isNaN","actScore","intScore","conScore","aesScore","Wearability","toFixed","displayMatrix","Tabletop","init","callback","googleData","elements","costmetric","updateSearchData","simpleSheet","react_router_dom","src_components_HomePage","components_SearchDisplay","updateSearchDisplay","components_FilterPane","components_LeftPane","components_LeftPaneModal","components_Matrix","components_BodyZones","Boolean","location","hostname","match","rootReducer","store","createStore","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51d8dcaa.chunk.js","sourcesContent":["import * as actionTypes from '../actions';\r\n\r\nconst initialState = {\r\n\r\n    searchDisplay: false,\r\n    searchData: [],\r\n    names: [],\r\n    params: [],\r\n\r\n    listDisplay: false,\r\n\r\n    searchTermDisplay: false,\r\n    searchTermQuery: '',\r\n\r\n    currentFilteredArray: [],\r\n\r\n    filter: true,\r\n    minYear: 1990,\r\n    maxYear: 2019,\r\n    venueFilter: 'All',\r\n    sourceFilter: 'Both',\r\n\r\n    categories: ['Function', 'BodyZones', 'Fabrication', 'Material'],\r\n    functions: ['Storage', 'Breathability', 'Energy Harvesting', 'Feedback',\r\n     'Display', 'Electronic Connections', 'Wireless Communication', 'Control', 'Movement',\r\n      'Sensing', 'Protective', 'Magnetic', 'Cognitive', 'Modularity', 'Emissivity',\r\n    'Wearability', 'Morphology', 'Aesthetics', 'Gestures'],\r\n    bodyZones: ['Head', 'Chest', 'Pelvic Region', 'Arms', 'Legs',\r\n    'Wrist and Hand', 'Back', 'Full Body', 'Feet'],\r\n    fabrication: ['Stiching/Sewing', 'Laser Cutting', 'Weaving', '3D Printing',\r\n     'Layering', 'Printing', 'Sticking', 'Head Pressing', 'Heat Transfer',\r\n      'Soldering', 'Origami', 'Molding and Casting', 'Pleating and Folding',\r\n      'Knit', 'Embroidery and Applique', 'Beading', 'Quilting',\r\n      'Patchwork and Pattering', 'Woven', 'Non Woven', 'Machining', 'Painting'],\r\n    material: ['Illumination', 'Conductive Inks', 'Polymers', 'Molding Materials',\r\n    'Threads', 'Conductive Threads','Adhesives', 'Paper and Cardboard', 'Electronics',\r\n    'Textile and Composites', 'Bonded', 'Jaquard', 'Hide', 'Hardware', 'Organic Materials',\r\n    'Inks & Finishes', 'Metal', 'Shape Memory Alloy', 'Fabrics'],\r\n\r\n    arrFunc: [],\r\n    arrBod: [],\r\n    arrFab: [],\r\n    arrMat: [],\r\n\r\n    selFunction: '',\r\n    selBodyZones: '',\r\n    selFabrication: '',\r\n    selMaterial: '',\r\n\r\n    showFunc: false,\r\n    showBod: false,\r\n    showFab: false,\r\n    showMat: false,\r\n\r\n    bookMarks: [],\r\n    viewBookmarks: false,\r\n\r\n    isLoggedIn: false,\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case actionTypes.SELECT_FUNCTION:\r\n            return {\r\n                ...state,\r\n                selFunction: action.val\r\n            }\r\n        case actionTypes.SELECT_BODYZONES:\r\n            return {\r\n                ...state,\r\n                selBodyZones: action.val\r\n            }\r\n        case actionTypes.SELECT_FABRICATION:\r\n            return {\r\n                ...state,\r\n                selFabrication: action.val\r\n            }\r\n        case actionTypes.SELECT_MATERIAL:\r\n             return {\r\n                 ...state,\r\n                 selMaterial: action.val\r\n             }\r\n        case actionTypes.SHOW_FUNC:\r\n            return {\r\n              ...state,\r\n              showFunc: !(state.showFunc)\r\n            }\r\n        case actionTypes.SHOW_BOD:\r\n            return {\r\n                ...state,\r\n                showBod: !(state.showBod)\r\n            }\r\n        case actionTypes.SHOW_FAB:\r\n           return {\r\n               ...state,\r\n               showFab: !(state.showFab)\r\n           }\r\n        case actionTypes.SHOW_MAT:\r\n           return {\r\n               ...state,\r\n               showMat: !(state.showMat)\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_FUNC:\r\n           return {\r\n                ...state,\r\n                arrFunc: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_BOD:\r\n\r\n           return {\r\n                ...state,\r\n                arrBod: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_FAB:\r\n           return {\r\n                ...state,\r\n                arrFab: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_MAT:\r\n           return {\r\n                ...state,\r\n                arrMat: [...action.value]\r\n           }\r\n        case actionTypes.UPDATE_DATA:\r\n          return {\r\n            ...state,\r\n            searchData: [...action.value]\r\n          }\r\n          case actionTypes.SEARCH_DISPLAY:\r\n            return {\r\n              ...state,\r\n              searchDisplay: true,\r\n            }\r\n\r\n          case actionTypes.REMOVE_SEARCH_DISPLAY:\r\n          return {\r\n            ...state,\r\n            searchDisplay: false,\r\n            searchTermDisplay: false,\r\n          }\r\n\r\n          case actionTypes.UPDATE_QUERY:\r\n            return {\r\n              ...state,\r\n              names: [...action.names],\r\n              params: [...action.params]\r\n            }\r\n          case actionTypes.FILTER_DATA:\r\n            return {\r\n              ...state,\r\n              filter: true,\r\n            }\r\n          case actionTypes.FILTER_YEAR:\r\n            return {\r\n              ...state,\r\n              minYear: action.minYear,\r\n              maxYear: action.maxYear,\r\n            }\r\n          case actionTypes.FILTER_VENUE:\r\n            return {\r\n              ...state,\r\n              venueFilter: action.val,\r\n            }\r\n          case actionTypes.FILTER_SOURCE:\r\n            return {\r\n              ...state,\r\n              sourceFilter: action.val,\r\n            }\r\n          case actionTypes.TOGGLE_DISPLAY:\r\n            return {\r\n              ...state,\r\n              listView: (!state.listView),\r\n            }\r\n          case actionTypes.SEARCH_TERM_DISPLAY:\r\n            return  {\r\n              ...state,\r\n              searchTermDisplay: true,\r\n            }\r\n          case actionTypes.SEARCH_TERM_QUERY:\r\n            return {\r\n              ...state,\r\n              searchTermQuery: action.val,\r\n            }\r\n          case actionTypes.UPDATE_BOOKMARKS:\r\n\r\n              let temp = [...state.bookMarks];\r\n\r\n              var index = temp.indexOf(action.val);\r\n\r\n              if (index > -1) {\r\n                 temp.splice(index, 1);\r\n              }\r\n\r\n              else {\r\n                temp.push(action.val);\r\n              }\r\n\r\n              let jsonToSend = JSON.stringify({\r\n                   username: state.username,\r\n                   password: state.password,\r\n                   bookmarks: temp\r\n               })\r\n\r\n              var request = new Request('https://chimerabackend.herokuapp.com/api/editPreferences/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                    },\r\n                    body: jsonToSend\r\n                  });\r\n                  fetch(request).then(function(response){\r\n\r\n                     if(response.status.toString() === '200') {\r\n                        response.text().then(function(text) {\r\n\r\n                            var objReceived = JSON.parse(text);\r\n                            if (objReceived.message === 'SUCCESS') {\r\n\r\n                               console.log(\"Updated\");\r\n                            }\r\n\r\n                        })\r\n                      }\r\n                  })\r\n\r\n              return {\r\n                ...state,\r\n                bookMarks: temp,\r\n              }\r\n\r\n          case actionTypes.VIEW_BOOKMARKS: {\r\n\r\n            return {\r\n              ...state,\r\n              viewBookmarks: (!state.viewBookmarks),\r\n            }\r\n\r\n          }\r\n\r\n          case actionTypes.AUTH_SUCCESS: {\r\n\r\n            console.log(action);\r\n            return {\r\n              ...state,\r\n              isLoggedIn: true,\r\n              username: action.valName,\r\n              password: action.valPassword,\r\n              bookMarks: action.val\r\n            }\r\n          }\r\n\r\n          case actionTypes.AUTH_FAILURE: {\r\n\r\n            return {\r\n              ...state,\r\n              isLoggedIn: false,\r\n              arrFunc: [],\r\n              arrBod: [],\r\n              arrFab: [],\r\n              arrMat: [],\r\n\r\n              selFunction: '',\r\n              selBodyZones: '',\r\n              selFabrication: '',\r\n              selMaterial: '',\r\n\r\n              showFunc: false,\r\n              showBod: false,\r\n              showFab: false,\r\n              showMat: false,\r\n\r\n              bookMarks: [],\r\n              viewBookmarks: false,              \r\n            }\r\n          }\r\n\r\n          case actionTypes.STORE_FILTERED_ARRAY: {\r\n\r\n            return {\r\n              ...state,\r\n              currentFilteredArray: action.val,\r\n            }\r\n          }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","export const SELECT_FUNCTION = 'SELECT_FUNCTION';\r\nexport const SELECT_BODYZONES = 'SELECT_BODYZONES';\r\nexport const SELECT_FABRICATION = 'SELECT_FABRICATION';\r\nexport const SELECT_MATERIAL = 'SELECT_MATERIAL';\r\n\r\nexport const SHOW_FUNC = 'SHOW_FUNC';\r\nexport const SHOW_BOD = 'SHOW_BOD';\r\nexport const SHOW_FAB = 'SHOW_FAB';\r\nexport const SHOW_MAT = 'SHOW_MAT';\r\n\r\nexport const PRE_SELECT_FUNC = 'PRE_SELECT_FUNC';\r\nexport const PRE_SELECT_BOD = 'PRE_SELECT_BOD';\r\nexport const PRE_SELECT_FAB = 'PRE_SELECT_FAB';\r\nexport const PRE_SELECT_MAT = 'PRE_SELECT_MAT';\r\n\r\nexport const UPDATE_DATA = 'UPDATE_DATA';\r\nexport const SEARCH_DISPLAY = 'SEARCH_DISPLAY';\r\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\r\n\r\nexport const FILTER_DATA = 'FILTER_DATA';\r\nexport const FILTER_YEAR = 'FILTER_YEAR';\r\nexport const FILTER_VENUE = 'FILTER_VENUE';\r\nexport const FILTER_SOURCE = 'FILTER_SOURCE';\r\n\r\nexport const TOGGLE_DISPLAY = 'TOGGLE_DISPLAY';\r\n\r\nexport const SEARCH_TERM_DISPLAY = 'SEARCH_TERM_DISPLAY';\r\nexport const SEARCH_TERM_QUERY = 'SEARCH_TERM_QUERY';\r\n\r\nexport const UPDATE_BOOKMARKS = 'UPDATE_BOOKMARKS';\r\nexport const VIEW_BOOKMARKS = 'VIEW_BOOKMARKS';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\r\n\r\nexport const REMOVE_SEARCH_DISPLAY = 'REMOVE_SEARCH_DISPLAY';\r\n\r\nexport const STORE_FILTERED_ARRAY = 'STORE_FILTERED_ARRAY';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPanePopoverTab.css';\r\nimport { Button, CustomInput, Form, FormGroup, Label } from 'reactstrap';\r\nimport * as actionTypes from '../store/actions';\r\n\r\n\r\nclass LeftPanePopoverTab extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n         listArr: this.props.selArr,\r\n        };\r\n    }\r\n\r\n    onClick = (subtype) => {\r\n\r\n\r\n        let tempArr = this.state.listArr;\r\n\r\n        if(this.state.listArr.includes(subtype)) {\r\n\r\n            tempArr.splice(tempArr.indexOf(subtype),1 );\r\n        }\r\n\r\n        else {\r\n            tempArr.push(subtype);\r\n        }\r\n\r\n        this.setState({\r\n\r\n            listArr: tempArr,\r\n        });\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        this.onSelect();\r\n    }\r\n\r\n    onSelect = () => {\r\n\r\n            //this.props.types and this.state.listArr\r\n            let type = this.props.type;\r\n\r\n\r\n             if(type === 'Function') {\r\n\r\n                 this.props.onSelFunction(this.state.listArr);\r\n             }\r\n             else if(type === 'BodyZones') {\r\n                 this.props.onSelBodyZones(this.state.listArr);\r\n             }\r\n             else if(type === 'Fabrication') {\r\n                 this.props.onSelFabrication(this.state.listArr);\r\n             }\r\n             else {\r\n                 this.props.onSelMaterial(this.state.listArr);\r\n             }\r\n\r\n             //this.props.toggle();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n            let inp = '';\r\n\r\n            let selArr = this.state.listArr;\r\n            inp = this.props.subtypes.sort().map((input) => {\r\n\r\n                return (\r\n\r\n                    <div key={this.props.key}>\r\n                     {(selArr.includes(input)) ? (\r\n                       <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBodySelected'\r\n                          name=\"customRadio\"\r\n\r\n                          id={input}\r\n                          label={input}>{input}</div>\r\n                        ) : (\r\n                          <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBody'\r\n                          name=\"customRadio\" key={input} id={input}\r\n                                    label={input}>{input}</div>\r\n                        )}\r\n                     </div>\r\n\r\n\r\n                );\r\n            }\r\n            )\r\n            return (\r\n                        <div style={{width: '100%', color: \"white\", backgroundColor: \"black\"}}>\r\n                          {inp}\r\n                        </div>\r\n\r\n\r\n            );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelFunction: (value) => dispatch({type: actionTypes.PRE_SELECT_FUNC, value: value}),\r\n        onSelBodyZones: (value) => dispatch({type: actionTypes.PRE_SELECT_BOD, value: value}),\r\n        onSelFabrication: (value) => dispatch({type: actionTypes.PRE_SELECT_FAB, value: value}),\r\n        onSelMaterial: (value) => dispatch({type: actionTypes.PRE_SELECT_MAT, value: value}),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LeftPanePopoverTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPaneTab.css'\r\n\r\nimport LeftPanePopoverTab from './LeftPanePopoverTab';\r\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nclass LeftPaneTab extends Component {\r\n\r\n    constructor(props) {\r\n       super(props);\r\n\r\n\r\n\r\n       this.state = {\r\n         popoverFunc: false,\r\n         popoverBod: false,\r\n         popoverFab: false,\r\n         popoverMat: false,\r\n         popoverOpen: false,\r\n       };\r\n\r\n    }\r\n\r\n     toggle = (name) => {\r\n       this.setState({\r\n         popoverOpen: !this.state.popoverOpen\r\n       });\r\n     }\r\n\r\n\r\n   render() {\r\n\r\n\r\n            let type = this.props.name;\r\n\r\n            let arr = [];\r\n            let selArr = [];\r\n\r\n            if(type === 'Function') {\r\n                arr = this.props.functions;\r\n                selArr = this.props.arrFunc;\r\n            }\r\n            else if(type === 'BodyZones') {\r\n                arr = this.props.bodyZones;\r\n                selArr = this.props.arrBod;\r\n            }\r\n            else if(type === 'Fabrication') {\r\n                arr = this.props.fabrication;\r\n                selArr = this.props.arrFab;\r\n            }\r\n            else {\r\n                arr = this.props.material;\r\n                selArr = this.props.arrMat;\r\n            }\r\n\r\n            let backgroundCol = \"rgb(172, 216, 206)\";\r\n            let borderCol = \"rgb(110, 169, 155)\";\r\n            let myVal = \"funcColor\";\r\n\r\n            if(this.props.name === \"Material\") {\r\n                backgroundCol = \"rgb(254, 205, 102)\";\r\n                borderCol = \"rgb(254, 172, 0)\";\r\n                myVal = \"matColor\";\r\n            }\r\n\r\n            else if(this.props.name === \"Fabrication\") {\r\n              backgroundCol = \"rgb(133, 194, 219)\";\r\n              borderCol = \"rgb(0, 181, 254)\";\r\n              myVal = \"fabColor\";\r\n            }\r\n\r\n\r\n\r\n            //console.log(store.getState());\r\n            return (\r\n\r\n             <div id={'Popover-'+this.props.name} className={myVal}>\r\n\r\n                 <div className=\"rotate5 move\">{this.props\r\n                 .name}\r\n                 </div>\r\n\r\n\r\n                 <img id=\"image\" src={\"ImageDatabase/Icons/\" + this.props.name + \".png\"}\r\n                  alt=\"\" className=\"imgStyle\"/>\r\n\r\n                         <UncontrolledPopover style={{ backgroundColor: \"black\"}} hideArrow={true} modifiers={{offset: '-5vw'}} trigger=\"legacy\" target={'Popover-'\r\n                         +\r\n\r\n                         this\r\n                         .props\r\n                         .name}>\r\n\r\n                              <PopoverHeader style={{color: \"white\", backgroundColor: \"black\", transform: \"translateX(-4.8%)\"}}>{this.props.name}</PopoverHeader>\r\n                               <PopoverBody style={{padding: '0', color: \"#A7AFBA\", backgroundColor: \"black\", transform: \"translateX(-4.8%)\"}}><LeftPanePopoverTab\r\n                                                        type={this.props.name}\r\n                                                        subtypes={arr}\r\n                                                         selArr={selArr}\r\n                                                         toggle={this.toggle}\r\n                                                         key={this.props.key}/>\r\n                          </PopoverBody>\r\n\r\n                         </UncontrolledPopover>\r\n\r\n            </div>\r\n\r\n        );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        functions: state.functions,\r\n        bodyZones: state.bodyZones,\r\n        fabrication: state.fabrication,\r\n        material: state.material,\r\n\r\n        showFunc: state.showFunc,\r\n        showBod: state.showBod,\r\n        showFab: state.showFab,\r\n        showMat: state.showMat,\r\n\r\n        arrFunc: state.arrFunc,\r\n        arrBod: state.arrBod,\r\n        arrFab: state.arrFab,\r\n        arrMat: state.arrMat,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeftPaneTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './leftPane.css'\r\nimport LeftPaneTab from './LeftPaneTab';\r\n\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass LeftPane extends Component {\r\n\r\n    onClick = (type) => {\r\n\r\n\r\n\r\n         if(type === 'Function') {\r\n\r\n             this.props.onShowFunction();\r\n         }\r\n         else if(type === 'BodyZones') {\r\n             this.props.onShowBodyZones();\r\n         }\r\n         else if(type === 'Fabrication') {\r\n             this.props.onShowFabrication();\r\n         }\r\n         else {\r\n             this.props.onShowMaterial();\r\n         }\r\n    };\r\n\r\n    render() {\r\n\r\n           let listItems = '';\r\n           let i = 0;\r\n\r\n           let tempList = this.props.categories;\r\n           tempList = tempList.filter((item) => {\r\n             return item !== 'BodyZones'\r\n           })\r\n           listItems = tempList.map((listItem) => {\r\n                return (\r\n                    <LeftPaneTab key={i++} name={listItem} clicked={this.onClick} />\r\n                )\r\n            });\r\n\r\n            return (\r\n\r\n             <div className=\"leftPaneBody\">\r\n                {listItems}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        categories: state.categories,\r\n        searchData: state.searchData\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onShowFunction: () => dispatch({type: actionTypes.SHOW_FUNC}),\r\n        onShowBodyZones: () => dispatch({type: actionTypes.SHOW_BOD}),\r\n        onShowFabrication: () => dispatch({type: actionTypes.SHOW_FAB}),\r\n        onShowMaterial: () => dispatch({type: actionTypes.SHOW_MAT}),\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftPane);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './matrix.css'\r\nimport './matrixSVG.css'\r\nimport { GridGenerator, HexGrid, Layout, Path, Hexagon, Text, Pattern, Hex } from 'react-hexgrid';\r\n\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\n\r\nimport * as actionTypes from '.././store/actions';\r\n\r\nclass Matrix extends Component {\r\n\r\n    onClick = (name_array, bool_param, query_param_array) => {\r\n\r\n        if(bool_param) {\r\n\r\n          this.props.updateQuery(name_array, query_param_array);\r\n          this.props.toggleDisplay();\r\n        }\r\n    };\r\n\r\n    /*\r\n\r\n      For every hexagon:\r\n\r\n        1) When clickable:\r\n\r\n            For that specific query, determine how many entries are there in the database.\r\n\r\n            For the 4 base types\r\n\r\n\r\n        2) When not clickable:\r\n\r\n              For all fifteen hexagons I need to calculate number of corresponding inputs.\r\n              Basically like for function, check if entry has X in any of func1-3. look over every entry and maintain\r\n              a boolean for all 4 parameters. and then increae counts depending on either of the 15 cases\r\n              For function + material, check both similars\r\n    */\r\n\r\n    render() {\r\n\r\n            let filterArr = this.props.searchData;\r\n\r\n            if(this.props.filter) {\r\n\r\n              filterArr = filterArr.filter(this.filterYear);\r\n              filterArr = filterArr.filter(this.filterVenue);\r\n              filterArr = filterArr.filter(this.filterSource);\r\n            }\r\n\r\n            let name_array = [];\r\n            name_array[0] = 'Function';\r\n            name_array[1] = 'BodyZones';\r\n            name_array[2] = 'Fabrication';\r\n            name_array[3] = 'Material'\r\n\r\n            let bool_array = [];\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n\r\n            if(this.props.selFunction !== '') {\r\n                bool_array[0] = true;\r\n                name_array[0] = this.props.selFunction;\r\n              }\r\n\r\n            if(this.props.selBodyZones !== '') {\r\n                bool_array[1] = true;\r\n                name_array[1] = this.props.selBodyZones;\r\n            }\r\n\r\n            if(this.props.selFabrication !== '') {\r\n                bool_array[2] = true;\r\n                name_array[2] = this.props.selFabrication;\r\n            }\r\n\r\n            if(this.props.selMaterial !== '') {\r\n                bool_array[3] = true;\r\n                name_array[3] = this.props.selMaterial;\r\n            }\r\n\r\n            let funcCount = filterArr.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            funcCount = funcCount.length;\r\n\r\n            if(bool_array[0]) {\r\n\r\n              let curFuncCount = filterArr.filter((item) => {\r\n                return item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n              });\r\n              funcCount = curFuncCount.length;\r\n            }\r\n\r\n            let fabCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabCount = fabCount.length;\r\n\r\n            if(bool_array[2]) {\r\n\r\n              let curFabCount = filterArr.filter((item) => {\r\n                return item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n              });\r\n              fabCount = curFabCount.length;\r\n            }\r\n\r\n            let matCount = filterArr.filter((item) => {\r\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matCount = matCount.length;\r\n\r\n            if(bool_array[3]) {\r\n\r\n              let curMatCount = filterArr.filter((item) => {\r\n                return item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n              });\r\n              matCount = curMatCount.length;\r\n            }\r\n\r\n            let bodCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            bodCount = bodCount.length;\r\n\r\n            if(bool_array[1]) {\r\n\r\n              let curBodCount = filterArr.filter((item) => {\r\n                return item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n              });\r\n              bodCount = curBodCount.length;\r\n            }\r\n\r\n            /*\r\n              For twos, take 2 bool arrays\r\n            */\r\n\r\n            let funcBodCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            funcBodCount = funcBodCount.length;\r\n\r\n            if(bool_array[0] && bool_array[1]) {\r\n\r\n              let curFuncBodCount = filterArr.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              funcBodCount = curFuncBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let matBodCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matBodCount = matBodCount.length;\r\n\r\n            if(bool_array[1] && bool_array[3]) {\r\n\r\n              let curMatBodCount = filterArr.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\r\n              });\r\n              matBodCount = curMatBodCount.length;\r\n            }\r\n\r\n            let fabBodCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabBodCount = fabBodCount.length;\r\n\r\n            if(bool_array[1] && bool_array[2]) {\r\n\r\n              let curFabBodCount = filterArr.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n              });\r\n              fabBodCount = curFabBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let fabFuncCount = filterArr.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabFuncCount = fabFuncCount.length;\r\n\r\n            if(bool_array[0] && bool_array[2]) {\r\n              let curFabFuncCount = filterArr.filter((item) => {\r\n                return (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              fabFuncCount = curFabFuncCount.length;\r\n            }\r\n\r\n            let matFuncCount = filterArr.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matFuncCount = matFuncCount.length;\r\n\r\n            if(bool_array[0] && bool_array[3]) {\r\n              let curMatFuncCount = filterArr.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              matFuncCount = curMatFuncCount.length;\r\n            }\r\n\r\n\r\n\r\n            let matFabCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matFabCount = matFabCount.length;\r\n\r\n            if(bool_array[2] && bool_array[3]) {\r\n              let curMatFabCount = filterArr.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n              });\r\n              matFabCount = curMatFabCount.length;\r\n            }\r\n\r\n\r\n\r\n\r\n            let matFabFuncCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            matFabFuncCount = matFabFuncCount.length;\r\n\r\n            if(bool_array[2] && bool_array[3] && bool_array[0]) {\r\n              let curMatFabFuncCount = filterArr.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                )\r\n              });\r\n              matFabFuncCount = curMatFabFuncCount.length;\r\n            }\r\n\r\n\r\n            let matFabBodCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            matFabBodCount = matFabBodCount.length;\r\n\r\n\r\n            if(bool_array[2] && bool_array[3] && bool_array[1]) {\r\n              let curMatFabBodCount = filterArr.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n              matFabBodCount = curMatFabBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let funcFabBodCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            funcFabBodCount = funcFabBodCount.length;\r\n\r\n            if(bool_array[2] && bool_array[0] && bool_array[1]) {\r\n              let curFuncFabBodCount = filterArr.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n\r\n              console.log(curFuncFabBodCount);\r\n              funcFabBodCount = curFuncFabBodCount.length;\r\n            }\r\n\r\n            let funcMatBodCount = filterArr.filter((item) => {\r\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            funcMatBodCount = funcMatBodCount.length;\r\n\r\n            if(bool_array[3] && bool_array[0] && bool_array[1]) {\r\n              let curFuncMatBodCount = filterArr.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n              funcMatBodCount = curFuncMatBodCount.length;\r\n            }\r\n\r\n            let allCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            allCount = allCount.length;\r\n\r\n            if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\r\n              let curAllCount = filterArr.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                  (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n\r\n              });\r\n              allCount = curAllCount.length;\r\n            }\r\n\r\n            let w_f = window.innerWidth / 1280;\r\n\r\n            if(w_f < 0.7)\r\n              w_f = 0.7\r\n            else if(w_f > 1.3)\r\n              w_f = 1.3\r\n\r\n            let h_f = window.innerHeight / 1280;\r\n\r\n\r\n            if(h_f < 0.9)\r\n              h_f = 0.9\r\n            else if(h_f > 1.1)\r\n              h_f = 1.1\r\n\r\n\r\n            let w = window.innerWidth * 0.6 * w_f\r\n            let h = window.innerHeight * 0.85 * h_f\r\n\r\n\r\n            const hexagonSize = { x: 11.5, y:  11.5};\r\n\r\n            return (\r\n\r\n             <div className=\"matrixBody\">\r\n             {\r\n               console.log()\r\n             }\r\n             <div className=\"matrixSVG\">\r\n                        <HexGrid width={650 * w_f} height={window.innerHeight * 0.95} viewBox={\"-52 -50 100 100\"}>\r\n                        <Layout size={hexagonSize} flat={true} spacing={1.05} origin={{ x: 0, y: 0 }}>\r\n\r\n                                  <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Fabrication', 'Material', 'Function'])} q={0} r={0} s={0}>\r\n\r\n                                    {(bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + allCount + \")\"}</tspan></text>) :\r\n                                     (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + allCount + \")\"}</tspan></text>)}\r\n                                 </Hexagon>\r\n\r\n                                {/*\r\n                                 <Hexagon q={0} r={2} s={0} stroke=\"green\" fill=\"purple\"/>\r\n                                 <Hexagon q={0} r={-2} s={0} stroke=\"green\" fill=\"purple\"/>\r\n\r\n\r\n                                 <Hexagon q={1} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={1} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                 <Hexagon q={-1} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={-1} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n\r\n                                 <Hexagon q={-2} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={-2} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                 <Hexagon q={2} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={2} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={-3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n\r\n                                <Hexagon q={-4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                */}\r\n                                 <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2], ['BodyZones', 'Fabrication'])} q={0} r={1} s={0}>\r\n\r\n                                   {(bool_array[1] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text>) :\r\n                                    (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text>)}\r\n                                </Hexagon>\r\n\r\n                                <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[3], ['Function', 'Material'])} q={0} r={-1} s={0}>\r\n\r\n                                  {(bool_array[0] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text>) :\r\n                                   (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text>)}\r\n                               </Hexagon>\r\n\r\n                               <Hexagon onClick={() => this.onClick(name_array, bool_array[2], ['Fabrication'])} q={-2} r={2} s={0}>\r\n                                   <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabCount + \")\"}</tspan></text>\r\n                              </Hexagon>\r\n                              <Hexagon onClick={() => this.onClick(name_array, bool_array[3], ['Material'])} q={2} r={-2} s={0}>\r\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(254, 205, 102)\">{name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matCount + \")\"}</tspan></text>\r\n\r\n                             </Hexagon>\r\n\r\n                             <Hexagon onClick={() => this.onClick(name_array, bool_array[2] && bool_array[3], ['Material', 'Fabrication'])} q={1} r={-2} s={0}>\r\n                               {(bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text>) :\r\n                                (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text>)}\r\n\r\n                            </Hexagon>\r\n\r\n                            <Hexagon onClick={() => this.onClick(name_array, bool_array[0], ['Function'])} q={-2} r={0} s={0}>\r\n\r\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcCount + \")\"}</tspan></text>\r\n                           </Hexagon>\r\n\r\n                           <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1], ['Function', 'BodyZones'])} q={-1} r={-1} s={0}>\r\n\r\n                             {(bool_array[0] && bool_array[1]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text>) :\r\n                              (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text>)}\r\n                          </Hexagon>\r\n\r\n                          <Hexagon onClick={() => this.onClick(name_array, bool_array[1], ['BodyZones'])} q={2} r={0} s={0}>\r\n                          <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + bodCount + \")\"}</tspan></text>\r\n\r\n                         </Hexagon>\r\n\r\n                           <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[3], ['BodyZones', 'Material'])} q={2} r={-1} s={0}>\r\n\r\n                             {(bool_array[1] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text>) :\r\n                              (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text>)}\r\n                          </Hexagon>\r\n\r\n                          <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2], ['Function', 'Fabrication'])} q={-2} r={1} s={0}>\r\n\r\n                            {(bool_array[0] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text>) :\r\n                             (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text>)}\r\n                         </Hexagon>\r\n\r\n                         <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[3], ['Function', 'BodyZones', 'Material'])} q={-1} r={0} s={0}>\r\n\r\n                           {(bool_array[0] && bool_array[1] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>) :\r\n                            (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>)}\r\n                        </Hexagon>\r\n\r\n                        <Hexagon q={-1} r={2} s={0}>\r\n                          <Text>Contact Us</Text>\r\n                       </Hexagon>\r\n\r\n                       <Hexagon  q={1} r={1} s={0}>\r\n                         <Text>Contribute</Text>\r\n                      </Hexagon>\r\n\r\n                      <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Material', 'Fabrication'])} q={1} r={0} s={0}>\r\n\r\n                        {(bool_array[1] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text>) :\r\n                         (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text>)}\r\n                     </Hexagon>\r\n\r\n                   <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2], ['Function', 'BodyZones', 'Fabrication'])} q={-1} r={1} s={0}>\r\n\r\n                       {(bool_array[0] && bool_array[1] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text>) :\r\n                        (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text>)}\r\n                    </Hexagon>\r\n\r\n                    <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2] && bool_array[3],  ['Function', 'Material', 'Fabrication'])} q={1} r={-1} s={0}>\r\n\r\n                      {(bool_array[0] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text>) :\r\n                       (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text>)}\r\n                    </Hexagon>\r\n          </Layout>\r\n        </HexGrid>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    filterYear = (item) => {\r\n\r\n      if(item[\"Year\"] === \"\")\r\n        return true\r\n\r\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\r\n    }\r\n\r\n    filterVenue = (item) => {\r\n\r\n      return (this.props.venue === 'All' || item[\"Conference (VENUE)\"].toLowerCase() === this.props.venue.toLowerCase())\r\n    }\r\n\r\n    filterSource = (item) => {\r\n\r\n      if(item[\"Source\"] === \"\" || item[\"Source\"] === \"Both\")\r\n        return true\r\n\r\n      return (this.props.source === 'Both' || item[\"Source\"].toLowerCase() === this.props.source.toLowerCase())\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selFunction: state.selFunction,\r\n        selBodyZones: state.selBodyZones,\r\n        selFabrication: state.selFabrication,\r\n        selMaterial: state.selMaterial,\r\n        searchData: state.searchData,\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\r\n        updateQuery: (name_array, query_param) => dispatch({type: actionTypes.UPDATE_QUERY, names: name_array, params: query_param})\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matrix);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPaneModalTab.css';\r\nimport { CustomInput, Form, FormGroup, Label } from 'reactstrap';\r\nimport * as actionTypes from '../store/actions';\r\n\r\n\r\nclass LeftPaneModalTab extends Component {\r\n\r\n\r\n    constructor(props) {\r\n       super(props);\r\n\r\n       this.state = {\r\n         curInput: '',\r\n       };\r\n    }\r\n\r\n    onSelect = (input, type) => {\r\n        if(type == 'Function') {\r\n\r\n            this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n\r\n\r\n            this.props.onSelectFunction(input);\r\n        }\r\n        else if(type == 'BodyZones') {\r\n\r\n            this.props.onSelectBodyZones(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n        else if(type == 'Fabrication') {\r\n            this.props.onSelectFabrication(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n        else {\r\n            this.props.onSelectMaterial(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    /*\r\n        Use state to save current input.\r\n        Use conditional rendering to render the selected input differently\r\n    */\r\n\r\n    render() {\r\n            let inp = '';\r\n            let curInp = this.state.curInp;\r\n\r\n            inp = this.props.subtypes.map((input) => {\r\n\r\n                return (\r\n                    <div>\r\n                    {(curInp === input) ? (\r\n                    <div style={{background: 'black', color: '#A7AFBA', fontWeight: 'bold'}} onClick={() => this.onSelect(input, this.props.type)}\r\n                    className='modalHover'\r\n                                              key={input}\r\n                     >{input}</div>) : (<div onClick={() => this.onSelect(input, this.props.type)}\r\n                     className='modalHover'\r\n                                                                                      key={input}\r\n                                                             >{input}</div>)}\r\n                                                             </div>\r\n                );\r\n            }\r\n\r\n            )\r\n            return (\r\n\r\n            <div className='leftPaneModalTabBody'>\r\n                  {inp}\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectFunction: (value) => dispatch({type: actionTypes.SELECT_FUNCTION, val: value}),\r\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\r\n        onSelectFabrication: (value) => dispatch({type: actionTypes.SELECT_FABRICATION, val: value}),\r\n        onSelectMaterial: (value) => dispatch({type: actionTypes.SELECT_MATERIAL, val: value}),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LeftPaneModalTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPane.css'\r\nimport LeftPaneModalTab from './LeftPaneModalTab';\r\n\r\nimport { Button, Fade } from 'reactstrap';\r\n\r\nclass LeftPaneModal extends Component {\r\n\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n         listArr: this.props.selArr,\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n            let funcModal = <LeftPaneModalTab style={{height: '25%'}}\r\n                                        type='Function'\r\n                                        subtypes={this.props.functions} />;\r\n\r\n            let bodyModal = <LeftPaneModalTab style={{height: '25%'}}\r\n             type='BodyZones'\r\n            subtypes={this.props.bodyZones} />;\r\n\r\n            let fabModal =  <LeftPaneModalTab style={{height: '25%'}}\r\n            type='Fabrication'\r\n            subtypes={this.props.fabrication} />;\r\n\r\n            let matModal = <LeftPaneModalTab style={{height: '25%'}}\r\n            type='Material'\r\n            subtypes={this.props.material} />;\r\n\r\n            return (\r\n\r\n\r\n            <div className=\"leftPaneModal\">\r\n\r\n                   {funcModal}\r\n                   {fabModal}\r\n                   {matModal}\r\n            </div>\r\n\r\n            );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    console.log(state.arrFunc);\r\n    return {\r\n        functions: state.arrFunc,\r\n        bodyZones: state.arrBod,\r\n        fabrication: state.arrFab,\r\n        material: state.arrMat,\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeftPaneModal);\r\n","import React, { Component } from 'react';\r\n\r\nimport { CardImg, CardBody,\r\n CardSubtitle } from 'reactstrap';\r\n\r\n import HorizontalScroll from 'react-scroll-horizontal'\r\n\r\n import * as actionTypes from '.././store/actions';\r\n import { connect } from 'react-redux';\r\n\r\nimport './searchDisplay.css'\r\n\r\nimport { Card, Button, CardTitle, CardText, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nclass SearchDisplayTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tooltipOpenCost: false,\r\n      tooltipOpenImp: false,\r\n      tooltipOpenWear: false,\r\n    };\r\n\r\n    this.toggleImp = this.toggleImp.bind(this);\r\n    this.toggleCost = this.toggleCost.bind(this);\r\n    this.toggleWear = this.toggleWear.bind(this);\r\n\r\n  }\r\n\r\n  toggleCost = () => {\r\n    this.setState({\r\n      tooltipOpenCost: !this.state.tooltipOpenCost\r\n    });\r\n  }\r\n\r\n  toggleImp = () => {\r\n    this.setState({\r\n      tooltipOpenImp: !this.state.tooltipOpenImp\r\n    });\r\n  }\r\n\r\n  toggleWear = () => {\r\n    this.setState({\r\n      tooltipOpenWear: !this.state.tooltipOpenWear\r\n    });\r\n  }\r\n\r\n  updateBookmark = (name) => {\r\n\r\n    let temp = name.substring(10);\r\n    console.log(temp);\r\n    this.props.updateBookmark(temp);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  let item1 = document.getElementById(\"scroller0\");\r\n  let item2 = document.getElementById(\"scroller1\");\r\n  let item3 = document.getElementById(\"scroller2\");\r\n  let item4 = document.getElementById(\"scroller3\");\r\n  let item5 = document.getElementById(\"scroller4\");\r\n\r\n  window.addEventListener('wheel', function(e) {\r\n\r\n      if(e.y < item1.getBoundingClientRect().bottom) {\r\n        if (e.deltaY > 0) item1.scrollLeft += 100;\r\n        else item1.scrollLeft -= 100;\r\n      }\r\n\r\n      else if(e.y < item2.getBoundingClientRect().bottom) {\r\n        if (e.deltaY > 0) item2.scrollLeft += 100;\r\n        else item2.scrollLeft -= 100;\r\n      }\r\n\r\n      else if(e.y < item3.getBoundingClientRect().bottom) {\r\n        if (e.deltaY > 0) item3.scrollLeft += 100;\r\n        else item3.scrollLeft -= 100;\r\n      }\r\n\r\n      else if(e.y < item4.getBoundingClientRect().bottom) {\r\n        if (e.deltaY > 0) item4.scrollLeft += 100;\r\n        else item4.scrollLeft -= 100;\r\n      }\r\n\r\n      else if(e.y < item5.getBoundingClientRect().bottom) {\r\n        if (e.deltaY > 0) item5.scrollLeft += 100;\r\n        else item5.scrollLeft -= 100;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let inp = '';\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n\r\n    if(this.props.type === 'Research')\r\n      j = 1;\r\n    else if(this.props.type === 'Tutorial')\r\n      j = 2;\r\n    else if(this.props.type === 'Aesthetic Approach')\r\n      j = 3;\r\n    else if(this.props.type === 'Design Concepts')\r\n      j = 4\r\n\r\n    inp = this.props.arr.map((input) => {\r\n\r\n      i++;\r\n      let check = this.props.bookMarks.includes(input[\"Reference Link\"].substring(10));\r\n\r\n\r\n      let wearToken = \"Wear1\";\r\n      if(parseInt(input[\"Wearability\"]) <= 10)\r\n        wearToken = \"Wear1\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 20)\r\n        wearToken = \"Wear2\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 50)\r\n        wearToken = \"Wear3\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 70)\r\n        wearToken = \"Wear4\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 100)\r\n        wearToken = \"Wear5\";\r\n\r\n      let costToken = \"$$\"\r\n\r\n      if(parseInt(input[\"costMetric\"]) > 17)\r\n        costToken = \"$$$\";\r\n      else if(parseInt(input[\"costMetric\"]) >= 6)\r\n        costToken = \"$$\";\r\n      else\r\n        costToken = \"$\";\r\n\r\n\r\n      let col = \"green\";\r\n\r\n      if(parseInt(input[\"impMetric\"]) === 3)\r\n        col = \"red\";\r\n      else if(parseInt(input[\"impMetric\"]) === 2)\r\n        col = \"yellow\";\r\n\r\n      if(input[\"PIC ID\"] === undefined || input[\"PIC ID\"].length == 0)\r\n        return (\r\n          <div />\r\n        )\r\n\r\n      else {\r\n      return (\r\n\r\n        <div className=\"itemStyle\">\r\n\r\n          <div className=\"bgimg\">\r\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\r\n\r\n            <img id=\"image\" src={\"ImageDatabase/\" + input[\"PIC ID\"] + \".jpg\"}  onerror={\"this.onerror=null; this.src=\" + \"ImageDatabase/\" + input[\"PIC ID\"] + \".png\"} alt=\"\" style={{height: '20vh', width: '100%', objectFit: 'cover'}}/>\r\n            </a>\r\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\r\n            <div id=\"title\" className=\"centered\">{(input[\"Reference Name\"].length < 40) ? (input[\"Reference Name\"]) : (input[\"Reference Name\"].substring(0, 40) + \"...\")}</div>\r\n            </a>\r\n\r\n            {(this.props.loggedIn) ? (<div id=\"title\" className=\"ticker\"><Input checked={check} onClick={() => this.updateBookmark(input[\"Reference Link\"])} type=\"checkbox\" />{' '}</div>) : (<div/>)}\r\n\r\n\r\n            <div className=\"cost\"><div style={{backgroundColor: \"#f7f7f7\", borderRadius: \"4px\", opacity: \"0.75\", height: '30%', width: '80%'}}><div style={{ height: \"100%\", fontSize: \"100%\"}}>{costToken}</div></div>\r\n            <div class=\"tooltipCost\">Cost</div>\r\n\r\n            </div>\r\n\r\n            <div className=\"imp\">\r\n                  <div style={{height: '30%', width: '75%', backgroundColor: col}}>\r\n            </div>\r\n            <div class=\"tooltipImp\">Implementation</div>\r\n\r\n            </div>\r\n\r\n            <div className=\"wear\">\r\n                             <img src={\"ImageDatabase/Icons/\" + wearToken + \".png\"}\r\n                              alt=\"\" style={{height: '30%', width: '75%', objectFit: \"cover\"}}/>\r\n                  <div class=\"tooltipWear\">Wearability</div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n      )\r\n    }\r\n    });\r\n\r\n\r\n    return (\r\n      <div className=\"searchStore\">\r\n\r\n        <div className=\"leftPaneSearch\">\r\n            <div className=\"rotate1\">{this.props.type}</div>\r\n        </div>\r\n\r\n        <div className=\"searchTabContent\">\r\n\r\n          <div id={\"scroller\" + this.props.count} className=\"scrollStyle\" style={{display: 'flex', height: \"100%\", overflowX: 'auto', overflowY: 'hidden', flexWrap: \"nowrap\"}}>\r\n            {inp}\r\n          </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateBookmark: (value) => dispatch({type: actionTypes.UPDATE_BOOKMARKS, val: value.toString(0,20)}),\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        bookMarks: state.bookMarks,\r\n\r\n        loggedIn: state.isLoggedIn,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplayTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './searchDisplay.css'\r\nimport SearchDisplayTab from './SearchDisplayTab'\r\nimport ListDisplayTab from './ListDisplayTab'\r\n\r\nimport { Table } from 'reactstrap';\r\n\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass SearchDisplay extends Component {\r\n\r\n\r\n  /*\r\n    Have a list view control variable in state\r\n  */\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n          filterData: [],\r\n          research: [],\r\n          tutorials: [],\r\n          aesthetics: [],\r\n          concepts: [],\r\n          listView: false,\r\n        };\r\n    }\r\n\r\n    filterFunc = (item) => {\r\n\r\n      return (item[\"Function 1\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 2\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 3\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()))\r\n    }\r\n\r\n    filterBod = (item) => {\r\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 2\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 3\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()))\r\n    }\r\n\r\n    filterFab = (item) => {\r\n      return (item[\"Fabrication 1\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()) || item[\"Fabrication 2\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()))\r\n    }\r\n\r\n    filterMat = (item) => {\r\n      return (item[\"Material 1\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 2\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 3\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()))\r\n    }\r\n\r\n    filterYear = (item) => {\r\n\r\n      if(item[\"Year\"] === \"\")\r\n        return true\r\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\r\n    }\r\n\r\n    filterVenue = (item) => {\r\n\r\n      return (this.props.venue === 'All' || item[\"Conference (VENUE)\"].toLowerCase() === this.props.venue.toLowerCase())\r\n    }\r\n\r\n    filterSource = (item) => {\r\n\r\n            if(item[\"Source\"] === \"\" || item[\"Source\"] === \"Both\")\r\n              return true\r\n\r\n            return (this.props.source === 'Both' || item[\"Source\"].toLowerCase() === this.props.source.toLowerCase())\r\n    }\r\n\r\n    shuffleArray = (array) => {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(this.random(i) * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n\r\n      return array;\r\n    }\r\n\r\n    random = (seed) => {\r\n      var x = Math.sin(seed++) * 10000;\r\n      return x - Math.floor(x);\r\n    }\r\n\r\n    render() {\r\n\r\n            let filterArr = this.props.allData;\r\n\r\n            if(!this.props.viewBookmarks) {\r\n                  if(!this.props.searchDisplay) {\r\n\r\n\r\n                          if(this.props.filter) {\r\n\r\n                            filterArr = filterArr.filter(this.filterYear);\r\n                            filterArr = filterArr.filter(this.filterVenue);\r\n                            filterArr = filterArr.filter(this.filterSource);\r\n                          }\r\n                            console.log(filterArr);\r\n\r\n                          if(this.props.params.includes('Function')) {\r\n                             filterArr = filterArr.filter(this.filterFunc);\r\n                          }\r\n\r\n                          if(this.props.params.includes('BodyZones')) {\r\n                             filterArr = filterArr.filter(this.filterBod);\r\n                          }\r\n                          if(this.props.params.includes('Fabrication')) {\r\n                             filterArr = filterArr.filter(this.filterFab);\r\n                          }\r\n                          if(this.props.params.includes('Material')) {\r\n                             filterArr = filterArr.filter(this.filterMat);\r\n                          }\r\n                }\r\n\r\n                else {\r\n\r\n                    filterArr = filterArr.filter((item) => {\r\n                      return item[\"Reference Name\"].toLowerCase().includes(this.props.searchQuery.toLowerCase());\r\n                  });\r\n                }\r\n\r\n\r\n          }\r\n\r\n\r\n          else {\r\n\r\n            filterArr = filterArr.filter((item) => {\r\n\r\n              console.log(item[\"Reference Link\"].substring(10));\r\n              console.log(this.props.bookMarks);\r\n\r\n              return this.props.bookMarks.includes(item[\"Reference Link\"].substring(10));\r\n            });\r\n\r\n          }\r\n\r\n          this.props.filteredArrayUpdate(filterArr);\r\n\r\n          let researchArr = [];\r\n          let tutorialsArr = [];\r\n          let aestheticsArr = [];\r\n          let conceptsArr = [];\r\n          let patentsArr = [];\r\n\r\n          researchArr = filterArr.filter((item) => {\r\n            return item[\"Research\"].trim() === 'x'\r\n          });\r\n\r\n          tutorialsArr = filterArr.filter((item) => {\r\n            return item[\"Tutorial\"].trim() === 'x'\r\n          });\r\n\r\n          aestheticsArr = filterArr.filter((item) => {\r\n            return item[\"Aesthetic Approach\"].trim() === 'x'\r\n          });\r\n\r\n          conceptsArr = filterArr.filter((item) => {\r\n            return item[\"Design Concepts\"].trim() === 'x'\r\n          });\r\n\r\n          patentsArr = filterArr.filter((item) => {\r\n            return item[\"Patents\"].trim() === 'x'\r\n          });\r\n\r\n\r\n          let listView = this.props.listView;\r\n          let i = 1;\r\n          let listContents = filterArr.map((item) => {\r\n            return (\r\n              <tr>\r\n                <th scope=\"row\">{i++}</th>\r\n                <td>{item[\"Reference Name\"]}</td>\r\n                <td>{item[\"Reference Link\"]}</td>\r\n              </tr>\r\n            )\r\n          })\r\n\r\n          let corLabel = \"Pinned/Bookmarks\";\r\n\r\n          if(!this.props.viewBookmarks) {\r\n\r\n            corLabel = \"\";\r\n            if(this.props.params.includes('Function'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[0];\r\n              else {\r\n                corLabel = corLabel + ' + ' + this.props.names[0];\r\n              }\r\n\r\n            if(this.props.params.includes('BodyZones'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[1];\r\n              else {\r\n                corLabel = corLabel + ' + ' + this.props.names[1];\r\n              }\r\n\r\n            if(this.props.params.includes('Fabrication'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[2];\r\n              else {\r\n                corLabel = corLabel + ' + '  + this.props.names[2];\r\n              }\r\n\r\n            if(this.props.params.includes('Material'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[3];\r\n              else {\r\n                corLabel = corLabel + ' + ' + this.props.names[3];\r\n              }\r\n          }\r\n\r\n\r\n          return (\r\n\r\n            <div style={{width: \"92.5%\"}}>\r\n              {(listView) ? (<div className=\"listSearch\">\r\n                    <Table striped>\r\n                    <thead>\r\n                      <th>#</th>\r\n                      <th>Reference Name</th>\r\n                      <th>Link</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {listContents}\r\n                    </tbody>\r\n                  </Table>\r\n              </div>\r\n             ) : (\r\n               <div className=\"layoutSearch\">\r\n                     <SearchDisplayTab count=\"0\" type='Research' arr={this.shuffleArray(researchArr)}/>\r\n                     <SearchDisplayTab count=\"1\" type='Tutorials' arr={this.shuffleArray(tutorialsArr)}/>\r\n                     <SearchDisplayTab count=\"2\" type='Aesthetics' arr={this.shuffleArray(aestheticsArr)}/>\r\n                     <SearchDisplayTab count=\"3\" type='Concepts' arr={this.shuffleArray(conceptsArr)}/>\r\n                    <SearchDisplayTab count=\"4\" type='Patents' arr={this.shuffleArray(patentsArr)}/>\r\n                    <div className=\"bottomBar\">\r\n                    <div onClick={this.props.backToSearch} className=\"backLabel\">\r\n                        <div>{\"<---- Go Back to Search\"}</div>\r\n                    </div>\r\n                      <div className=\"corLabel\">\r\n                          <div>{corLabel}</div>\r\n                      </div>\r\n                    </div>\r\n             </div>)}\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allData: state.searchData,\r\n        names: state.names,\r\n        params: state.params,\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n\r\n        listView: state.listView,\r\n\r\n        searchDisplay: state.searchTermDisplay,\r\n        searchQuery: state.searchTermQuery,\r\n\r\n        viewBookmarks: state.viewBookmarks,\r\n        bookMarks: state.bookMarks,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        filteredArrayUpdate: (value) => dispatch({type: actionTypes.STORE_FILTERED_ARRAY, val: value}),\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplay);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CardImg, CardBody,\r\n CardSubtitle } from 'reactstrap';\r\n\r\nimport './searchDisplay.css'\r\n\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\n\r\nclass ListDisplayTab extends Component {\r\n\r\n  render() {\r\n\r\n    let inp = '';\r\n    let i = 1;\r\n    inp = this.props.arr.map((input) => {\r\n\r\n      return (\r\n        <tr>\r\n          <th scope=\"row\">{i++}</th>\r\n          <td>{input[\"Reference Name\"]}</td>\r\n          <td><a  href={input[\"Reference Link\"]}>{input[\"Reference Link\"]}</a></td>\r\n        </tr>\r\n    )});\r\n\r\n    return (\r\n      <div>\r\n      <h3>{this.props.type}</h3>\r\n      <Table dark>\r\n      <thead>\r\n        <tr>\r\n          <th>Number</th>\r\n          <th>Title</th>\r\n          <th>Link</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {inp}\r\n      </tbody>\r\n    </Table>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ListDisplayTab;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n\r\nclass ColCharts extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n  }\r\n\r\n  render() {\r\n\r\n    const label = this.props.label;\r\n\r\n    /*\r\n      I have search data and I have a label\r\n    */\r\n\r\n    let curList = [];\r\n    let data = [];\r\n    if(this.props.label === 'Function') {\r\n          curList = this.props.function;\r\n\r\n\r\n          curList = curList.map((subType) => {\r\n\r\n          let temp = this.props.searchData.filter((item) => {\r\n\r\n            return (item[\"Function 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n            || item[\"Function 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n            || item[\"Function 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n          });\r\n\r\n          return {name: subType, Results: temp.length}\r\n        });\r\n\r\n\r\n    data = curList;\r\n    }\r\n\r\n    else if(this.props.label === 'Fabrication') {\r\n\r\n      curList = this.props.fabrication;\r\n\r\n\r\n      curList = curList.map((subType) => {\r\n\r\n      let temp = this.props.searchData.filter((item) => {\r\n\r\n        return item[\"Fabrication 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Fabrication 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      });\r\n\r\n      return {name: subType, Results: temp.length}\r\n      });\r\n      data = curList;\r\n    }\r\n\r\n    else {\r\n\r\n      curList = this.props.material;\r\n\r\n\r\n      curList = curList.map((subType) => {\r\n\r\n      let temp = this.props.searchData.filter((item) => {\r\n\r\n        return (item[\"Material 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Material 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Material 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n      });\r\n\r\n      return {name: subType, Results: temp.length}\r\n    });\r\n\r\n\r\n      data = curList;\r\n    }\r\n\r\n\r\n    let fillColor = \"rgb(172, 216, 206)\";\r\n\r\n    if(this.props.label === \"Fabrication\")\r\n      fillColor = \"rgb(133, 194, 219)\";\r\n\r\n    if(this.props.label === \"Material\")\r\n      fillColor = \"rgb(254, 205, 102)\";\r\n\r\n    let w = window.innerWidth / 1280;\r\n    let h = window.innerHeight / 610;\r\n    return (\r\n      <div style={{width: \"50%\", display: \"flex\"}}>\r\n\r\n      <div style={{color: fillColor, fontWeight: \"bold\"}}>{this.props.label}</div>\r\n      <div style={{transform: \"translateX(-30px)\"}}>\r\n            <BarChart width={550 * w} height={240 * h} data={data}\r\n                margin={{top: 5 * h, right: 30 * w, left: 20 * w, bottom: 5 * h}}>\r\n\r\n           <XAxis dataKey=\"name\"/>\r\n           <YAxis/>\r\n           <Tooltip cursor={false}/>\r\n           <Bar style={{fill: fillColor}} dataKey=\"Results\" fill=\"black\" />\r\n          </BarChart>\r\n    </div>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        function: state.functions,\r\n        material: state.material,\r\n        fabrication: state.fabrication,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ColCharts);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n\r\nclass BodyChart extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    let curList = [];\r\n    let data = [];\r\n\r\n    curList = this.props.bodyZones;\r\n\r\n    curList = curList.map((subType) => {\r\n\r\n    let temp = this.props.searchData.filter((item) => {\r\n\r\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      || item[\"Body Zone 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      || item[\"Body Zone 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n    });\r\n\r\n    return {name: subType, value: temp.length}\r\n  });\r\n\r\n    data = curList;\r\n    let out = {};\r\n    for(let i = 0; i < data.length; i++) {\r\n      out[data[i].name] = data[i].value;\r\n    }\r\n\r\n    console.log(out);\r\n\r\n\r\n    let w = window.innerWidth / 1280;\r\n    let h = window.innerHeight / 610;\r\n\r\n    let val = \"translate(\" + 20 * w + \"px, -\" + 30 * h + \"px)\"\r\n\r\n    return (\r\n      <div style={{width: \"50%\", display: \"flex\"}}>\r\n          <div style={{color:\"rgb(239,122,134)\", fontWeight: \"bold\"}}>Body Zones</div>\r\n          <div style={{transform: val, position: \"relative\"}}>\r\n              <img src={\"ImageDatabase/Icons/BodyStats.jpg\"}\r\n               alt=\"\" style={{height: '100%', width: \"55%\", objectFit: \"cover\"}}/>\r\n               <div style={{position: \"absolute\", top: \"16%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Head\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"25%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Back\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"35%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Chest\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"49%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Pelvic Region\"]}</div>\r\n               <div style={{position: \"absolute\", bottom: \"2.5%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Feet\"]}</div>\r\n\r\n               <div style={{position: \"absolute\", top: \"35%\", left: \"43%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Arms\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"48%\", left: \"43%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Wrist and Hand\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"72%\", left: \"43%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Legs\"]}</div>\r\n\r\n               <div style={{position: \"absolute\", top: \"50%\", left: \"55%\", color: \"rgb(239,122,134)\", fontSize: 12 * w * h + 'px'}}>{out[\"Full Body\"]}</div>\r\n\r\n           </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        bodyZones: state.bodyZones,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(BodyChart);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport 'rc-slider/assets/index.css';\r\nimport './filterBody.css'\r\nimport Slider from 'rc-slider';\r\nimport * as actionTypes from '.././store/actions';\r\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\r\nimport { ButtonDropdown, Progress, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nimport ColCharts from './ColCharts'\r\nimport BodyChart from './BodyChart'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport { Label } from 'semantic-ui-react'\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = Slider.Range;\r\n\r\nclass FilterBody extends Component {\r\n\r\n    constructor(props) {\r\n          super(props);\r\n\r\n\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n          this.state = {\r\n            dropdownOpen: false,\r\n            venue: 'All',\r\n            modal: false,\r\n            showLabels: true,\r\n\r\n            sourceInit: 0,\r\n          };\r\n    }\r\n\r\n    toggleStats = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n\r\n      this.props.filterToggle();\r\n\r\n    }\r\n\r\n    toggle() {\r\n\r\n      this.setState(prevState => ({\r\n        dropdownOpen: !prevState.dropdownOpen,\r\n        showLabels: !prevState.showLabels\r\n      }));\r\n   }\r\n\r\n     onChange = (value) => {\r\n\r\n       console.log(value[1]);\r\n\r\n      this.props.filterData();\r\n      this.props.filterYear(value[0], value[1]);\r\n    }\r\n\r\n    onVenueClick = (value) => {\r\n\r\n      let val = value.split(\" (\");\r\n\r\n      console.log(val[0]);\r\n      this.setState({\r\n        venue: val[0],\r\n      });\r\n\r\n      this.props.filterVenue(val[0]);\r\n    }\r\n\r\n    onSourceClick = (value) => {\r\n\r\n      let temp = value;\r\n\r\n      if(this.state.sourceInit != 0) {\r\n      if(value === 'Engineering') {\r\n\r\n        if(this.props.source === 'Both')\r\n          temp = \"Fashion\"\r\n        else {\r\n          temp = \"Both\"\r\n        }\r\n\r\n      }\r\n      else if(value === 'Fashion') {\r\n\r\n        if(this.props.source === 'Both')\r\n          temp = \"Engineering\"\r\n        else {\r\n          temp = \"Both\"\r\n        }\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.setState(prevState => ({\r\n        sourceInit: !prevState.sourceInit + 1,\r\n      }));\r\n    }\r\n\r\n    this.props.filterSource(temp);\r\n    }\r\n\r\n    render() {\r\n\r\n      let w = window.innerWidth / 1280;\r\n      let h = window.innerHeight / 610;\r\n\r\n      let venueArr = this.props.searchData;\r\n\r\n      if(!this.props.mainPage) {\r\n\r\n        venueArr = this.props.curSearchData\r\n      }\r\n      venueArr = venueArr.map((venue) => venue[\"Conference (VENUE)\"]);\r\n      venueArr.unshift('All')\r\n\r\n      venueArr = venueArr.map((venue) => {\r\n\r\n        if(this.props.mainPage) {\r\n              if(venue === 'All')\r\n                  return venue + \" (\" + this.props.searchData.length + \")\";\r\n\r\n              let temp = this.props.searchData.filter((item) => item[\"Conference (VENUE)\"].toLowerCase() === venue.toLowerCase());\r\n\r\n\r\n              return venue + \" (\" + temp.length + \")\";\r\n          }\r\n          else {\r\n\r\n            if(venue === 'All')\r\n              return venue + \" (\" + this.props.curSearchData.length + \")\";\r\n            let temp = this.props.curSearchData.filter((item) => item[\"Conference (VENUE)\"].toLowerCase() === venue.toLowerCase());\r\n\r\n            return venue + \" (\" + temp.length + \")\";\r\n          }\r\n          return venue;\r\n\r\n      });\r\n\r\n\r\n      let myData = this.props.searchData;\r\n\r\n      if(!this.props.mainPage) {\r\n        myData = this.props.curSearchData\r\n      }\r\n      let filterEngineering = myData.filter((item) => {\r\n        return (item[\"Source\"] === \"Engineering\" || item[\"Source\"] === \"Both\")\r\n      });\r\n\r\n      let filterFashion = myData.filter((item) => {\r\n        return (item[\"Source\"] === \"Fashion\" || item[\"Source\"] === \"Both\")\r\n      });\r\n\r\n      let engLength = filterEngineering.length;\r\n      let fashLength = filterFashion.length;\r\n\r\n      engLength = engLength * 100 / (engLength + fashLength);\r\n      fashLength = 100 - engLength;\r\n\r\n      venueArr = [...new Set(venueArr)];\r\n\r\n      venueArr = venueArr.map((venue) => {\r\n        return (\r\n          <DropdownItem onClick={() => this.onVenueClick(venue)}>{venue}</DropdownItem>\r\n        )\r\n      });\r\n\r\n      const style = { width: 400 * w, margin: 50 * w};\r\n\r\n      const dataPie = [\r\n          {value: 25, color: \"black\", title: \"Function\"},\r\n          {value: 50, color: \"red\", title: \"BodyZones\"},\r\n          {value: 30, color: \"green\", title: \"Material\"},\r\n          {value: 20, color: \"blue\", title: \"Fabrication\"},\r\n      ]\r\n\r\n\r\n      let yearData = [];\r\n\r\n      for(let i = 1990; i <= 2019; i++) {\r\n\r\n        let temp = myData.filter((item) => {\r\n\r\n          return item[\"Year\"] === i.toString();\r\n        })\r\n\r\n        yearData = [\r\n            ...yearData,\r\n            {\r\n              name: i.toString(),\r\n              Projects: temp.length,\r\n            }\r\n        ];\r\n      }\r\n\r\n        const closeBtn = <Button onClick={this.toggleStats} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n      return (\r\n          <div>\r\n              <div style={{ fontSize: \"120%\"}}>Time Frame</div>\r\n              <BarChart width={288 * w} height={150 * h} data={yearData}\r\n                  margin={{top: 5 * h, right: 30 * w, left: 0, bottom: 0}}>\r\n                  <XAxis dataKey=\"name\" hide={true}/>\r\n                  <Tooltip cursor={false}/>\r\n                  <Bar dataKey=\"Projects\" />\r\n             </BarChart>\r\n\r\n              <Range handleStyle={[{ backgroundColor: 'black'}, {backgroundColor: 'black' }]} trackStyle={[{ backgroundColor: 'grey', height: 6 * h + \"px\"}]}\r\n              allowCross={false}  railStyle={{ backgroundColor: 'black' }} min={1990} max={2019} defaultValue={[this.props.minYear, this.props.maxYear]} onChange={(value) => this.onChange(value)} />\r\n              <div>{this.props.minYear}<span style={{float: \"right\"}}>{this.props.maxYear}</span></div>\r\n              <br />\r\n\r\n              <div style={{ marginTop: \"1%\", fontSize: \"120%\"}}>Publication Venue</div>\r\n              <ButtonDropdown style={{width:\"100%\", height: 20 * h + 'px'}} isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                      <DropdownToggle style={{backgroundColor: \"white\", color: \"black\"}} caret>\r\n                        <div style={{ transform: \"translateY(-25%)\"}}>{this.state.venue}</div>\r\n                      </DropdownToggle>\r\n                      <DropdownMenu className=\"dropdownStyle\" style={{width:\"100%\", overflowY:\"scroll\", height: window.innerHeight * 0.4}}>\r\n                        {venueArr}\r\n                      </DropdownMenu>\r\n              </ButtonDropdown>\r\n\r\n              <div style={{ marginTop: \"4%\", fontSize: \"120%\"}}>Filter by:</div>\r\n              <div style={{marginTop: \"2%\"}}>\r\n                {(this.props.source === 'Both' || this.props.source === 'Engineering') ? (<Button style={{width: \"40%\"}} className=\"btnSelectorClicked\" onClick={() => this.onSourceClick(\"Engineering\")}>Engineering</Button>)\r\n                  : (<Button style={{width: \"40%\"}} className=\"btnSelector\" onClick={() => this.onSourceClick(\"Engineering\")}>Engineering</Button>)}\r\n                {(this.props.source === 'Both' || this.props.source === 'Fashion') ? (<Button className=\"btnSelectorClicked\" style={{float: \"right\", width: \"40%\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)\r\n                 : (<Button className=\"btnSelector\" style={{float: \"right\", width: \"40%\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)}\r\n              </div>\r\n\r\n              <div style={{ marginTop: \"3%\", fontSize: \"120%\"}}>\r\n                % Contribution\r\n              </div>\r\n              <div style={{marginTop: '3%', marginLeft: '10px'}}>\r\n                {(this.state.showLabels) ? (<><Label style={{transform: \"translateY(4px)\", backgroundColor: \"#f98686\"}} key=\"Orange\" />{' '}<span>Engineering</span>{' '}\r\n                <Label style={{transform: \"translateY(4px)\", marginLeft: \"10px\"}} color=\"red\" key=\"red\" />{' '}<span>Fashion</span>{' '}</>) : (<div style={{height: \"2vh\"}}>Placeholder</div>)}\r\n\r\n                  <br />\r\n                  <div>\r\n                  <br />\r\n                  <Progress multi>\r\n                    <Progress className=\"engStyle\" bar value={engLength} />\r\n                    <Progress bar color=\"danger\" value={fashLength} />\r\n                  </Progress>\r\n                  </div>\r\n              </div>\r\n\r\n              <div style={{marginTop: \"10%\", marginLeft: \"20%\"}}>\r\n                <Button style={{width: \"75%\"}} onClick={this.toggleDisplay} outline color=\"secondary\">{(this.props.listView) ? (\"View Results in Original Form\") : (\"View Results in List Form\")}</Button>{' '}\r\n              </div>\r\n\r\n              {(this.props.loggedIn) ? (<div style={{marginTop: \"5%\", marginLeft: \"20%\"}}>\r\n                <Button style={{width: \"75%\"}} onClick={this.toggleBookmarks} outline color=\"secondary\">{(this.props.viewBookmarks) ? (\"View all Results\") : (\"View Pinned/Bookmarks\")}</Button>{' '}\r\n              </div>) : (<div/>)}\r\n\r\n              <div style={{marginTop: \"5%\", marginLeft: \"20%\", zIndex: \"2500 !important\"}}>\r\n\r\n\r\n                      <Button style={{width: \"75%\"}} outline color=\"secondary\" onClick={this.toggleStats}>Resource Statistics</Button>\r\n\r\n                      <Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.modal} toggle={this.toggle}>\r\n                        <ModalHeader close={closeBtn} style={{backgroundColor: \"black\", color: \"white\"}} toggle={this.toggleStats}>Resource Statistics</ModalHeader>\r\n\r\n                        <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\"}}>\r\n\r\n                            <div style={{display: \"flex\", height: \"49%\"}}>\r\n                               <ColCharts label=\"Function\" />\r\n                               <ColCharts label=\"Material\" />\r\n                            </div>\r\n\r\n                            <div style={{display: \"flex\",height: \"49%\", marginTop: \"2%\"}}>\r\n                               <ColCharts label=\"Fabrication\" />\r\n                               <BodyChart />\r\n                            </div>\r\n\r\n                        </ModalBody>\r\n\r\n                      </Modal>\r\n           </div>\r\n\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n    toggleDisplay = () => {\r\n\r\n      this.props.toggleDisplay();\r\n    }\r\n\r\n    toggleBookmarks = () => {\r\n\r\n      this.props.toggleBookmarks();\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        filterData: () => dispatch({type: actionTypes.FILTER_DATA}),\r\n        filterYear: (minYear, maxYear) => dispatch({type: actionTypes.FILTER_YEAR, minYear: minYear, maxYear: maxYear}),\r\n        filterVenue: (venue) => dispatch({type: actionTypes.FILTER_VENUE, val: venue}),\r\n        filterSource: (source) => dispatch({type: actionTypes.FILTER_SOURCE, val: source}),\r\n        toggleDisplay: () => dispatch({type: actionTypes.TOGGLE_DISPLAY}),\r\n        toggleBookmarks: () =>  dispatch({type: actionTypes.VIEW_BOOKMARKS}),\r\n\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n        searchData: state.searchData,\r\n        listView: state.listView,\r\n        viewBookmarks: state.viewBookmarks,\r\n\r\n        loggedIn: state.isLoggedIn,\r\n\r\n        curSearchData: state.currentFilteredArray,\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBody);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './filterBody.css'\r\n\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nimport FilterBody from './FilterBody';\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass FilterPane extends Component {\r\n\r\n  /*\r\n    Make a boolean in store, whether results to be displayed are from searchQuery\r\n    Store the search query itself\r\n\r\n    Define an action to store search query\r\n  */\r\n\r\n\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n      this.state = {\r\n        value: '',\r\n        popoverOpen: false,\r\n        visibility: 'visible',\r\n      };\r\n    }\r\n\r\n    toggleVisibility = () => {\r\n      if(this.state.visibility === 'visible') {\r\n        this.setState({\r\n          visibility: 'hidden',\r\n        });\r\n      }\r\n      else {\r\n        this.setState({\r\n          visibility: 'visible',\r\n        });\r\n      }\r\n\r\n      console.log(this.state.visibility);\r\n    }\r\n\r\n    toggle() {\r\n      this.setState({\r\n        popoverOpen: !this.state.popoverOpen\r\n      });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n       this.setState({value: event.target.value});\r\n     }\r\n\r\n   handleSubmit = (event) => {\r\n\r\n     this.props.toggleDisplay();\r\n     this.props.searchTermDisplayUpdate();\r\n     this.props.searchTermQueryUpdate(this.state.value);\r\n\r\n     this.setState({value: ''});\r\n     event.preventDefault();\r\n\r\n   }\r\n\r\n   toggleHome = () => {\r\n\r\n     this.props.toggleBack();\r\n     this.props.logout();\r\n  }\r\n\r\n    render() {\r\n\r\n      let val = 'translate(0, 33vh)';\r\n      let popVal = 'translate(0%, 0%)'\r\n\r\n\r\n      if(this.state.popoverOpen){\r\n        popVal = 'translate(-1250%, 0%)';\r\n      }\r\n      let w = window.innerWidth * 0.22\r\n      let h = window.innerHeight;\r\n\r\n      return (\r\n\r\n      <div className={(this.props.move) ? ((!this.props.listView) ? (\"filterTabMove\") : (\"filterTabExtra\")) : (\"filterTab\")}>\r\n\r\n        <div style={{display: \"flex\"}}>\r\n\r\n          <div className=\"searchBar\">\r\n          <form onSubmit={this.handleSubmit} id=\"demo-2\">\r\n            <input type=\"search\" placeholder=\"Search\" value={this.state.value} onChange={this.handleChange} />\r\n          </form>\r\n          </div>\r\n\r\n          <div>\r\n              <img onClick={this.toggleHome} className=\"homeButton\" src={\"ImageDatabase/Icons/MiniHome.png\"}\r\n               alt=\"\" style={{width: '60%', height: \"100%\", transform: \"translate(55%, 25%)\", objectFit: \"cover\"}}/>\r\n          </div>\r\n      </div>\r\n\r\n          <div style={{height: \"25%\"}}>\r\n              <div style={{transform: val, height: \"100%\", zIndex: \"999\"}}>\r\n                  <div className=\"rotate6\" style={{ transform:  popVal}} id={'PopoverFilter'}>\r\n                      <div className=\"innerText\"></div>\r\n                  </div>\r\n              </div>\r\n\r\n\r\n               <Popover hideArrow={true} style={{width: w, maxWidth: w, height: h, maxHeight: h + \" !important\", color: \"black\", overflowY: \"hide\", backgroundColor: \"black\", zIndex: \"10\"}} placement=\"right\" isOpen={this.state.popoverOpen} target={'PopoverFilter'} toggle={this.toggle}>\r\n                 <PopoverHeader style={{fontSize: \"150%\", width: \"100%\", height: \"5%\", backgroundColor: \"black\", color: \"white\"}}>Data Filter</PopoverHeader>\r\n                 <PopoverBody style={{color: \"black\", width: \"100%\", height: \"95%\", fontWeight: \"500\", backgroundColor: \"black\", color: \"white\"}}><FilterBody filterToggle={this.toggleVisibility} showLoop={this.props.showLoop} mainPage={this.props.mainPage}/></PopoverBody>\r\n               </Popover>\r\n               </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        searchTermDisplayUpdate: () => dispatch({type: actionTypes.SEARCH_TERM_DISPLAY}),\r\n        searchTermQueryUpdate: (value) => dispatch({type: actionTypes.SEARCH_TERM_QUERY, val: value}),\r\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\r\n\r\n        logout: () => dispatch({type: actionTypes.AUTH_FAILURE}),\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listView: state.listView,\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPane);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\nimport ColCharts from './ColCharts'\r\nimport BodyChart from './BodyChart'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass BodyZones extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n          zone: 'none',\r\n          modal: false\r\n        };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  componentWillMount = props => {\r\n    this.clickTimeout = null\r\n  }\r\n\r\n  handleClicks = (area) => {\r\n    if (this.clickTimeout !== null) {\r\n      this.doubleClicked(\"Full Body\")\r\n      clearTimeout(this.clickTimeout)\r\n      this.clickTimeout = null\r\n    } else {\r\n\r\n      this.clickTimeout = setTimeout(()=>{\r\n      this.clicked(area)\r\n      clearTimeout(this.clickTimeout)\r\n        this.clickTimeout = null\r\n      }, 400)\r\n    }\r\n  }\r\n\r\n  doubleClicked = (area) => {\r\n\r\n    this.setState({\r\n      zone: area\r\n    });\r\n\r\n    this.props.onSelectBodyZones(area);\r\n  }\r\n\r\n  clicked = (area) => {\r\n\r\n    if(this.state.name === 'none') {\r\n\r\n      this.setState({\r\n        zone: area.name\r\n      });\r\n\r\n      this.props.onSelectBodyZones(area.name);\r\n    }\r\n\r\n    else {\r\n\r\n      if(area.name != this.state.zone) {\r\n\r\n        this.setState({\r\n          zone: area.name\r\n        });\r\n\r\n        this.props.onSelectBodyZones(area.name);\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          zone: 'none'\r\n        });\r\n      }\r\n   }\r\n\t}\r\n\r\n    render() {\r\n\r\n      let img = \"ImageDatabase/HumanBody/Androgynous.png\";\r\n\r\n      if(this.state.zone === 'Full Body')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_fullbody.png\";\r\n\r\n      else if(this.state.zone === 'Head')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_head.png\";\r\n\r\n      else if(this.state.zone === 'Chest')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_chest.png\";\r\n\r\n      else if(this.state.zone === 'Back')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_back.png\";\r\n\r\n      else if(this.state.zone === 'Pelvic Region')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_pelvicregion.png\";\r\n\r\n      else if(this.state.zone === 'Legs')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_legs.png\";\r\n\r\n      else if(this.state.zone === 'Feet')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_feet.png\";\r\n\r\n      else if(this.state.zone === 'Arms')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_arm.png\";\r\n\r\n      else if(this.state.zone === 'Wrist and Hand')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_handnwrist.png\";\r\n\r\n\r\n\r\n        let w = window.innerWidth / 1280\r\n        let h = window.innerHeight / 610\r\n\r\n\r\n      let myMap = {\r\n          name: \"my-map\",\r\n          areas: [\r\n          {name: \"Head\", shape: \"rect\", coords: [93 * w, 0 * h, 133 * w, 57 * h], fillColor: \"transparent\"},\r\n          {name: \"Chest\", shape: \"rect\", coords: [83 * w, 60 * h, 113 * w, 180 * h], fillColor: \"transparent\"},\r\n          {name: \"Back\", shape: \"rect\", coords: [113 * w, 60 * h, 143 * w, 180 * h], fillColor: \"transparent\"},\r\n          {name: \"Pelvic Region\", shape: \"rect\", coords: [73 * w, 168 * h, 153 * w, 214 * h], fillColor: \"transparent\"},\r\n          {name: \"Legs\", shape: \"rect\", coords: [73 * w, 214 * h, 153 * w, 368 * h], fillColor: \"transparent\"},\r\n          {name: \"Feet\", shape: \"rect\", coords: [58 * w, 368 * h, 148 * w, 400 * h], fillColor: \"transparent\"},\r\n\r\n          {name: \"Arms\", shape: \"rect\", coords: [43 * w, 67 * h, 83 * w, 174 * h], fillColor: \"transparent\"},\r\n          {name: \"Arms\", shape: \"rect\", coords: [143 * w, 67 * h, 171 * w, 170 * h], fillColor: \"transparent\"},\r\n\r\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [28 * w, 174 * h, 63 * w, 215 * h], fillColor: \"transparent\"},\r\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [158 * w, 174 * h, 193 * w, 215 * h], fillColor: \"transparent\"}\r\n          ]\r\n      }\r\n\r\n            const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n            return (\r\n             <div className=\"container\">\r\n                 <div style={{transform: \"translate(0%, 20%)\"}}>\r\n                       <ImageMapper src={img} map={myMap} width={265 * w} height={400 * h}\r\n                        \tonClick={area => this.handleClicks(area)}\r\n                        />\r\n                        <div style={{marginTop: \"10%\", transform: \"translateX(-3%)\", color: \"white\", fontWeight: \"600\", fontSize: \"small\"}}>\r\n                            <div>CLICK TO SELECT</div>\r\n                            <div>BODY ZONES</div>\r\n                            <div style={{ fontSize: \"smaller\"}}><b>(</b>DOUBLE CLICK FOR</div>\r\n                            <div style={{ fontSize: \"smaller\"}}>FULL BODY SELECTION<b>)</b></div>\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(BodyZones);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomePage.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport {Alert} from 'reactstrap';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nclass HomePage extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n          zone: 'none',\r\n          signUpEmail: '',\r\n          signUpUsername: '',\r\n          signUpPassword: '',\r\n          signUpWarning: '',\r\n          loginUsername: '',\r\n          loginPassword: '',\r\n          loginWarning: '',\r\n          modal: false\r\n        };\r\n\r\n      this.onSignUpEmailChange = this.onSignUpEmailChange.bind(this);\r\n      this.onSignUpUsernameChange = this.onSignUpUsernameChange.bind(this);\r\n      this.onSignUpPasswordChange = this.onSignUpPasswordChange.bind(this);\r\n      this.onSignUpWarningChange = this.onSignUpWarningChange.bind(this);\r\n\r\n      this.onLoginUsernameChange = this.onLoginUsernameChange.bind(this);\r\n      this.onLoginPasswordChange = this.onLoginPasswordChange.bind(this);\r\n      this.onLoginWarningChange = this.onLoginWarningChange.bind(this);\r\n\r\n      this.onSignUpSubmit = this.onSignUpSubmit.bind(this);\r\n      this.onLoginSubmit = this.onLoginSubmit.bind(this);\r\n  }\r\n\r\n    toggle = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n    }\r\n\r\n    onSignUpWarningChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpWarning: 'Invalid credentials',\r\n      });\r\n    }\r\n\r\n    onLoginWarningChange = (event) => {\r\n\r\n      this.setState({\r\n        loginWarning: 'Invalid credentials',\r\n      });\r\n    }\r\n\r\n    onSignUpUsernameChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpUsername: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginUsernameChange = (event) => {\r\n\r\n      this.setState({\r\n        loginUsername: event.target.value,\r\n      });\r\n    }\r\n\r\n\r\n    onSignUpEmailChange = (event) => {\r\n\r\n\r\n      this.setState({\r\n        signUpEmail: event.target.value,\r\n      });\r\n    }\r\n\r\n    onSignUpPasswordChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpPassword: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginPasswordChange = (event) => {\r\n\r\n      this.setState({\r\n        loginPassword: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginSubmit = () => {\r\n\r\n      let success = true;\r\n      let bookMarks = [];\r\n\r\n      let authSuccess = this.props.authSuccess;\r\n      let toggleDisp = this.props.toggle;\r\n\r\n      let onLoginWarningChange = this.onLoginWarningChange;\r\n\r\n      let jsonToSend = JSON.stringify({\r\n           username: this.state.loginUsername,\r\n           password: this.state.loginPassword\r\n       })\r\n\r\n       let pwd = this.state.loginPassword;\r\n\r\n       var request = new Request('https://chimerabackend.herokuapp.com/api/login/', {\r\n             method: 'POST',\r\n             headers: {\r\n               'Content-Type': 'application/json',\r\n             },\r\n             body: jsonToSend\r\n           });\r\n       fetch(request).then(function(response){\r\n\r\n          if(response.status.toString() === '200') {\r\n             response.text().then(function(text) {\r\n\r\n                 var objReceived = JSON.parse(text);\r\n                 if (objReceived.message === 'SUCCESS') {\r\n\r\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\r\n                    toggleDisp();\r\n                 }\r\n                 else {\r\n\r\n                     onLoginWarningChange();\r\n\r\n                 }\r\n             })\r\n           }\r\n\r\n           else {\r\n             onLoginWarningChange();\r\n           }\r\n       })\r\n\r\n    }\r\n\r\n    onSignUpSubmit = () => {\r\n\r\n      let success = true;\r\n      let bookMarks = [];\r\n\r\n      let authSuccess = this.props.authSuccess;\r\n      let toggleDisp = this.props.toggle;\r\n\r\n      let onSignUpWarningChange = this.onSignUpWarningChange;\r\n\r\n      let pwd = this.state.signUpPassword;\r\n\r\n      let jsonToSend = JSON.stringify({\r\n           username: this.state.signUpUsername,\r\n           email: this.state.signUpEmail,\r\n           password: this.state.signUpPassword\r\n       })\r\n\r\n       var request = new Request('https://chimerabackend.herokuapp.com/api/signup/', {\r\n             method: 'POST',\r\n             headers: {\r\n               'Content-Type': 'application/json',\r\n             },\r\n             body: jsonToSend\r\n           });\r\n       fetch(request).then(function(response){\r\n\r\n          if(response.status.toString() === '200') {\r\n             response.text().then(function(text) {\r\n\r\n                 var objReceived = JSON.parse(text);\r\n                 if (objReceived.message === 'SUCCESS') {\r\n\r\n                    console.log(objReceived);\r\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\r\n                    toggleDisp();\r\n                 }\r\n                 else {\r\n\r\n                     onSignUpWarningChange();\r\n\r\n                 }\r\n             })\r\n           }\r\n\r\n           else {\r\n             onSignUpWarningChange();\r\n           }\r\n       })\r\n    }\r\n\r\n    render() {\r\n\r\n      const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n      /*\r\n        Make sign up warning and login warning in store and if success, call searchDisplay or toggleSearchDisplay.\r\n        Whateva\r\n      */\r\n\r\n\r\n\r\n      return (\r\n\r\n      <div style={{height: \"100vh\", width:\"100vw\", backgroundSize: \"cover\", backgroundColor: \"black\"}}>\r\n\r\n      <div style={{height: '50%', width: '50%'}}>\r\n      <img src={\"ImageDatabase/Icons/Home.png\"}\r\n       alt=\"\" style={{width: '50vw', transform: \"translate(26vw, 18vh)\", objectFit: \"cover\"}}/>\r\n      </div>\r\n\r\n         <div className=\"containerHome\">\r\n\r\n         <div style={{color: \"white\", textAlign: \"center\", marginLeft: \"5%\", marginTop: \"5%\"}}>Welcome to Chimera, an interactive search engine for Wearables</div>\r\n\r\n         <Button outline size=\"lg\" style={{color: \"white\", marginLeft: \"50%\", marginTop: \"2%\", borderStyle: \"thin\", borderColor: \"white\", borderRadius: \"2px\"}} color=\"black\" onClick={this.toggle}>Enter</Button>{' '}\r\n\r\n         <Modal size=\"lg\" style={{backgroundColor: \"black\", maxWidth: '90vw',  maxHeight: '90vh', width: '90vw', height: '90vh'}} isOpen={this.state.modal} toggle={this.toggle}>\r\n\r\n           <ModalBody style={{backgroundColor: \"black\", color: \"white\"}}>\r\n           <div style={{display: \"flex\"}}>\r\n            <div style={{width: \"30%\", marginTop: \"1.25%\"}}>\r\n               <Form>\r\n                      {(this.state.loginWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.loginWarning}</div>) : (<div></div>)}\r\n                       <div>Username</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onLoginUsernameChange} value={this.state.loginUsername}/>\r\n\r\n                       <div style={{marginTop: \"4.83%\"}}>Password</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onLoginPasswordChange} value={this.state.loginPassword} />\r\n\r\n                     <Button onClick={this.onLoginSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Login</Button>\r\n                </Form>\r\n            </div>\r\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\r\n               <Form>\r\n                        {(this.state.signUpWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.signUpWarning}</div>) : (<div></div>)}\r\n                       <div style={{marginTop: \"10px\"}}>Username</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onSignUpUsernameChange} value={this.state.signUpUsername}/>\r\n\r\n                       <div style={{marginTop: \"10px\"}}>Email</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\" onChange={this.onSignUpEmailChange} value={this.state.signUpEmail}/>\r\n\r\n                       <div style={{marginTop: \"10px\"}}>Password</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onSignUpPasswordChange} value={this.state.signUpPassword} />\r\n\r\n                      <Button onClick={this.onSignUpSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Sign Up</Button>\r\n                </Form>\r\n            </div>\r\n\r\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\r\n               <Form>\r\n                       <div style={{marginTop: \"10px\"}}>Username</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\"/>\r\n\r\n                      <Button onClick={this.props.toggle} style={{marginTop: \"10%\", marginLeft: \"35%\"}} color=\"secondary\">Guest Mode</Button>\r\n                </Form>\r\n            </div>\r\n\r\n            </div>\r\n            <img src={\"ImageDatabase/Icons/Home.png\"}\r\n             alt=\"\" style={{width: '20%', height: \"30%\", transform: \"translate(200%, 100%)\", objectFit: \"cover\"}}/>\r\n           </ModalBody>\r\n\r\n         </Modal>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        function: state.functions,\r\n        material: state.material,\r\n        fabrication: state.fabrication,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authSuccess: (valuename, valuepass, value) => dispatch({type: actionTypes.AUTH_SUCCESS, valName: valuename, valPassword: valuepass, val: value}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\nimport \"react-awesome-popover/build/index.css\";\r\nimport { connect } from 'react-redux';\r\nimport LeftPane from './components/LeftPane';\r\nimport Matrix from './components/Matrix';\r\nimport LeftPaneModal from './components/LeftPaneModal';\r\nimport SearchDisplay from './components/SearchDisplay';\r\nimport FilterPane from './components/FilterPane';\r\nimport BodyZones from './components/BodyZones';\r\nimport HomePage from './components/HomePage'\r\nimport { Button, Fade } from 'reactstrap';\r\nimport Tabletop from 'tabletop';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport * as actionTypes from './store/actions';\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        data: [],\r\n        displayHome: true,\r\n      }\r\n  }\r\n\r\n  toggleToSearch = () => {\r\n\r\n    this.setState({\r\n      displayHome: false,\r\n    })\r\n  }\r\n\r\n  toggleBack = () => {\r\n\r\n    this.setState({\r\n      displayHome: true,\r\n    })\r\n  }\r\n\r\n/*\r\n    1) Create a modal for login when start is clicked\r\n    2) Make a state variable, isLoggen in, only display bookmark related features if user is indeed logged in\r\n*/\r\n    componentDidMount() {\r\n\r\n        Tabletop.init({\r\n          key: '19SNEbgmJqzFkXajdTnCDN5S6-PHmqFIGoN_MCFeOMcc',\r\n          callback: googleData => {\r\n\r\n            let temp = googleData[\"Sheet1\"].elements;\r\n\r\n            let wearability = this.computeWearability(googleData[\"Wearability\"].elements);\r\n            let costmetric = this.computeCostMetric(googleData[\"Sheet1\"].elements);\r\n            let impMetric = this.computeImplementationMetric(googleData[\"Sheet1\"].elements);\r\n            for(let i = 0; i < temp.length; i++) {\r\n                  temp[i] = {\r\n                 ...temp[i],\r\n                 Wearability: wearability[i][\"Wearability\"],\r\n                 costMetric: costmetric[i][\"costMetric\"],\r\n                 impMetric: impMetric[i][\"impMetric\"],\r\n               };\r\n            }\r\n\r\n            console.log(temp);\r\n            this.props.updateSearchData(temp);\r\n          },\r\n          simpleSheet: false\r\n        })\r\n\r\n    }\r\n\r\n    computeImplementationMetric = (data) => {\r\n\r\n      let fabricationChart =\r\n      {\"laser cutting\":\t3,\"3d printing\":\t9,\"layering\": 1,\"printing\": 3,\"painting\": 3,\r\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 9,\"soldering\":\t3,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\r\n       \"knit\": 9,\"embroidery and applique\":\t9,\r\n       \"patchwork and patterning\": 3,\"woven\": 3,\"non woven\":\t3,\r\n      \"machining\":\t3,\"cut and sew\":\t1, \"joining\": 1};\r\n\r\n      let functionChart =\r\n        {'storage': 1, 'breathability': 3, 'energy harvesting': 9, 'feedback': 9,\r\n         'display': 3, 'electronic connections': 3, 'wireless communication': 9, 'control': 9, 'movement': 3,\r\n          'sensing': 3, 'protective': 1, 'magnetic': 1, 'cognitive': 9, 'modularity': 3, 'emissivity': 3,\r\n        'wearability': 3, 'morphology': 3, 'aesthetics': 3, 'gestures': 3};\r\n\r\n      let impMetric = [];\r\n\r\n      for(let i = 0; i < data.length; i++) {\r\n\r\n          let fabScore = 0;\r\n          let funcScore = 0;\r\n\r\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\r\n            fabScore += fabricationChart[data[i][\"Fabrication 1\"].toLowerCase()];\r\n          }\r\n\r\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\r\n            fabScore += fabricationChart[data[i][\"Fabrication 2\"].toLowerCase()];\r\n          }\r\n\r\n          if(data[i][\"Function 1\"].toLowerCase() in functionChart) {\r\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 1\"].toLowerCase()]);\r\n          }\r\n\r\n          if(data[i][\"Function 2\"].toLowerCase() in functionChart) {\r\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 2\"].toLowerCase()]);\r\n          }\r\n\r\n          if(data[i][\"Function 3\"].toLowerCase() in functionChart) {\r\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 3\"].toLowerCase()]);\r\n          }\r\n\r\n          let temp = fabScore * funcScore;\r\n\r\n          let ans = 1;\r\n          if(temp <= 12)\r\n            ans = 1;\r\n          else if(temp > 12 && temp < 54)\r\n            ans = 2;\r\n          else {\r\n            ans = 3;\r\n          }\r\n\r\n          impMetric[i] = {\"impMetric\": ans};\r\n      }\r\n\r\n\r\n      return impMetric;\r\n\r\n\r\n  }\r\n\r\n    computeCostMetric = (data) => {\r\n\r\n      let fabricationChart =\r\n      {\"laser cutting\":\t9,\"3d printing\":\t9,\"layering\": 3,\"printing\": 3,\"painting\": 3,\r\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 3,\"soldering\":\t1,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\r\n       \"knit\": 1,\"embroidery and applique\":\t3,\r\n       \"patchwork and patterning\": 3,\"woven\": 9,\"non woven\":\t9,\r\n       \"machining\":\t9,\"cut and wew\":\t1, \"joining\": 3};\r\n\r\n\r\n      /*\r\n        INKS AND FINISHES\r\n      */\r\n      let materialChart =\r\n      {\r\n          \"conductive inks\": 3,\r\n          \"polymers\": 9,\r\n          \"molding materials\": 9,\r\n          \"threads\": 1,\r\n          \"conductive threads\":\t3,\r\n          \"adhesives\": 3,\r\n          \"paper and cardboard\": 1,\r\n          \"electronics\": 9,\r\n          \"textiles and composites\": 1,\r\n          \"hide\":\t1,\r\n          \"hardware\": 1,\r\n          \"organic materials\": 9,\r\n          \"inks & finishes\": 0,\r\n          \"metal\": 3,\r\n          \"shape memory alloy\": 9\r\n      };\r\n\r\n      let costMetric = [];\r\n\r\n      for(let i = 0; i < data.length; i++) {\r\n\r\n          let fabScore = 0;\r\n          let matScore = 0;\r\n\r\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\r\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 1\"].toLowerCase()]);\r\n          }\r\n\r\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\r\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 2\"].toLowerCase()]);\r\n          }\r\n\r\n          if(data[i][\"Material 1\"].toLowerCase() in materialChart) {\r\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 1\"].toLowerCase()]);\r\n          }\r\n\r\n          if(data[i][\"Material 2\"].toLowerCase() in materialChart) {\r\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 2\"].toLowerCase()]);\r\n          }\r\n\r\n          if(data[i][\"Material 3\"].toLowerCase() in materialChart) {\r\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 3\"].toLowerCase()]);\r\n          }\r\n\r\n          costMetric[i] = {\"costMetric\": fabScore + matScore};\r\n      }\r\n      return costMetric;\r\n    }\r\n\r\n    computeWearability = (wearability) => {\r\n\r\n      wearability = wearability.map((item) => {\r\n\r\n        let count = 0\r\n        let totalCount = 50\r\n\r\n        let attachScore = item[\"Attachment to the Body\"];\r\n\r\n        switch (attachScore) {\r\n\r\n            case \"Threads\":\r\n              attachScore = 5;\r\n              break;\r\n            case \"Velcro\":\r\n              attachScore = 3;\r\n              break;\r\n            case \"Adhesives\":\r\n               attachScore = 4;\r\n              break;\r\n            case \"Embedded\":\r\n              attachScore = 2;\r\n              break;\r\n            case \"Straps\":\r\n              attachScore = 1;\r\n              break;\r\n            case \"Clips\":\r\n              attachScore = 4;\r\n              break;\r\n            default:\r\n              attachScore = 0;\r\n              totalCount = totalCount - 5;\r\n\r\n        }\r\n\r\n        let mainScore = item[\"Maintenance required\"];\r\n\r\n        if(isNaN(mainScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n\r\n          count += parseInt(mainScore);\r\n        }\r\n\r\n        let actScore = item[\"activity obstruction\"];\r\n\r\n        if(isNaN(actScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(actScore);\r\n        }\r\n\r\n        let intScore = item[\"Integration (form and size)\"];\r\n\r\n        if(isNaN(intScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(intScore);\r\n        }\r\n\r\n        let conScore = item[\"Context\"];\r\n\r\n        if(isNaN(conScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(conScore);\r\n        }\r\n\r\n        let aesScore = item[\"Aesthetics\"];\r\n\r\n        if(isNaN(aesScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(aesScore);\r\n        }\r\n\r\n        return {\"Wearability\": ((count / totalCount) * 100).toFixed(2)}\r\n      })\r\n\r\n      return wearability;\r\n    }\r\n\r\n  displayMatrix = () => {\r\n    this.setState({\r\n      displayHome: false,\r\n    });\r\n  }\r\n\r\n    render() {\r\n\r\n        return (\r\n          <BrowserRouter>\r\n          {(this.state.displayHome) ? (<HomePage toggle={this.toggleToSearch} />) : ((!this.props.searchDisplay) ? (<div className=\"layout\" style={{\r\n            width: window.innerWidth\r\n          }}>\r\n             <LeftPane />\r\n             <LeftPaneModal />\r\n             <Matrix />\r\n             <BodyZones />\r\n            <FilterPane toggleBack={this.toggleBack} move={false} showLoop={true} mainPage={true}/>\r\n          </div>) : (<div className=\"layout\"><SearchDisplay backToSearch={this.props.updateSearchDisplay}/>\r\n          <FilterPane move={true} showLoop={true} mainPage={false}/>\r\n        </div>)\r\n        )}\r\n        </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchDisplay: state.searchDisplay,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateSearchData: (value) => dispatch({type: actionTypes.UPDATE_DATA, value: value}),\r\n        updateSearchDisplay: () => dispatch({type: actionTypes.REMOVE_SEARCH_DISPLAY})\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './store/reducers/index'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootReducer = reducer;\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}