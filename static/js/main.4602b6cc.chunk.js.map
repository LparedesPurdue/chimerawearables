{"version":3,"sources":["store/reducers/index.js","store/actions.js","components/LeftPanePopoverTab.js","components/LeftPaneTab.js","components/LeftPane.js","components/Matrix.js","components/LeftPaneModalTab.js","components/LeftPaneModal.js","components/SearchDisplayTab.js","components/SearchDisplay.js","components/ListDisplayTab.js","components/ColCharts.js","components/BodyChart.js","components/FilterBody.js","components/FilterPane.js","components/BodyZones.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","searchDisplay","searchData","names","params","listDisplay","searchTermDisplay","searchTermQuery","filter","minYear","maxYear","venueFilter","sourceFilter","categories","functions","bodyZones","fabrication","material","arrFunc","arrBod","arrFab","arrMat","selFunction","selBodyZones","selFabrication","selMaterial","showFunc","showBod","showFab","showMat","bookMarks","viewBookmarks","isLoggedIn","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","val","toConsumableArray","value","listView","temp","index","indexOf","splice","push","jsonToSend","JSON","stringify","username","password","bookmarks","request","Request","method","headers","Content-Type","body","fetch","then","response","status","toString","text","parse","message","console","log","valName","valPassword","LeftPanePopoverTab","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","subtype","tempArr","listArr","includes","setState","onSelect","onSelFunction","onSelBodyZones","onSelFabrication","onSelMaterial","selArr","_this2","inp","subtypes","map","input","react_default","a","createElement","key","className","name","id","label","style","width","color","backgroundColor","Component","connect","dispatch","LeftPaneTab","toggle","popoverOpen","popoverFunc","popoverBod","popoverFab","popoverMat","arr","backgroundCol","borderCol","borderColor","src","alt","UncontrolledPopover","borderStyle","borderWidth","hideArrow","modifiers","offset","trigger","target","PopoverHeader","fontWeight","PopoverBody","padding","components_LeftPanePopoverTab","LeftPane","onShowFunction","onShowBodyZones","onShowFabrication","onShowMaterial","listItems","i","tempList","item","listItem","components_LeftPaneTab","clicked","Matrix","name_array","bool_param","query_param_array","updateQuery","toggleDisplay","bool_array","funcCount","toLowerCase","trim","fabCount","matCount","bodCount","funcBodCount","matBodCount","fabBodCount","fabFuncCount","matFuncCount","matFabCount","matFabFuncCount","matFabBodCount","funcFabBodCount","curFuncFabBodCount","funcMatBodCount","allCount","lib","height","viewBox","size","x","y","flat","spacing","origin","q","r","s","textAnchor","dy","fill","query_param","LeftPaneModalTab","curInp","onSelectFunction","onSelectBodyZones","onSelectFabrication","onSelectMaterial","curInput","background","LeftPaneModal","funcModal","components_LeftPaneModalTab","fabModal","matModal","SearchDisplayTab","toggleCost","tooltipOpenCost","toggleImp","tooltipOpenImp","toggleWear","tooltipOpenWear","updateBookmark","substring","bind","assertThisInitialized","check","wearToken","parseInt","costToken","col","marginLeft","href","onerror","objectFit","loggedIn","Input","checked","borderRadius","opacity","class","display","overflowX","overflowY","SearchDisplay","filterFunc","filterBod","filterFab","filterMat","filterYear","filterVenue","venue","filterSource","source","shuffleArray","array","j","Math","floor","random","_ref","seed","sin","filterData","research","tutorials","aesthetics","concepts","filterArr","allData","searchQuery","researchArr","tutorialsArr","aestheticsArr","conceptsArr","patentsArr","listContents","scope","corLabel","Table","striped","components_SearchDisplayTab","backToSearch","ColCharts","data","function","subType","Results","transform","es6","margin","top","right","left","bottom","dataKey","cursor","BodyChart","out","position","fontSize","Range","Slider","createSliderWithTooltip","FilterBody","toggleStats","prevState","modal","filterToggle","onChange","onVenueClick","onSourceClick","sourceEng","sourceFash","toggleBookmarks","dropdownOpen","showLabels","venueArr","filterEngineering","filterFashion","engLength","fashLength","Set","DropdownItem","yearData","_loop","concat","Projects","closeBtn","Button","hide","handleStyle","trackStyle","allowCross","railStyle","min","max","defaultValue","float","ButtonDropdown","isOpen","DropdownToggle","marginBottom","caret","DropdownMenu","marginTop","marginRight","Fragment","Label","Progress","multi","bar","outline","zIndex","Modal","maxWidth","maxHeight","ModalHeader","close","ModalBody","components_ColCharts","components_BodyChart","FilterPane","toggleVisibility","visibility","handleChange","event","handleSubmit","searchTermDisplayUpdate","searchTermQueryUpdate","preventDefault","move","onSubmit","placeholder","borderTopStyle","Popover","placement","defineProperty","components_FilterBody","showLoop","BodyZones","area","zone","img","ImageMapper_default","areas","shape","coords","fillColor","HomePage","onSignUpWarningChange","signUpWarning","onLoginWarningChange","loginWarning","onSignUpUsernameChange","signUpUsername","onLoginUsernameChange","loginUsername","onSignUpEmailChange","signUpEmail","onSignUpPasswordChange","signUpPassword","onLoginPasswordChange","loginPassword","onLoginSubmit","authSuccess","toggleDisp","pwd","objReceived","onSignUpSubmit","email","backgroundSize","textAlign","Form","valuename","valuepass","App","toggleToSearch","displayHome","toggleBack","computeImplementationMetric","fabricationChart","laser cutting","3d printing","layering","printing","painting","sticking","heat pressing","heat transfer","soldering","origami","molding and casting","pleating and folding","knit","embroidery and applique","patchwork and patterning","woven","non woven","machining","cut and sew","joining","functionChart","storage","breathability","energy harvesting","feedback","electronic elements connections","wireless communication","control","movement","sensing","protective","magnetic","cognitive","modularity","emissivity","wearability","morphology","gestures","impMetric","fabScore","funcScore","ans","computeCostMetric","cut and wew","materialChart","conductive inks","polymers","molding materials","threads","conductive threads","adhesives","paper and cardboard","electronics","textiles and composites","hardware","organic materials","inks & finishes","metal","shape memory alloy","costMetric","matScore","computeWearability","count","totalCount","attachScore","mainScore","isNaN","actScore","intScore","conScore","aesScore","Wearability","toFixed","displayMatrix","Tabletop","init","callback","googleData","elements","costmetric","updateSearchData","simpleSheet","react_router_dom","src_components_HomePage","components_SearchDisplay","updateSearchDisplay","components_FilterPane","components_LeftPane","components_LeftPaneModal","components_Matrix","components_BodyZones","Boolean","window","location","hostname","match","rootReducer","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yjBAEMA,EAAe,CAEjBC,eAAe,EACfC,WAAY,GACZC,MAAO,GACPC,OAAQ,GAERC,aAAa,EAEbC,mBAAmB,EACnBC,gBAAiB,GAEjBC,QAAQ,EACRC,QAAS,KACTC,QAAS,KACTC,YAAa,MACbC,aAAc,OAGdC,WAAY,CAAC,WAAY,YAAa,cAAe,YACrDC,UAAW,CAAC,UAAW,gBAAiB,oBAAqB,WAC5D,UAAW,kCAAmC,yBAA0B,UAAW,WAClF,UAAW,aAAc,WAAY,YAAa,aAAc,aAClE,cAAe,aAAc,aAAc,YAC3CC,UAAW,CAAC,OAAQ,QAAS,gBAAiB,OAAQ,OACtD,iBAAkB,OAAQ,YAAa,QACvCC,YAAa,CAAC,kBAAmB,gBAAiB,UAAW,cAC5D,WAAY,WAAY,WAAY,gBAAiB,gBACpD,YAAa,UAAW,sBAAuB,uBAC/C,OAAQ,0BAA2B,UAAW,WAC9C,0BAA2B,QAAS,YAAa,YAAa,YAChEC,SAAU,CAAC,eAAgB,kBAAmB,WAAY,oBAC1D,UAAW,qBAAqB,YAAa,sBAAuB,cACpE,yBAA0B,SAAU,UAAW,OAAQ,WAAY,oBACnE,kBAAmB,QAAS,qBAAsB,WAElDC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GAERC,YAAa,GACbC,aAAc,GACdC,eAAgB,GAChBC,YAAa,GAEbC,UAAU,EACVC,SAAS,EACTC,SAAS,EACTC,SAAS,EAETC,UAAW,GACXC,eAAe,EAEfC,YAAY,GAmNDC,EAhNC,WAAoC,IAAlCC,EAAkCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1BnC,EAAcsC,EAAYH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEhD,OAASC,EAAOC,MAEZ,IC/DuB,kBDgEnB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIZ,YAAagB,EAAOI,MAE5B,ICnEwB,mBDoEpB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIX,aAAce,EAAOI,MAE7B,ICvE0B,qBDwEtB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIV,eAAgBc,EAAOI,MAE/B,IC3EuB,kBD4ElB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIT,YAAaa,EAAOI,MAE7B,IC9EiB,YD+Eb,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEER,UAAYQ,EAAMR,WAExB,IClFgB,WDmFZ,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIP,SAAWO,EAAMP,UAEzB,ICtFgB,WDuFb,OAAOa,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIN,SAAWM,EAAMN,UAExB,IC1FgB,WD2Fb,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIL,SAAWK,EAAML,UAGxB,IC9FuB,kBD+FpB,OAAOW,OAAAC,EAAA,EAAAD,CAAA,GACCN,EADR,CAEKhB,QAAQsB,OAAAG,EAAA,EAAAH,CAAKF,EAAOM,SAG5B,ICnGsB,iBDqGnB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACCN,EADR,CAEKf,OAAOqB,OAAAG,EAAA,EAAAH,CAAKF,EAAOM,SAG3B,ICzGsB,iBD0GnB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACCN,EADR,CAEKd,OAAOoB,OAAAG,EAAA,EAAAH,CAAKF,EAAOM,SAG3B,IC9GsB,iBD+GnB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACCN,EADR,CAEKb,OAAOmB,OAAAG,EAAA,EAAAH,CAAKF,EAAOM,SAE3B,ICjHmB,cDkHjB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEhC,WAAWsC,OAAAG,EAAA,EAAAH,CAAKF,EAAOM,SAEzB,ICrHoB,iBDsHlB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEjC,eAAe,IAGnB,ICxG2B,wBDyG3B,OAAOuC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEjC,eAAe,EACfK,mBAAmB,IAGrB,ICjIkB,eDkIhB,OAAOkC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEE/B,MAAMqC,OAAAG,EAAA,EAAAH,CAAKF,EAAOnC,OAClBC,OAAOoC,OAAAG,EAAA,EAAAH,CAAKF,EAAOlC,UAEvB,ICrIiB,cDsIf,OAAOoC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEE1B,QAAQ,IAEZ,ICzIiB,cD0If,OAAOgC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEzB,QAAS6B,EAAO7B,QAChBC,QAAS4B,EAAO5B,UAEpB,IC9IkB,eD+IhB,OAAO8B,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEvB,YAAa2B,EAAOI,MAExB,IClJmB,gBDmJjB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEtB,aAAc0B,EAAOI,MAEzB,ICrJoB,iBDsJlB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEW,UAAYX,EAAMW,WAEtB,ICxJyB,sBDyJvB,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEE5B,mBAAmB,IAEvB,IC5JuB,oBD6JrB,OAAOkC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEE3B,gBAAiB+B,EAAOI,MAE5B,IC/JsB,mBDiKlB,IAAII,EAAIN,OAAAG,EAAA,EAAAH,CAAON,EAAMJ,WAEjBiB,EAAQD,EAAKE,QAAQV,EAAOI,KAE5BK,GAAS,EACVD,EAAKG,OAAOF,EAAO,GAIpBD,EAAKI,KAAKZ,EAAOI,KAGnB,IAAIS,EAAaC,KAAKC,UAAU,CAC3BC,SAAUpB,EAAMoB,SAChBC,SAAUrB,EAAMqB,SAChBC,UAAWV,IAGZW,EAAU,IAAIC,QAAQ,4DAA6D,CACjFC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMX,IAiBZ,OAfIY,MAAMN,GAASO,KAAK,SAASC,GAEQ,QAA/BA,EAASC,OAAOC,YAChBF,EAASG,OAAOJ,KAAK,SAASI,GAGE,YADVhB,KAAKiB,MAAMD,GACbE,SAEbC,QAAQC,IAAI,eAOtBhC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEJ,UAAWgB,IAGjB,IC7MoB,iBD+MlB,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,eAAiBG,EAAMH,gBAK3B,ICpNkB,eDuNhB,OADAwC,QAAQC,IAAIlC,GACLE,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEF,YAAY,EACZsB,SAAUhB,EAAOmC,QACjBlB,SAAUjB,EAAOoC,YACjB5C,UAAWQ,EAAOI,MAItB,IC/NkB,eDiOhB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEF,YAAY,IAItB,OAAOE,2DEjQLyC,yDAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAJ,IACfE,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAmC,GAAAO,KAAAH,KAAMH,KAQVO,QAAU,SAACC,GAGP,IAAIC,EAAUR,EAAK3C,MAAMoD,QAEtBT,EAAK3C,MAAMoD,QAAQC,SAASH,GAE3BC,EAAQpC,OAAOoC,EAAQrC,QAAQoC,GAAS,GAIxCC,EAAQnC,KAAKkC,GAGjBP,EAAKW,SAAS,CAEVF,QAASD,KAzBER,EAmCnBY,SAAW,WAGH,IAAIlD,EAAOsC,EAAKD,MAAMrC,KAGT,aAATA,EAECsC,EAAKD,MAAMc,cAAcb,EAAK3C,MAAMoD,SAEvB,cAAT/C,EACJsC,EAAKD,MAAMe,eAAed,EAAK3C,MAAMoD,SAExB,gBAAT/C,EACJsC,EAAKD,MAAMgB,iBAAiBf,EAAK3C,MAAMoD,SAGvCT,EAAKD,MAAMiB,cAAchB,EAAK3C,MAAMoD,UAjD7CT,EAAK3C,MAAQ,CAEZoD,QAAST,EAAKD,MAAMkB,QALNjB,sFAgCfE,KAAKU,4CA2BA,IAAAM,EAAAhB,KAEDR,QAAQC,IAAIO,KAAKH,MAAMrC,MACvBgC,QAAQC,IAAIO,KAAK7C,MAAMoD,SACvB,IAAIU,EAEAF,EAASf,KAAK7C,MAAMoD,QAuBxB,OAtBAU,EAAMjB,KAAKH,MAAMqB,SAASC,IAAI,SAACC,GAE3B,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,IAAKR,EAAKnB,MAAM2B,KAClBT,EAAOP,SAASY,GAChBC,EAAAC,EAAAC,cAAA,OAAKnB,QAAS,kBAAMY,EAAKZ,QAAQgB,IAAQK,UAAU,iCAChDC,KAAK,cAELC,GAAIP,EACJQ,MAAOR,GAAQA,GAEfC,EAAAC,EAAAC,cAAA,OAAKnB,QAAS,kBAAMY,EAAKZ,QAAQgB,IAAQK,UAAU,yBACnDC,KAAK,cAAcF,IAAKJ,EAAOO,GAAIP,EACzBQ,MAAOR,GAAQA,MAS3BC,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,OAAQC,MAAO,UAAWC,gBAAiB,UAC5Df,UA5FMgB,cA8GlBC,cAAQ,KAVI,SAAAC,GACvB,MAAO,CACHxB,cAAe,SAAC9C,GAAD,OAAWsE,EAAS,CAAC3E,KDnGb,kBCmGgDK,MAAOA,KAC9E+C,eAAgB,SAAC/C,GAAD,OAAWsE,EAAS,CAAC3E,KDnGf,iBCmGiDK,MAAOA,KAC9EgD,iBAAkB,SAAChD,GAAD,OAAWsE,EAAS,CAAC3E,KDnGjB,iBCmGmDK,MAAOA,KAChFiD,cAAe,SAACjD,GAAD,OAAWsE,EAAS,CAAC3E,KDnGd,iBCmGgDK,MAAOA,OAKtEqE,CAAkCtC,8BC9G3CwC,cAEF,SAAAA,EAAYvC,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAoC,IAChBtC,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAA2E,GAAAjC,KAAAH,KAAMH,KAcRwC,OAAS,SAACX,GACR5B,EAAKW,SAAS,CACZ6B,aAAcxC,EAAK3C,MAAMmF,eAZ3BxC,EAAK3C,MAAQ,CACXoF,aAAa,EACbC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZJ,aAAa,GAVCxC,wEAyBX,IAAItC,EAAOwC,KAAKH,MAAM6B,KAElBiB,EAAM,GACN5B,EAAS,GAED,aAATvD,GACCmF,EAAM3C,KAAKH,MAAM9D,UACjBgF,EAASf,KAAKH,MAAM1D,SAEP,cAATqB,GACJmF,EAAM3C,KAAKH,MAAM7D,UACjB+E,EAASf,KAAKH,MAAMzD,QAEP,gBAAToB,GACJmF,EAAM3C,KAAKH,MAAM5D,YACjB8E,EAASf,KAAKH,MAAMxD,SAGpBsG,EAAM3C,KAAKH,MAAM3D,SACjB6E,EAASf,KAAKH,MAAMvD,QAGxB,IAAIsG,EAAgB,qBAChBC,EAAY,qBAahB,MAXuB,aAApB7C,KAAKH,MAAM6B,MACVkB,EAAgB,qBAChBC,EAAY,oBAGY,gBAApB7C,KAAKH,MAAM6B,OACjBkB,EAAgB,qBAChBC,EAAY,oBAMbxB,EAAAC,EAAAC,cAAA,OAAKI,GAAI,WAAW3B,KAAKH,MAAM6B,KAAMG,MAAO,CAAEG,gBAAiBY,EAAeE,YAAaD,GAAapB,UAAU,mBAE9GJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBzB,KAAKH,MACnC6B,MAIDL,EAAAC,EAAAC,cAAA,OAAKI,GAAG,QAAQoB,IAAK,uBAAyB/C,KAAKH,MAAM6B,KAAO,OAC/DsB,IAAI,GAAGvB,UAAU,aAKVJ,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAqBpB,MAAO,CAACiB,YAAa,UAAWI,YAAa,QAASC,YAAa,SAAUnB,gBAAiB,SAAUoB,WAAW,EAAMC,UAAW,CAACC,OAAQ,QAASC,QAAQ,SAASC,OAAQ,WAGpMxD,KACCH,MACA6B,MAEIL,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAe5B,MAAO,CAACE,MAAO,UAAWC,gBAAiB,QAAS0B,WAAY,SAAU1D,KAAKH,MAAM6B,MACnGL,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAa9B,MAAO,CAAC+B,QAAS,IAAK7B,MAAO,UAAWC,gBAAiB,UAAUX,EAAAC,EAAAC,cAACsC,EAAD,CACvDrG,KAAMwC,KAAKH,MAAM6B,KACjBR,SAAUyB,EACT5B,OAAQA,EACRsB,OAAQrC,KAAKqC,OACbb,IAAKxB,KAAKH,MAAM2B,gBA3F/CS,aAyHXC,cAnBS,SAAA/E,GACpB,MAAO,CACHpB,UAAWoB,EAAMpB,UACjBC,UAAWmB,EAAMnB,UACjBC,YAAakB,EAAMlB,YACnBC,SAAUiB,EAAMjB,SAEhBS,SAAUQ,EAAMR,SAChBC,QAASO,EAAMP,QACfC,QAASM,EAAMN,QACfC,QAASK,EAAML,QAEfX,QAASgB,EAAMhB,QACfC,OAAQe,EAAMf,OACdC,OAAQc,EAAMd,OACdC,OAAQa,EAAMb,SAIP4F,CAAyBE,GCxHlC0B,6MAEF1D,QAAU,SAAC5C,GAIM,aAATA,EAECsC,EAAKD,MAAMkE,iBAEE,cAATvG,EACJsC,EAAKD,MAAMmE,kBAEE,gBAATxG,EACJsC,EAAKD,MAAMoE,oBAGXnE,EAAKD,MAAMqE,0FAIX,IAEEC,EAFFnD,EAAAhB,KAGEoE,EAAI,EAEJC,EAAWrE,KAAKH,MAAM/D,WAUzB,OANDqI,GAHAE,EAAWA,EAAS5I,OAAO,SAAC6I,GAC1B,MAAgB,cAATA,KAEYnD,IAAI,SAACoD,GACrB,OACIlD,EAAAC,EAAAC,cAACiD,EAAD,CAAahD,IAAK4C,IAAK1C,KAAM6C,EAAUE,QAASzD,EAAKZ,YAM5DiB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACX0C,UAvCMlC,aAgERC,cAlBS,SAAA/E,GACpB,MAAO,CACHrB,WAAYqB,EAAMrB,WAClBX,WAAYgC,EAAMhC,aAIC,SAAAgH,GACvB,MAAO,CACH4B,eAAgB,kBAAM5B,EAAS,CAAC3E,KH1Df,eG2DjBwG,gBAAiB,kBAAM7B,EAAS,CAAC3E,KH1DjB,cG2DhByG,kBAAmB,kBAAM9B,EAAS,CAAC3E,KH1DnB,cG2DhB0G,eAAgB,kBAAM/B,EAAS,CAAC3E,KH1DhB,gBGgET0E,CAA6C4B,2BC9DtDY,6MAEFtE,QAAU,SAACuE,EAAYC,EAAYC,GAE5BD,IAED9E,EAAKD,MAAMiF,YAAYH,EAAYE,GACnC/E,EAAKD,MAAMkF,0FAuBR,IAAA/D,EAAAhB,KAOG2E,EAAa,GACjBA,EAAW,GAAK,WAChBA,EAAW,GAAK,YAChBA,EAAW,GAAK,cAChBA,EAAW,GAAK,WAEhB,IAAIK,EAAa,GACjBA,EAAW7G,MAAK,GAChB6G,EAAW7G,MAAK,GAChB6G,EAAW7G,MAAK,GAChB6G,EAAW7G,MAAK,GAEc,KAA3B6B,KAAKH,MAAMtD,cACVyI,EAAW,IAAK,EAChBL,EAAW,GAAK3E,KAAKH,MAAMtD,aAGA,KAA5ByD,KAAKH,MAAMrD,eACVwI,EAAW,IAAK,EAChBL,EAAW,GAAK3E,KAAKH,MAAMrD,cAGE,KAA9BwD,KAAKH,MAAMpD,iBACVuI,EAAW,IAAK,EAChBL,EAAW,GAAK3E,KAAKH,MAAMpD,gBAGD,KAA3BuD,KAAKH,MAAMnD,cACVsI,EAAW,IAAK,EAChBL,EAAW,GAAK3E,KAAKH,MAAMnD,aAG/B,IAAIuI,EAAYjF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC5C,MAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBAEzEW,EAAYA,EAAU5H,OAEnB2H,EAAW,MAOZC,EALmBjF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC/C,OAAOA,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SACjFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,UAEzD9H,QAG3B,IAAI+H,EAAWpF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC3C,MAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBAE/Cc,EAAWA,EAAS/H,OAEjB2H,EAAW,MAMZI,EAJkBpF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC9C,OAAOA,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SACpFb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,UAE9D9H,QAGzB,IAAIgI,EAAWrF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC3C,MAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBAEzEe,EAAWA,EAAShI,OAEjB2H,EAAW,MAOZK,EALkBrF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC9C,OAAOA,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SACjFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,UAE3D9H,QAGzB,IAAIiI,EAAWtF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC3C,MAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBAE3EgB,EAAWA,EAASjI,OAEjB2H,EAAW,MAOZM,EALkBtF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC9C,OAAOA,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAClFb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,UAE5D9H,QAOzB,IAAIkI,EAAevF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC/C,OAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBACtC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAE7EiB,EAAeA,EAAalI,OAEzB2H,EAAW,IAAMA,EAAW,MAU7BO,EARsBvF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAClD,OAAQA,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SACnFb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAChFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAEnD9H,QAKjC,IAAImI,EAAcxF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC9C,OAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBACtC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAE7EkB,EAAcA,EAAYnI,OAEvB2H,EAAW,IAAMA,EAAW,MAU7BQ,EARqBxF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GACjD,OAAQA,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SACnFb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAChFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAErD9H,QAQ/B,IAAIoI,EAAczF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC9C,OAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBACnC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,qBAEnDmB,EAAcA,EAAYpI,OAEvB2H,EAAW,IAAMA,EAAW,MAS7BS,EAPqBzF,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GACjD,OAAQA,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SACnFb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAChFb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAExD9H,QAK/B,IAAIqI,EAAe1F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC/C,OAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACjC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,qBAEnDoB,EAAeA,EAAarI,OAEzB2H,EAAW,IAAMA,EAAW,MAQ7BU,EAPsB1F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAClD,OAAQA,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SACrFb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAClFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAEnD9H,QAGjC,IAAIsI,EAAe3F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC/C,OAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACpC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAE7EqB,EAAeA,EAAatI,OAEzB2H,EAAW,IAAMA,EAAW,MAS7BW,EARsB3F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAClD,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAClFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAC/Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAEnD9H,QAKjC,IAAIuI,EAAc5F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC9C,OAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBACV,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAE7EsB,EAAcA,EAAYvI,OAEvB2H,EAAW,IAAMA,EAAW,MAQ7BY,EAPqB5F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GACjD,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAClFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAC/Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAExD9H,QAM/B,IAAIwI,EAAkB7F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAClD,OAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBACV,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACxC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,kBAE7EuB,EAAkBA,EAAgBxI,OAE/B2H,EAAW,IAAMA,EAAW,IAAMA,EAAW,MAY9Ca,EAXyB7F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GACrD,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAClFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAC/Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WACjFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC1Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAG/C9H,QAIvC,IAAIyI,EAAiB9F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GACjD,OAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBACV,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACvC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,mBAE/EwB,EAAiBA,EAAezI,OAG7B2H,EAAW,IAAMA,EAAW,IAAMA,EAAW,MAY9Cc,EAXwB9F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GACpD,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAClFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAC/Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WACjFb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAGlD9H,QAKrC,IAAI0I,EAAkB/F,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAClD,OAAkC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,oBACV,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACvC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBAI/E,GAFAyB,EAAkBA,EAAgB1I,OAE/B2H,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAClD,IAAIgB,EAAqBhG,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GACrD,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAClFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAC/Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WACjFb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAIrF3F,QAAQC,IAAIuG,GACZD,EAAkBC,EAAmB3I,OAGvC,IAAI4I,EAAkBjG,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAClD,OAA+B,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACpC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACvC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,mBAE/E2B,EAAkBA,EAAgB5I,OAE/B2H,EAAW,IAAMA,EAAW,IAAMA,EAAW,MAa9CiB,EAZyBjG,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GACrD,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAClFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAC/Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAGhD9H,QAGvC,IAAI6I,EAAWlG,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC3C,OAAgC,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,gBAAiD,KAAxBA,EAAK,kBACtC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACxC,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,eAA+C,KAAvBA,EAAK,iBACrC,KAA1BA,EAAK,kBAAqD,KAA1BA,EAAK,qBAEnD4B,EAAWA,EAAS7I,OAEjB2H,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,MAe/DkB,EAdkBlG,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAC9C,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAClFb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAC/Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC7Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC3Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAChFb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,SAC9Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASmE,EAAW,GAAGO,cAAcC,WAGhE9H,QAGzB,OAECgE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAGfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACJJ,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAASrE,MAAO,IAAKsE,OAAQ,IAAKC,QAAQ,iBAC1ChF,EAAAC,EAAAC,cAAC4E,EAAA,OAAD,CAAQG,KA3VA,CAAEC,EAAG,KAAMC,EAAI,MA2VIC,MAAM,EAAMC,QAAS,KAAMC,OAAQ,CAAEJ,EAAG,EAAGC,EAAG,IAE/DnF,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,cAAe,WAAY,cAAc4B,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAErL9B,EAAW,IAAMA,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAASC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,oBAA7B,KAAmDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMd,EAAW,MAC9b7E,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,UAAhB,YAAyC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,eAA2C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,iBAA6C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,cAA0C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMd,EAAW,OAkDhQ7E,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,iBAAiB4B,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAE3H9B,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,oBAAoBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMvB,EAAc,MACtQpE,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,OAAhB,aAAuC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,iBAA6C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMvB,EAAc,OAG5KpE,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,cAAc4B,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAExH9B,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMrB,EAAe,MACzQtE,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,OAAhB,YAAsC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,cAA0C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMrB,EAAe,OAKzKtE,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,GAAI,CAAC,iBAAiB4B,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC7FzF,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAM5B,EAAW,OAE5J/D,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,GAAI,CAAC,cAAc4B,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAC/FzF,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAM3B,EAAW,OAIxJhE,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,iBAAiB4B,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAC3H9B,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMpB,EAAc,MACxQvE,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,OAAhB,eAAyC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,cAA0C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMpB,EAAc,OAI3KvE,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,GAAI,CAAC,cAAc4B,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAE7FzF,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAM/B,EAAY,OAG3J5D,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,eAAe4B,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAEzH9B,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,oBAA7B,KAAmDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMzB,EAAe,MACvQlE,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,OAAhB,YAAsC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,eAA2C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMzB,EAAe,OAG1KlE,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,GAAI,CAAC,eAAe4B,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAChGzF,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,oBAAoBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAM1B,EAAW,OAIpJjE,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,cAAc4B,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAEzH9B,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,oBAAoBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMxB,EAAc,MACtQnE,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,OAAhB,aAAuC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,cAA0C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMxB,EAAc,OAGzKnE,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,iBAAiB4B,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAE3H9B,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,MAAMC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMtB,EAAe,MACzQrE,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,OAAhB,YAAsC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,iBAA6C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMtB,EAAe,OAG5KrE,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,YAAa,cAAc4B,GAAI,EAAGC,GAAI,EAAGC,EAAG,GAEvJ9B,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAASC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,oBAA7B,KAAmDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMf,EAAkB,MACzW5E,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,UAAhB,YAAyC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,eAA2C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,cAA0C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMf,EAAkB,OAI1N5E,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAASS,GAAI,EAAGC,EAAG,EAAGC,EAAG,GACvBzF,EAAAC,EAAAC,cAAC4E,EAAA,KAAD,oBAGH9E,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAUS,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACvBzF,EAAAC,EAAAC,cAAC4E,EAAA,KAAD,oBAGH9E,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,YAAa,WAAY,iBAAiB4B,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAExJ9B,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAASC,KAAK,oBAAoBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMlB,EAAiB,MACxWzE,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,UAAhB,aAA0C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,cAA0C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,iBAA6C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMlB,EAAiB,OAG9NzE,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAI,CAAC,WAAY,YAAa,iBAAiB4B,GAAI,EAAGC,EAAG,EAAGC,EAAG,GAEvJ9B,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAASC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,oBAA7B,KAAmDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMjB,EAAkB,MACzW1E,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,UAAhB,YAAyC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,eAA2C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,iBAA6C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMjB,EAAkB,OAG7N1E,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAAS/F,QAAS,kBAAMY,EAAKZ,QAAQuE,EAAYK,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAK,CAAC,WAAY,WAAY,iBAAiB4B,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAEzJ9B,EAAW,IAAMA,EAAW,IAAMA,EAAW,GAAO3D,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAASC,KAAK,sBAAsBtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,QAAQC,KAAK,sBAA7B,KAAqDtC,EAAW,IAAWtD,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMnB,EAAkB,MAC3WxE,EAAAC,EAAAC,cAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIO,WAAW,UAAS1F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,UAAhB,YAAyC3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,cAA0C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAhB,iBAA6C3F,EAAAC,EAAAC,cAAA,SAAOgF,EAAE,IAAIS,GAAG,SAAS,IAAMnB,EAAkB,kBA3gB1N5D,aA+iBNC,cApBS,SAAA/E,GACpB,MAAO,CACHZ,YAAaY,EAAMZ,YACnBC,aAAcW,EAAMX,aACpBC,eAAgBU,EAAMV,eACtBC,YAAaS,EAAMT,YACnBvB,WAAYgC,EAAMhC,aAMC,SAAAgH,GACvB,MAAO,CACH4C,cAAe,kBAAM5C,EAAS,CAAC3E,KJniBT,oBIoiBtBsH,YAAa,SAACH,EAAYuC,GAAb,OAA6B/E,EAAS,CAAC3E,KJniBhC,eImiBgEpC,MAAOuJ,EAAYtJ,OAAQ6L,OAKxGhF,CAA6CwC,GCljBtDyC,sBAGF,SAAAA,EAAYtH,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAmH,IAChBrH,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAA0J,GAAAhH,KAAAH,KAAMH,KAOTa,SAAW,SAACU,EAAO5D,GACJ,YAARA,GAECsC,EAAKW,SAAS,CACX2G,OAAQhG,IAKXtB,EAAKD,MAAMwH,iBAAiBjG,IAEhB,aAAR5D,GAEJsC,EAAKD,MAAMyH,kBAAkBlG,GAC5BtB,EAAKW,SAAS,CACZ2G,OAAQhG,KAIC,eAAR5D,GACJsC,EAAKD,MAAM0H,oBAAoBnG,GAC9BtB,EAAKW,SAAS,CACZ2G,OAAQhG,MAKXtB,EAAKD,MAAM2H,iBAAiBpG,GAC3BtB,EAAKW,SAAS,CACZ2G,OAAQhG,MAlChBtB,EAAK3C,MAAQ,CACXsK,SAAU,IAJI3H,wEAgDV,IACGmB,EADHD,EAAAhB,KAEGoH,EAASpH,KAAK7C,MAAMiK,OAmBxB,OAjBAnG,EAAMjB,KAAKH,MAAMqB,SAASC,IAAI,SAACC,GAE3B,OACIC,EAAAC,EAAAC,cAAA,WACE6F,IAAWhG,EACbC,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC6F,WAAY,QAAS3F,MAAO,UAAW2B,WAAY,QAAStD,QAAS,kBAAMY,EAAKN,SAASU,EAAOJ,EAAKnB,MAAMrC,OACxHiE,UAAU,aACgBD,IAAKJ,GAC5BA,GAAiBC,EAAAC,EAAAC,cAAA,OAAKnB,QAAS,kBAAMY,EAAKN,SAASU,EAAOJ,EAAKnB,MAAMrC,OACvEiE,UAAU,aACuDD,IAAKJ,GAC5BA,MAQnDC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACRR,UA3EYgB,cA2FhBC,cAAQ,KAVI,SAAAC,GACvB,MAAO,CACHkF,iBAAkB,SAACxJ,GAAD,OAAWsE,EAAS,CAAC3E,KL1FhB,kBK0FmDG,IAAKE,KAC/EyJ,kBAAmB,SAACzJ,GAAD,OAAWsE,EAAS,CAAC3E,KL1FhB,mBK0FoDG,IAAKE,KACjF0J,oBAAqB,SAAC1J,GAAD,OAAWsE,EAAS,CAAC3E,KL1FhB,qBK0FsDG,IAAKE,KACrF2J,iBAAkB,SAAC3J,GAAD,OAAWsE,EAAS,CAAC3E,KL1FhB,kBK0FmDG,IAAKE,OAKxEqE,CAAkCiF,GC3F3CQ,cAGF,SAAAA,EAAY9H,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAA2H,IAEf7H,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAkK,GAAAxH,KAAAH,KAAMH,KAED1C,MAAQ,CAEZoD,QAAST,EAAKD,MAAMkB,QANNjB,wEAYX,IAAI8H,EAAYvG,EAAAC,EAAAC,cAACsG,EAAD,CAAkBhG,MAAO,CAACuE,OAAQ,OACtB5I,KAAK,WACL0D,SAAUlB,KAAKH,MAAM9D,YAM7C+L,GAJYzG,EAAAC,EAAAC,cAACsG,EAAD,CAAkBhG,MAAO,CAACuE,OAAQ,OACjD5I,KAAK,YACN0D,SAAUlB,KAAKH,MAAM7D,YAELqF,EAAAC,EAAAC,cAACsG,EAAD,CAAkBhG,MAAO,CAACuE,OAAQ,OAClD5I,KAAK,cACL0D,SAAUlB,KAAKH,MAAM5D,eAEjB8L,EAAW1G,EAAAC,EAAAC,cAACsG,EAAD,CAAkBhG,MAAO,CAACuE,OAAQ,OACjD5I,KAAK,WACL0D,SAAUlB,KAAKH,MAAM3D,WAErB,OAGAmF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAEPmG,EACAE,EACAC,UAtCQ9F,aAyDbC,cAZS,SAAA/E,GAGpB,OADAqC,QAAQC,IAAItC,EAAMhB,SACX,CACHJ,UAAWoB,EAAMhB,QACjBH,UAAWmB,EAAMf,OACjBH,YAAakB,EAAMd,OACnBH,SAAUiB,EAAMb,SAKT4F,CAAyByF,4BCnDlCK,cAEJ,SAAAA,EAAYnI,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAgI,IACjBlI,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAuK,GAAA7H,KAAAH,KAAMH,KAcRoI,WAAa,WACXnI,EAAKW,SAAS,CACZyH,iBAAkBpI,EAAK3C,MAAM+K,mBAjBdpI,EAqBnBqI,UAAY,WACVrI,EAAKW,SAAS,CACZ2H,gBAAiBtI,EAAK3C,MAAMiL,kBAvBbtI,EA2BnBuI,WAAa,WACXvI,EAAKW,SAAS,CACZ6H,iBAAkBxI,EAAK3C,MAAMmL,mBA7BdxI,EAiCnByI,eAAiB,SAAC7G,GAEhB,IAAI3D,EAAO2D,EAAK8G,UAAU,GAAG,IAC7BhJ,QAAQC,IAAI1B,GACZ+B,EAAKD,MAAM0I,eAAexK,IAlC1B+B,EAAK3C,MAAQ,CACX+K,iBAAiB,EACjBE,gBAAgB,EAChBE,iBAAiB,GAGnBxI,EAAKqI,UAAYrI,EAAKqI,UAAUM,KAAfhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IACjBA,EAAKmI,WAAanI,EAAKmI,WAAWQ,KAAhBhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IAClBA,EAAKuI,WAAavI,EAAKuI,WAAWI,KAAhBhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IAXDA,wEAyCV,IAEHmB,EAFGD,EAAAhB,KAsGP,MA/FuB,aAApBA,KAAKH,MAAMrC,KACR,EACsB,aAApBwC,KAAKH,MAAMrC,KACb,EACsB,uBAApBwC,KAAKH,MAAMrC,KACb,EACsB,oBAApBwC,KAAKH,MAAMrC,MACb,EAENyD,EAAMjB,KAAKH,MAAM8C,IAAIxB,IAAI,SAACC,GAExBgD,EACA,IAAIuE,EAAQ3H,EAAKnB,MAAM9C,UAAUyD,SAASY,EAAM,kBAAkBoH,UAAU,GAAG,KAG3EI,EAAY,QACbC,SAASzH,EAAK,cAAoB,GACnCwH,EAAY,QACNC,SAASzH,EAAK,cAAoB,GACxCwH,EAAY,QACNC,SAASzH,EAAK,cAAoB,GACxCwH,EAAY,QACNC,SAASzH,EAAK,cAAoB,GACxCwH,EAAY,QACNC,SAASzH,EAAK,cAAoB,MACxCwH,EAAY,SAEd,IAAIE,EAAY,KAGdA,EADCD,SAASzH,EAAK,YAAkB,GACrB,MACNyH,SAASzH,EAAK,aAAmB,EAC3B,KAEA,IAGd,IAAI2H,EAAM,QAOV,OALoC,IAAjCF,SAASzH,EAAK,WACf2H,EAAM,MACiC,IAAjCF,SAASzH,EAAK,aACpB2H,EAAM,eAEezL,IAApB8D,EAAM,WAAqD,GAA1BA,EAAM,UAAU/D,OAEhDgE,EAAAC,EAAAC,cAAA,YAMFF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACmH,WAAY,OAAQ7F,YAAa,SAAUD,YAAY,UAElE7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,KAAI0H,KAAM7H,EAAM,kBAAmBoC,OAAO,UAE1CnC,EAAAC,EAAAC,cAAA,OAAKI,GAAG,QAAQoB,IAAK,iBAAmB3B,EAAM,UAAY,OAAS8H,QAAS,6CAAoD9H,EAAM,UAAY,OAAQ4B,IAAI,GAAGnB,MAAO,CAACuE,OAAQ,OAAQtE,MAAO,OAAQqH,UAAW,YAEnN9H,EAAAC,EAAAC,cAAA,KAAI0H,KAAM7H,EAAM,kBAAmBoC,OAAO,UAC1CnC,EAAAC,EAAAC,cAAA,OAAKI,GAAG,QAAQF,UAAU,YAAaL,EAAM,kBAAkB/D,OAAS,GAAO+D,EAAM,kBAAsBA,EAAM,kBAAkBoH,UAAU,EAAG,IAAM,QAGpJxH,EAAKnB,MAAMuJ,SAAa/H,EAAAC,EAAAC,cAAA,OAAKI,GAAG,QAAQF,UAAU,UAASJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOC,QAASX,EAAOvI,QAAS,kBAAMY,EAAKuH,eAAenH,EAAM,oBAAoB5D,KAAK,aAAc,KAAe6D,EAAAC,EAAAC,cAAA,YAGnLF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACG,gBAAiB,UAAWuH,aAAc,MAAOC,QAAS,OAAQpD,OAAQ,OAAQtE,MAAO,SAAUgH,GACtIzH,EAAAC,EAAAC,cAAA,OAAKkI,MAAM,eAAX,SAIApI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACTJ,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuE,OAAQ,OAAQtE,MAAO,OAAQE,gBAAiB+G,KAEnE1H,EAAAC,EAAAC,cAAA,OAAKkI,MAAM,cAAX,mBAIApI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACEJ,EAAAC,EAAAC,cAAA,OAAKwB,IAAK,uBAAyB6F,EAAY,OAC9C5F,IAAI,GAAGnB,MAAO,CAACuE,OAAQ,OAAQtE,MAAO,OAAQqH,UAAW,WAGrE9H,EAAAC,EAAAC,cAAA,OAAKkI,MAAM,eAAX,oBAaZpI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAEbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWzB,KAAKH,MAAMrC,OAGzC6D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC6H,QAAS,OAAQtD,OAAQ,OAAQuD,UAAW,SAAUC,UAAW,WAC3E3I,YA1JkBgB,aAiLhBC,cARS,SAAA/E,GACpB,MAAO,CACHJ,UAAWI,EAAMJ,UAEjBqM,SAAUjM,EAAMF,aAVG,SAAAkF,GACvB,MAAO,CACHoG,eAAgB,SAAC1K,GAAD,OAAWsE,EAAS,CAAC3E,KPrJb,mBOqJiDG,IAAKE,EAAMuB,SAAS,EAAE,SAYxF8C,CAA6C8F,YCnLtD6B,GCDuB5H,wBDOzB,SAAA4H,EAAYhK,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAA6J,IAEf/J,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAoM,GAAA1J,KAAAH,KAAMH,KAaViK,WAAa,SAACxF,GAEZ,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SAAWb,EAAK,cAAcY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SAAWb,EAAK,cAAcY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SAjBtQrF,EAoBnBiK,UAAY,SAACzF,GACX,OAAQA,EAAK,eAAeY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SAAWb,EAAK,eAAeY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SAAWb,EAAK,eAAeY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SArBzQrF,EAwBnBkK,UAAY,SAAC1F,GACX,OAAQA,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SAAWb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SAzB9KrF,EA4BnBmK,UAAY,SAAC3F,GACX,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SAAWb,EAAK,cAAcY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SAAWb,EAAK,cAAcY,cAAcC,OAAO3E,SAASV,EAAKD,MAAMzE,MAAM,GAAG8J,cAAcC,SA7BtQrF,EAgCnBoK,WAAa,SAAC5F,GAEZ,OAAQA,EAAI,MAAYxE,EAAKD,MAAMnE,SAAW4I,EAAI,MAAYxE,EAAKD,MAAMlE,SAlCxDmE,EAqCnBqK,YAAc,SAAC7F,GAEb,OADA9E,QAAQC,IAAIK,EAAKD,MAAMuK,OACM,QAArBtK,EAAKD,MAAMuK,OAAmB9F,EAAK,wBAA0BxE,EAAKD,MAAMuK,OAvC/DtK,EA0CnBuK,aAAe,SAAC/F,GACd,MAA8B,SAAtBxE,EAAKD,MAAMyK,QAAqBhG,EAAI,SAAexE,EAAKD,MAAMyK,QA3CrDxK,EA8CnByK,aAAe,SAACC,GACd,IAAK,IAAIpG,EAAIoG,EAAMnN,OAAS,EAAG+G,EAAI,EAAGA,IAAK,CACvC,IAAMqG,EAAIC,KAAKC,MAAM7K,EAAK8K,OAAOxG,IAAMA,EAAI,IADJyG,EAEhB,CAACL,EAAMC,GAAID,EAAMpG,IAAvCoG,EAAMpG,GAFgCyG,EAAA,GAE5BL,EAAMC,GAFsBI,EAAA,GAK3C,OAAOL,GApDU1K,EAuDnB8K,OAAS,SAACE,GACR,IAAIvE,EAAuB,IAAnBmE,KAAKK,IAAID,KACjB,OAAOvE,EAAImE,KAAKC,MAAMpE,IArDpBzG,EAAK3C,MAAQ,CAEX6N,WAAY,GACZC,SAAU,GACVC,UAAW,GACXC,WAAY,GACZC,SAAU,GACVtN,UAAU,GAXGgC,wEA4DV,IAAAkB,EAAAhB,KAEGqL,EAAYrL,KAAKH,MAAMyL,QAEvBtL,KAAKH,MAAM7C,cAsCfqO,EAAYA,EAAU5P,OAAO,SAAC6I,GAK5B,OAHA9E,QAAQC,IAAI6E,EAAK,kBAAkBkE,UAAU,GAAG,KAChDhJ,QAAQC,IAAIuB,EAAKnB,MAAM9C,WAEhBiE,EAAKnB,MAAM9C,UAAUyD,SAAS8D,EAAK,kBAAkBkE,UAAU,GAAG,OA1CjExI,KAAKH,MAAM3E,cA4BbmQ,EAAYA,EAAU5P,OAAO,SAAC6I,GAC5B,OAAOA,EAAK,kBAAkBY,cAAc1E,SAASQ,EAAKnB,MAAM0L,YAAYrG,kBA1BrElF,KAAKH,MAAMpE,SAIZ4P,GADAA,GADAA,EAAYA,EAAU5P,OAAOuE,KAAKkK,aACZzO,OAAOuE,KAAKmK,cACZ1O,OAAOuE,KAAKqK,eAElC7K,QAAQC,IAAI4L,GAEXrL,KAAKH,MAAMxE,OAAOmF,SAAS,cAC3B6K,EAAYA,EAAU5P,OAAOuE,KAAK8J,aAGlC9J,KAAKH,MAAMxE,OAAOmF,SAAS,eAC3B6K,EAAYA,EAAU5P,OAAOuE,KAAK+J,YAElC/J,KAAKH,MAAMxE,OAAOmF,SAAS,iBAC3B6K,EAAYA,EAAU5P,OAAOuE,KAAKgK,YAElChK,KAAKH,MAAMxE,OAAOmF,SAAS,cAC3B6K,EAAYA,EAAU5P,OAAOuE,KAAKiK,aAyBrD,IAAIuB,EACAC,EACAC,EACAC,EACAC,EAEJJ,EAAcH,EAAU5P,OAAO,SAAC6I,GAC9B,MAAmC,MAA5BA,EAAI,SAAaa,SAG1BsG,EAAeJ,EAAU5P,OAAO,SAAC6I,GAC/B,MAAmC,MAA5BA,EAAI,SAAaa,SAG1BuG,EAAgBL,EAAU5P,OAAO,SAAC6I,GAChC,MAA6C,MAAtCA,EAAK,sBAAsBa,SAGpCwG,EAAcN,EAAU5P,OAAO,SAAC6I,GAC9B,MAA0C,MAAnCA,EAAK,mBAAmBa,SAGjCyG,EAAaP,EAAU5P,OAAO,SAAC6I,GAC7B,MAAkC,MAA3BA,EAAI,QAAYa,SAIzB,IAAIrH,EAAWkC,KAAKH,MAAM/B,SACtBsG,EAAI,EACJyH,EAAeR,EAAUlK,IAAI,SAACmD,GAChC,OACEjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIuK,MAAM,OAAO1H,KACjB/C,EAAAC,EAAAC,cAAA,UAAK+C,EAAK,mBACVjD,EAAAC,EAAAC,cAAA,UAAK+C,EAAK,sBAKZyH,EAAW,mBAmCf,OAjCI/L,KAAKH,MAAM7C,gBAEb+O,EAAW,GACR/L,KAAKH,MAAMxE,OAAOmF,SAAS,cACZ,KAAbuL,EACDA,GAAsB/L,KAAKH,MAAMzE,MAAM,GAEvC2Q,EAAWA,EAAW,MAAQ/L,KAAKH,MAAMzE,MAAM,IAGhD4E,KAAKH,MAAMxE,OAAOmF,SAAS,eACZ,KAAbuL,EACDA,GAAsB/L,KAAKH,MAAMzE,MAAM,GAEvC2Q,EAAWA,EAAW,MAAQ/L,KAAKH,MAAMzE,MAAM,IAGhD4E,KAAKH,MAAMxE,OAAOmF,SAAS,iBACZ,KAAbuL,EACDA,GAAsB/L,KAAKH,MAAMzE,MAAM,GAEvC2Q,EAAWA,EAAW,MAAS/L,KAAKH,MAAMzE,MAAM,IAGjD4E,KAAKH,MAAMxE,OAAOmF,SAAS,cACZ,KAAbuL,EACDA,GAAsB/L,KAAKH,MAAMzE,MAAM,GAEvC2Q,EAAWA,EAAW,MAAQ/L,KAAKH,MAAMzE,MAAM,KAOnDiG,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,UAChBhE,EAAauD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACxBJ,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOC,SAAO,GACd5K,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAAA,aACGsK,KAKRxK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACTJ,EAAAC,EAAAC,cAAC2K,EAAD,CAAkB1O,KAAK,WAAWmF,IAAK3C,KAAKuK,aAAaiB,KACzDnK,EAAAC,EAAAC,cAAC2K,EAAD,CAAkB1O,KAAK,YAAYmF,IAAK3C,KAAKuK,aAAakB,KAC1DpK,EAAAC,EAAAC,cAAC2K,EAAD,CAAkB1O,KAAK,aAAamF,IAAK3C,KAAKuK,aAAamB,KAC3DrK,EAAAC,EAAAC,cAAC2K,EAAD,CAAkB1O,KAAK,WAAWmF,IAAK3C,KAAKuK,aAAaoB,KAC1DtK,EAAAC,EAAAC,cAAC2K,EAAD,CAAkB1O,KAAK,UAAUmF,IAAK3C,KAAKuK,aAAaqB,KACxDvK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAAA,OAAKnB,QAASJ,KAAKH,MAAMsM,aAAc1K,UAAU,aAC7CJ,EAAAC,EAAAC,cAAA,WAAM,4BAERF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,WAAMwK,cA3NJ9J,cA0PbC,cAtBS,SAAA/E,GACpB,MAAO,CACHmO,QAASnO,EAAMhC,WACfC,MAAO+B,EAAM/B,MACbC,OAAQ8B,EAAM9B,OAEdI,OAAQ0B,EAAM1B,OACdC,QAASyB,EAAMzB,QACfC,QAASwB,EAAMxB,QACfyO,MAAOjN,EAAMvB,YACb0O,OAAQnN,EAAMtB,aAEdiC,SAAUX,EAAMW,SAEhB5C,cAAeiC,EAAM5B,kBACrBgQ,YAAapO,EAAM3B,gBAEnBwB,cAAeG,EAAMH,cACrBD,UAAWI,EAAMJ,YAIVmF,CAAyB2H,yIE5PlCuC,cAEJ,SAAAA,EAAYvM,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAoM,IAEftM,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAA2O,GAAAjM,KAAAH,KAAMH,KAEC1C,MAAQ,GAJA2C,wEASV,IAAAkB,EAAAhB,KASHqM,GAPUrM,KAAKH,MAAM+B,MAOd,IA6DX,OA3CAyK,EAjBwB,aAArBrM,KAAKH,MAAM+B,MACE5B,KAAKH,MAAMyM,SAGHnL,IAAI,SAACoL,GAEvB,IAAIxO,EAAOiD,EAAKnB,MAAM1E,WAAWM,OAAO,SAAC6I,GAEvC,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,SAC5Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,SACvEb,EAAK,cAAcY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,UAG5E,MAAO,CAACzD,KAAM6K,EAASC,QAASzO,EAAKV,UAOd,gBAArB2C,KAAKH,MAAM+B,MAEP5B,KAAKH,MAAM5D,YAGHkF,IAAI,SAACoL,GAEvB,IAAIxO,EAAOiD,EAAKnB,MAAM1E,WAAWM,OAAO,SAAC6I,GAEvC,OAAOA,EAAK,iBAAiBY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,SAC9Eb,EAAK,iBAAiBY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,UAG/E,MAAO,CAACzD,KAAM6K,EAASC,QAASzO,EAAKV,UAO3B2C,KAAKH,MAAM3D,SAGHiF,IAAI,SAACoL,GAEvB,IAAIxO,EAAOiD,EAAKnB,MAAM1E,WAAWM,OAAO,SAAC6I,GAEvC,OAAQA,EAAK,cAAcY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,SAC5Eb,EAAK,cAAcY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,SACvEb,EAAK,cAAcY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,UAG5E,MAAO,CAACzD,KAAM6K,EAASC,QAASzO,EAAKV,UASrCgE,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,MAAO4H,QAAS,SAEpCrI,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACE,MAAM,QAAS2B,WAAY,SAAU1D,KAAKH,MAAM+B,OAC7DP,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC4K,UAAW,sBAClBpL,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAU5K,MAAO,IAAKsE,OAAQ,IAAKiG,KAAMA,EACrCM,OAAQ,CAACC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAEnD1L,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOM,QAAQ,SACf3L,EAAAC,EAAAC,cAACmL,EAAA,EAAD,MACArL,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAASO,QAAQ,IACjB5L,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAKM,QAAQ,UAAU/F,KAAK,oBA5FfhF,aA+GTC,eATS,SAAA/E,GACpB,MAAO,CACHhC,WAAYgC,EAAMhC,WAClBmR,SAAUnP,EAAMpB,UAChBG,SAAUiB,EAAMjB,SAChBD,YAAakB,EAAMlB,cAIZiG,CAAyBkK,GC/GlCc,eAEJ,SAAAA,EAAYrN,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAkN,IAEfpN,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAyP,GAAA/M,KAAAH,KAAMH,KAEC1C,MAAQ,GAJA2C,wEASV,IAIHuM,EAJGrL,EAAAhB,KAoBPqM,EAdUrM,KAAKH,MAAM7D,UAEHmF,IAAI,SAACoL,GAEvB,IAAIxO,EAAOiD,EAAKnB,MAAM1E,WAAWM,OAAO,SAAC6I,GAEvC,OAAQA,EAAK,eAAeY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,SAC7Eb,EAAK,eAAeY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,SACxEb,EAAK,eAAeY,cAAcC,OAAO3E,SAAS+L,EAAQrH,cAAcC,UAG7E,MAAO,CAACzD,KAAM6K,EAAS1O,MAAOE,EAAKV,UAKnC,IADA,IAAI8P,EAAM,GACF/I,EAAI,EAAGA,EAAIiI,EAAKhP,OAAQ+G,IAC9B+I,EAAId,EAAKjI,GAAG1C,MAAQ2K,EAAKjI,GAAGvG,MAK9B,OAFA2B,QAAQC,IAAI0N,GAGV9L,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,MAAO4H,QAAS,SAChCrI,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACE,MAAM,QAAS2B,WAAY,SAAxC,cACArC,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC4K,UAAW,yBAA0BW,SAAU,aACxD/L,EAAAC,EAAAC,cAAA,OAAKwB,IAAK,oCACTC,IAAI,GAAGnB,MAAO,CAACuE,OAAQ,OAAQtE,MAAO,OAAQqH,UAAW,WACzD9H,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuL,SAAU,WAAYR,IAAK,MAAOE,KAAM,MAAO/K,MAAO,QAASsL,SAAU,UAAWF,EAAG,MACpG9L,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuL,SAAU,WAAYR,IAAK,MAAOE,KAAM,MAAO/K,MAAO,QAASsL,SAAU,UAAWF,EAAG,MACpG9L,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuL,SAAU,WAAYR,IAAK,MAAOE,KAAM,MAAO/K,MAAO,QAASsL,SAAU,UAAWF,EAAG,OACpG9L,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuL,SAAU,WAAYR,IAAK,MAAOE,KAAM,MAAO/K,MAAO,QAASsL,SAAU,UAAWF,EAAI,kBACrG9L,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuL,SAAU,WAAYL,OAAQ,OAAQD,KAAM,MAAO/K,MAAO,QAASsL,SAAU,UAAWF,EAAG,MAExG9L,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuL,SAAU,WAAYR,IAAK,MAAOE,KAAM,MAAO/K,MAAO,QAASsL,SAAU,UAAWF,EAAG,MACpG9L,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuL,SAAU,WAAYR,IAAK,MAAOE,KAAM,MAAO/K,MAAO,QAASsL,SAAU,UAAWF,EAAI,mBACrG9L,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuL,SAAU,WAAYR,IAAK,MAAOE,KAAM,MAAO/K,MAAO,QAASsL,SAAU,UAAWF,EAAG,MAEpG9L,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuL,SAAU,WAAYR,IAAK,MAAOC,MAAO,OAAQ9K,MAAO,QAASsL,SAAU,UAAWF,EAAI,uBAvD9FlL,aAuETC,eAPS,SAAA/E,GACpB,MAAO,CACHhC,WAAYgC,EAAMhC,WAClBa,UAAWmB,EAAMnB,YAIVkG,CAAyBgL,4CC7DlCI,IAD0BC,IAAOC,wBACzBD,IAAOD,OAEfG,eAEF,SAAAA,EAAY5N,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAyN,IACb3N,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAgQ,GAAAtN,KAAAH,KAAMH,KAgBZ6N,YAAc,WACZ5N,EAAKW,SAAS,SAAAkN,GAAS,MAAK,CAC1BC,OAAQD,EAAUC,SAGpB9N,EAAKD,MAAMgO,gBAtBM/N,EAkClBgO,SAAW,SAACjQ,GAEV2B,QAAQC,IAAI5B,EAAM,IAEnBiC,EAAKD,MAAMmL,aACXlL,EAAKD,MAAMqK,WAAWrM,EAAM,GAAIA,EAAM,KAvCrBiC,EA0CnBiO,aAAe,SAAClQ,GAEdiC,EAAKW,SAAS,CACZ2J,MAAOvM,IAGTiC,EAAKD,MAAMsK,YAAYtM,IAhDNiC,EAmDnBkO,cAAgB,SAACnQ,GAGF,gBAAVA,EACDiC,EAAKW,SAAS,SAAAkN,GAAS,MAAK,CAC1BM,WAAYN,EAAUM,aAIR,YAAVpQ,GACNiC,EAAKW,SAAS,SAAAkN,GAAS,MAAK,CAC1BO,YAAaP,EAAUO,cAIxBpO,EAAK3C,MAAM8Q,WAAanO,EAAK3C,MAAM+Q,WACpCrQ,EAAQ,OACDiC,EAAK3C,MAAM8Q,WAAcnO,EAAK3C,MAAM+Q,aAC3CrQ,EAAQ,QAEViC,EAAKD,MAAMwK,aAAaxM,IAvEPiC,EA4NnBiF,cAAgB,WAEdjF,EAAKD,MAAMkF,iBA9NMjF,EAiOnBqO,gBAAkB,WAEhBrO,EAAKD,MAAMsO,mBA9NTrO,EAAKuC,OAASvC,EAAKuC,OAAOoG,KAAZhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IACZA,EAAK3C,MAAQ,CACXiR,cAAc,EACdhE,MAAO,MACPwD,OAAO,EACPS,YAAY,EAEZJ,WAAW,EACXC,YAAY,GAbDpO,wEA4BjBE,KAAKS,SAAS,SAAAkN,GAAS,MAAK,CAC1BS,cAAeT,EAAUS,aACzBC,YAAaV,EAAUU,+CA4ClB,IAAArN,EAAAhB,KAEHsO,EAAWtO,KAAKH,MAAM1E,WAC1BmT,EAAWA,EAASnN,IAAI,SAACiJ,GAAD,OAAWA,EAAM,wBAEzC,IAAImE,EAAoBvO,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GACpD,MAA2B,gBAAnBA,EAAI,QAAmD,SAAnBA,EAAI,SAG9CkK,EAAgBxO,KAAKH,MAAM1E,WAAWM,OAAO,SAAC6I,GAChD,MAA2B,YAAnBA,EAAI,QAA+C,SAAnBA,EAAI,SAG1CmK,EAAYF,EAAkBlR,OAC9BqR,EAAaF,EAAcnR,OAG/BqR,EAA0B,IAAbA,GAAoBA,GADjCD,EAAwB,IAAZA,GAAmBA,EAAYC,KAK3CJ,GAFAA,EAAQ7Q,OAAAG,EAAA,EAAAH,CAAO,IAAIkR,IAAIL,KAEHnN,IAAI,SAACiJ,GACvB,OACE/I,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAcxO,QAAS,kBAAMY,EAAK+M,aAAa3D,KAASA,KAgB5D,IAZA,IAUIyE,EAAW,GArCRC,EAAA,SAuCC1K,GAEN,IAAIrG,EAAOiD,EAAKnB,MAAM1E,WAAWM,OAAO,SAAC6I,GAEvC,OAAOA,EAAI,OAAaF,EAAEhF,aAG5ByP,EAAQ,GAAAE,OAAAtR,OAAAG,EAAA,EAAAH,CACDoR,GADC,CAEJ,CACEnN,KAAM0C,EAAEhF,WACR4P,SAAUjR,EAAKV,WAXf+G,EAAI,KAAMA,GAAK,KAAMA,IAAK0K,EAA1B1K,GAkBN,IAAM6K,EAAW5N,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQ9O,QAASJ,KAAK0N,YAAa3L,MAAM,aAAa,aAEzE,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAU5K,MAAO,IAAKsE,OAAQ,IAAKiG,KAAMwC,EACrClC,OAAQ,CAACC,IAAK,EAAGC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,IAC7C1L,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOM,QAAQ,OAAOmC,MAAM,IAC5B9N,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAASrG,QAAS,CAACD,OAAQ,GAAItE,MAAO,IAAMmL,QAAQ,IACpD5L,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAKM,QAAQ,cAGjB3L,EAAAC,EAAAC,cAAC+L,GAAD,CAAO8B,YAAa,CAAC,CAAEpN,gBAAiB,SAAU,CAACA,gBAAiB,UAAYqN,WAAY,CAAC,CAAErN,gBAAiB,OAAQoE,OAAQ,QAChIkJ,YAAY,EAAQC,UAAW,CAAEvN,gBAAiB,SAAWwN,IAAK,KAAMC,IAAK,KAAMC,aAAc,CAAC,KAAM,MAAO5B,SAAU,SAACjQ,GAAD,OAAWmD,EAAK8M,SAASjQ,MAClJwD,EAAAC,EAAAC,cAAA,WAAMvB,KAAKH,MAAMnE,QAAQ2F,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAC8N,MAAO,UAAW3P,KAAKH,MAAMlE,UACpE0F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAACqO,EAAA,EAAD,CAAgB/N,MAAO,CAACC,MAAM,MAAOsE,OAAQ,OAAQqG,UAAW,kBAAmBoD,OAAQ7P,KAAK7C,MAAMiR,aAAc/L,OAAQrC,KAAKqC,QACzHhB,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAgBjO,MAAO,CAACkO,aAAc,OAAQ/N,gBAAiB,QAASD,MAAO,WAAYiO,OAAK,GAC7FhQ,KAAK7C,MAAMiN,OAEd/I,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAcpO,MAAO,CAACC,MAAM,OAAQ8H,UAAU,SAAUxD,OAAO,SAC5DkI,IAIXjN,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,UAAxB,cACA7O,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,MAAOC,YAAa,OAAQnH,WAAY,SAC5DhJ,KAAK7C,MAAM8Q,UAAc5M,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQzN,UAAU,qBAAqBrB,QAAS,kBAAMY,EAAKgN,cAAc,iBAAzE,eACtB3M,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQzN,UAAU,cAAcrB,QAAS,kBAAMY,EAAKgN,cAAc,iBAAlE,eACHhO,KAAK7C,MAAM+Q,WAAe7M,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQzN,UAAU,qBAAqBI,MAAO,CAAC8N,MAAO,SAAUvP,QAAS,kBAAMY,EAAKgN,cAAc,aAAlG,WACxB3M,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQzN,UAAU,cAAcI,MAAO,CAAC8N,MAAO,SAAUvP,QAAS,kBAAMY,EAAKgN,cAAc,aAA3F,YAGN3M,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,QAAxB,kBAGA7O,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,MAAOlH,WAAY,SACvChJ,KAAK7C,MAAMkR,WAAehN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8O,SAAA,KAAE/O,EAAAC,EAAAC,cAAC8O,GAAA,EAAD,CAAOxO,MAAO,CAAC4K,UAAW,kBAAmBzK,gBAAiB,WAAYR,IAAI,WAAY,IAAIH,EAAAC,EAAAC,cAAA,2BAAyB,IACrJF,EAAAC,EAAAC,cAAC8O,GAAA,EAAD,CAAOxO,MAAO,CAAC4K,UAAW,kBAAmBzD,WAAY,QAASjH,MAAM,MAAMP,IAAI,QAAS,IAAIH,EAAAC,EAAAC,cAAA,uBAAqB,KAAYF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuE,OAAQ,QAArB,eAE9H/E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+O,EAAA,EAAD,CAAUC,OAAK,GACblP,EAAAC,EAAAC,cAAC+O,EAAA,EAAD,CAAU7O,UAAU,WAAW+O,KAAG,EAAC3S,MAAO4Q,IAC1CpN,EAAAC,EAAAC,cAAC+O,EAAA,EAAD,CAAUE,KAAG,EAACzO,MAAM,SAASlE,MAAO6Q,OAK1CrN,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,MAAOlH,WAAY,QACzC3H,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQ9O,QAASJ,KAAK+E,cAAe0L,SAAO,EAAC1O,MAAM,aAAc/B,KAAKH,MAAM/B,SAAa,gCAAoC,6BAAuC,KAGpKkC,KAAKH,MAAMuJ,SAAa/H,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,MAAOlH,WAAY,QACnE3H,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQ9O,QAASJ,KAAKmO,gBAAiBsC,SAAO,EAAC1O,MAAM,aAAc/B,KAAKH,MAAM7C,cAAkB,mBAAuB,yBAAmC,KACjJqE,EAAAC,EAAAC,cAAA,YAEXF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,OAAQlH,WAAY,MAAO0H,OAAQ,oBAGnDrP,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQuB,SAAO,EAAC1O,MAAM,YAAY3B,QAASJ,KAAK0N,aAAhD,uBAEArM,EAAAC,EAAAC,cAACoP,GAAA,EAAD,CAAOrK,KAAK,KAAKzE,MAAO,CAAC+O,SAAU,QAASC,UAAW,QAAS/O,MAAO,QAASsE,OAAQ,SAAUyJ,OAAQ7P,KAAK7C,MAAMyQ,MAAOvL,OAAQrC,KAAKqC,QACvIhB,EAAAC,EAAAC,cAACuP,GAAA,EAAD,CAAaC,MAAO9B,EAAUpN,MAAO,CAACG,gBAAiB,QAASD,MAAO,SAAUM,OAAQrC,KAAK0N,aAA9F,uBAEArM,EAAAC,EAAAC,cAACyP,GAAA,EAAD,CAAWnP,MAAO,CAACG,gBAAiB,QAAS4H,UAAW,SAEpDvI,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC6H,QAAS,OAAQtD,OAAQ,QACnC/E,EAAAC,EAAAC,cAAC0P,GAAD,CAAWrP,MAAM,aACjBP,EAAAC,EAAAC,cAAC0P,GAAD,CAAWrP,MAAM,cAGpBP,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC6H,QAAS,OAAOtD,OAAQ,MAAO8J,UAAW,OACpD7O,EAAAC,EAAAC,cAAC0P,GAAD,CAAWrP,MAAM,gBACjBP,EAAAC,EAAAC,cAAC2P,GAAD,kBAjNNjP,aA0QVC,eAnBS,SAAA/E,GACpB,MAAO,CAEH1B,OAAQ0B,EAAM1B,OACdC,QAASyB,EAAMzB,QACfC,QAASwB,EAAMxB,QACfyO,MAAOjN,EAAMvB,YACb0O,OAAQnN,EAAMtB,aACdV,WAAYgC,EAAMhC,WAClB2C,SAAUX,EAAMW,SAChBd,cAAeG,EAAMH,cAErBoM,SAAUjM,EAAMF,aAzBG,SAAAkF,GACvB,MAAO,CAEH6I,WAAY,kBAAM7I,EAAS,CAAC3E,KZ/OT,iBYgPnB0M,WAAY,SAACxO,EAASC,GAAV,OAAsBwG,EAAS,CAAC3E,KZ/OzB,cY+OwD9B,QAASA,EAASC,QAASA,KACtGwO,YAAa,SAACC,GAAD,OAAWjI,EAAS,CAAC3E,KZ/Od,eY+O8CG,IAAKyM,KACvEC,aAAc,SAACC,GAAD,OAAYnI,EAAS,CAAC3E,KZ/Of,gBY+OgDG,IAAK2M,KAC1EvF,cAAe,kBAAM5C,EAAS,CAAC3E,KZ9OT,oBY+OtB2Q,gBAAiB,kBAAOhM,EAAS,CAAC3E,KZzOZ,sBYiQf0E,CAA6CuL,ICrRtD0D,eAUJ,SAAAA,EAAYtR,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAmR,IACfrR,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAA0T,GAAAhR,KAAAH,KAAMH,KAURuR,iBAAmB,WACY,YAA1BtR,EAAK3C,MAAMkU,WACZvR,EAAKW,SAAS,CACZ4Q,WAAY,WAIdvR,EAAKW,SAAS,CACZ4Q,WAAY,YAIhB7R,QAAQC,IAAIK,EAAK3C,MAAMkU,aAvBRvR,EAgCjBwR,aAAe,SAACC,GACbzR,EAAKW,SAAS,CAAC5C,MAAO0T,EAAM/N,OAAO3F,SAjCrBiC,EAoClB0R,aAAe,SAACD,GAEdzR,EAAKD,MAAMkF,gBACXjF,EAAKD,MAAM4R,0BACX3R,EAAKD,MAAM6R,sBAAsB5R,EAAK3C,MAAMU,OAE5CiC,EAAKW,SAAS,CAAC5C,MAAO,KACtB0T,EAAMI,kBAxCL7R,EAAKuC,OAASvC,EAAKuC,OAAOoG,KAAZhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IACdA,EAAK3C,MAAQ,CACXU,MAAO,GACPyE,aAAa,EACb+O,WAAY,WAPCvR,wEA2BfE,KAAKS,SAAS,CACZ6B,aAActC,KAAK7C,MAAMmF,+CAqB3B,IAAI3E,EAAM,qBACPqC,KAAK7C,MAAMmF,cACZ3E,EAAM,qBASR,OAEI0D,EAAAC,EAAAC,cAAA,OAAKE,UAAYzB,KAAKH,MAAM+R,KAAW5R,KAAKH,MAAM/B,SAAiC,iBAApB,gBAA0C,aAEzGuD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAAA,QAAMsQ,SAAU7R,KAAKwR,aAAc7P,GAAG,UACpCN,EAAAC,EAAAC,cAAA,SAAO/D,KAAK,SAASsU,YAAY,SAASjU,MAAOmC,KAAK7C,MAAMU,MAAOiQ,SAAU9N,KAAKsR,iBAIpFjQ,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC4K,UAAW,qBAAsB7I,QAAS,UAAW8M,OAAQ,QACtErP,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC4K,UAAW9O,IACpB0D,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQzN,UAAU,UAAUI,MAAO,CAAE6O,OAAQ,MAAO5O,MAAO,QAASsE,OAAQ,QAASqK,SAAO,EAAC1O,MAAM,OAAOJ,GAAI,iBAAiBN,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAE4K,UAAW,oBAAsBsF,eAAgB,QAASjP,YAAa,QAASK,YAAa,QAAQ9B,EAAAC,EAAAC,cAAA,4BAGrPF,EAAAC,EAAAC,cAACyQ,EAAA,EAAD,CAAS5O,WAAW,EAAMvB,MAAO,CAACC,MAAO,OAAQsE,OAAQ,OAAQrE,MAAO,QAAS0K,UAAW,qBAAsBiE,OAAQ,MAAOuB,UAAU,QAAQpC,OAAQ7P,KAAK7C,MAAMmF,YAAakB,OAAQ,gBAAiBnB,OAAQrC,KAAKqC,QACvNhB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAe5B,MAAO,CAAC6B,WAAY,OAAQ5B,MAAO,OAAQE,gBAAiB,QAASD,MAAO,UAA3F,eACAV,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAa9B,MAAKpE,OAAAyU,EAAA,EAAAzU,CAAA,CAAGsE,MAAO,QAASD,MAAO,OAAQ4B,WAAY,OAAQ1B,gBAAiB,SAAvE,QAAuF,UAAUX,EAAAC,EAAAC,cAAC4Q,GAAD,CAAYtE,aAAc7N,KAAKoR,iBAAkBgB,SAAUpS,KAAKH,MAAMuS,sBAvFjLnQ,aAgHVC,eAPS,SAAA/E,GACpB,MAAO,CACHW,SAAUX,EAAMW,WAXG,SAAAqE,GACvB,MAAO,CACHsP,wBAAyB,kBAAMtP,EAAS,CAAC3E,KblFd,yBamF3BkU,sBAAuB,SAAC7T,GAAD,OAAWsE,EAAS,CAAC3E,KblFnB,oBakFwDG,IAAKE,KACtFkH,cAAe,kBAAM5C,EAAS,CAAC3E,Kb9FT,sBa0Gf0E,CAA6CiP,ICjHtDkB,eAEJ,SAAAA,EAAYxS,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAqS,IAEfvS,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAA4U,GAAAlS,KAAAH,KAAMH,KAQVwC,OAAS,WACPvC,EAAKW,SAAS,SAAAkN,GAAS,MAAK,CAC1BC,OAAQD,EAAUC,UAZH9N,EAiBnB2E,QAAU,SAAC6N,GAEc,SAApBxS,EAAK3C,MAAMuE,MAEZ5B,EAAKW,SAAS,CACZ8R,KAAMD,EAAK5Q,OAGb5B,EAAKD,MAAMyH,kBAAkBgL,EAAK5Q,OAK/B4Q,EAAK5Q,MAAQ5B,EAAK3C,MAAMoV,MAEzBzS,EAAKW,SAAS,CACZ8R,KAAMD,EAAK5Q,OAGb5B,EAAKD,MAAMyH,kBAAkBgL,EAAK5Q,OAIlC5B,EAAKW,SAAS,CACZ8R,KAAM,UArCRzS,EAAK3C,MAAQ,CACXoV,KAAM,OACN3E,OAAO,GANI9N,wEA+CR,IAAAkB,EAAAhB,KAEHwS,EAAM,0CAEa,SAApBxS,KAAK7C,MAAMoV,KACZC,EAAM,0CAEoB,SAApBxS,KAAK7C,MAAMoV,KACjBC,EAAM,+CAEoB,UAApBxS,KAAK7C,MAAMoV,KACjBC,EAAM,gDAEoB,SAApBxS,KAAK7C,MAAMoV,KACjBC,EAAM,+CAEoB,kBAApBxS,KAAK7C,MAAMoV,KACjBC,EAAM,uDAEoB,SAApBxS,KAAK7C,MAAMoV,KACjBC,EAAM,+CAEoB,SAApBxS,KAAK7C,MAAMoV,KACjBC,EAAM,+CAEoB,SAApBxS,KAAK7C,MAAMoV,KACjBC,EAAM,8CAEoB,mBAApBxS,KAAK7C,MAAMoV,OACjBC,EAAM,sDAoBenR,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQ9O,QAASJ,KAAKqC,OAAQN,MAAM,aAAa,aAElE,OACCV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAIfJ,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC4K,UAAW,2BACxBpL,EAAAC,EAAAC,cAACkR,EAAAnR,EAAD,CAAayB,IAAKyP,EAAKrR,IA1BlB,CACRO,KAAM,SACNgR,MAAO,CACP,CAAChR,KAAM,OAAQiR,MAAO,OAAQC,OAAQ,CAAC,GAAI,EAAG,IAAK,IAAKC,UAAW,eACnE,CAACnR,KAAM,QAASiR,MAAO,OAAQC,OAAQ,CAAC,GAAI,GAAI,GAAI,KAAMC,UAAW,eACrE,CAACnR,KAAM,OAAQiR,MAAO,OAAQC,OAAQ,CAAC,GAAI,GAAI,IAAK,KAAMC,UAAW,eACrE,CAACnR,KAAM,gBAAiBiR,MAAO,OAAQC,OAAQ,CAAC,GAAI,IAAK,IAAK,KAAMC,UAAW,eAC/E,CAACnR,KAAM,OAAQiR,MAAO,OAAQC,OAAQ,CAAC,GAAI,IAAK,IAAK,KAAMC,UAAW,eACtE,CAACnR,KAAM,OAAQiR,MAAO,OAAQC,OAAQ,CAAC,GAAI,IAAK,IAAK,KAAMC,UAAW,eAEtE,CAACnR,KAAM,OAAQiR,MAAO,OAAQC,OAAQ,CAAC,GAAI,GAAI,GAAI,KAAMC,UAAW,eACpE,CAACnR,KAAM,OAAQiR,MAAO,OAAQC,OAAQ,CAAC,IAAK,GAAI,IAAK,KAAMC,UAAW,eAEtE,CAACnR,KAAM,iBAAkBiR,MAAO,OAAQC,OAAQ,CAAC,EAAG,IAAK,GAAI,KAAMC,UAAW,eAC9E,CAACnR,KAAM,iBAAkBiR,MAAO,OAAQC,OAAQ,CAAC,IAAK,IAAK,IAAK,KAAMC,UAAW,iBAY3C/Q,MAAO,IAAKsE,OAAQ,IACrDhG,QAAS,SAAAkS,GAAI,OAAItR,EAAKyD,QAAQ6N,MAE/BjR,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,OAAQzD,UAAW,sBAAuB1K,MAAO,UAAW2B,WAAY,MAAO2J,SAAU,UAC7GhM,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,6CA/GMU,aA8HTC,eAAQ,KANI,SAAAC,GACvB,MAAO,CACHmF,kBAAmB,SAACzJ,GAAD,OAAWsE,EAAS,CAAC3E,KdlIhB,mBckIoDG,IAAKE,OAI1EqE,CAAkCmQ,uBC/H3CS,eAEJ,SAAAA,EAAYjT,GAAO,IAAAC,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAA8S,IAEfhT,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAqV,GAAA3S,KAAAH,KAAMH,KA2BRwC,OAAS,WACPvC,EAAKW,SAAS,SAAAkN,GAAS,MAAK,CAC1BC,OAAQD,EAAUC,UA/BL9N,EAmCjBiT,sBAAwB,SAACxB,GAEvBzR,EAAKW,SAAS,CACZuS,cAAe,yBAtCFlT,EA0CjBmT,qBAAuB,SAAC1B,GAEtBzR,EAAKW,SAAS,CACZyS,aAAc,yBA7CDpT,EAiDjBqT,uBAAyB,SAAC5B,GAExBzR,EAAKW,SAAS,CACZ2S,eAAgB7B,EAAM/N,OAAO3F,SApDhBiC,EAwDjBuT,sBAAwB,SAAC9B,GAEvBzR,EAAKW,SAAS,CACZ6S,cAAe/B,EAAM/N,OAAO3F,SA3DfiC,EAgEjByT,oBAAsB,SAAChC,GAGrBzR,EAAKW,SAAS,CACZ+S,YAAajC,EAAM/N,OAAO3F,SApEbiC,EAwEjB2T,uBAAyB,SAAClC,GAExBzR,EAAKW,SAAS,CACZiT,eAAgBnC,EAAM/N,OAAO3F,SA3EhBiC,EA+EjB6T,sBAAwB,SAACpC,GAEvBzR,EAAKW,SAAS,CACZmT,cAAerC,EAAM/N,OAAO3F,SAlFfiC,EAsFjB+T,cAAgB,WAEd,IAGIC,EAAchU,EAAKD,MAAMiU,YACzBC,EAAajU,EAAKD,MAAMwC,OAExB4Q,EAAuBnT,EAAKmT,qBAE5B7U,EAAaC,KAAKC,UAAU,CAC3BC,SAAUuB,EAAK3C,MAAMmW,cACrB9U,SAAUsB,EAAK3C,MAAMyW,gBAGrBI,EAAMlU,EAAK3C,MAAMyW,cAEjBlV,EAAU,IAAIC,QAAQ,kDAAmD,CACvEC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMX,IAEZY,MAAMN,GAASO,KAAK,SAASC,GAEQ,QAA/BA,EAASC,OAAOC,WAChBF,EAASG,OAAOJ,KAAK,SAASI,GAE1B,IAAI4U,EAAc5V,KAAKiB,MAAMD,GACD,YAAxB4U,EAAY1U,SAEbuU,EAAYG,EAAY1V,SAAUyV,EAAKC,EAAYxV,WACnDsV,KAICd,MAORA,OAlIQnT,EAwIjBoU,eAAiB,WAEf,IAGIJ,EAAchU,EAAKD,MAAMiU,YACzBC,EAAajU,EAAKD,MAAMwC,OAExB0Q,EAAwBjT,EAAKiT,sBAE7BiB,EAAMlU,EAAK3C,MAAMuW,eAEjBtV,EAAaC,KAAKC,UAAU,CAC3BC,SAAUuB,EAAK3C,MAAMiW,eACrBe,MAAOrU,EAAK3C,MAAMqW,YAClBhV,SAAUsB,EAAK3C,MAAMuW,iBAGrBhV,EAAU,IAAIC,QAAQ,mDAAoD,CACxEC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMX,IAEZY,MAAMN,GAASO,KAAK,SAASC,GAEQ,QAA/BA,EAASC,OAAOC,WAChBF,EAASG,OAAOJ,KAAK,SAASI,GAE1B,IAAI4U,EAAc5V,KAAKiB,MAAMD,GACD,YAAxB4U,EAAY1U,SAEbC,QAAQC,IAAIwU,GACZH,EAAYG,EAAY1V,SAAUyV,EAAKC,EAAYxV,WACnDsV,KAIChB,MAORA,OAlLLjT,EAAK3C,MAAQ,CACXoV,KAAM,OACNiB,YAAa,GACbJ,eAAgB,GAChBM,eAAgB,GAChBV,cAAe,GACfM,cAAe,GACfM,cAAe,GACfV,aAAc,GACdtF,OAAO,GAGX9N,EAAKyT,oBAAsBzT,EAAKyT,oBAAoB9K,KAAzBhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IAC3BA,EAAKqT,uBAAyBrT,EAAKqT,uBAAuB1K,KAA5BhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IAC9BA,EAAK2T,uBAAyB3T,EAAK2T,uBAAuBhL,KAA5BhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IAC9BA,EAAKiT,sBAAwBjT,EAAKiT,sBAAsBtK,KAA3BhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IAE7BA,EAAKuT,sBAAwBvT,EAAKuT,sBAAsB5K,KAA3BhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IAC7BA,EAAK6T,sBAAwB7T,EAAK6T,sBAAsBlL,KAA3BhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IAC7BA,EAAKmT,qBAAuBnT,EAAKmT,qBAAqBxK,KAA1BhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IAE5BA,EAAKoU,eAAiBpU,EAAKoU,eAAezL,KAApBhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IACtBA,EAAK+T,cAAgB/T,EAAK+T,cAAcpL,KAAnBhL,OAAAiL,EAAA,EAAAjL,CAAAqC,IA1BNA,wEA6LEuB,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQ9O,QAASJ,KAAKqC,OAAQN,MAAM,aAAa,aASlE,OAEAV,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuE,OAAQ,QAAStE,MAAM,QAASsS,eAAgB,QAASpS,gBAAiB,UAEvFX,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACuE,OAAQ,MAAOtE,MAAO,QACnCT,EAAAC,EAAAC,cAAA,OAAKwB,IAAK,+BACTC,IAAI,GAAGnB,MAAO,CAACC,MAAO,OAAQ2K,UAAW,wBAAyBtD,UAAW,YAG3E9H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAEfJ,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACE,MAAO,QAASsS,UAAW,SAAUrL,WAAY,KAAMkH,UAAW,OAA/E,kEAEA7O,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQuB,SAAO,EAACnK,KAAK,KAAKzE,MAAO,CAACE,MAAO,QAASiH,WAAY,MAAOkH,UAAW,KAAMhN,YAAa,OAAQJ,YAAa,QAASyG,aAAc,OAAQxH,MAAM,QAAQ3B,QAASJ,KAAKqC,QAAnL,SAA0M,IAE1MhB,EAAAC,EAAAC,cAACoP,GAAA,EAAD,CAAOrK,KAAK,KAAKzE,MAAO,CAACG,gBAAiB,QAAS4O,SAAU,OAASC,UAAW,OAAQ/O,MAAO,OAAQsE,OAAQ,QAASyJ,OAAQ7P,KAAK7C,MAAMyQ,MAAOvL,OAAQrC,KAAKqC,QAE9JhB,EAAAC,EAAAC,cAACyP,GAAA,EAAD,CAAWnP,MAAO,CAACG,gBAAiB,QAASD,MAAO,UACpDV,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAC6H,QAAS,SACrBrI,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,MAAOoO,UAAW,UACnC7O,EAAAC,EAAAC,cAAC+S,GAAA,EAAD,KACqC,KAA5BtU,KAAK7C,MAAM+V,aAAwB7R,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACE,MAAO,QAAS/B,KAAK7C,MAAM+V,cAAwB7R,EAAAC,EAAAC,cAAA,YACpGF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOxH,MAAO,CAAE0H,aAAc,OAAQ/L,KAAK,OAAOsQ,SAAU9N,KAAKqT,sBAAuBxV,MAAOmC,KAAK7C,MAAMmW,gBAE1GjS,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,UAAxB,YACA7O,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOxH,MAAO,CAAE0H,aAAc,OAAQ/L,KAAK,WAAWsQ,SAAU9N,KAAK2T,sBAAuB9V,MAAOmC,KAAK7C,MAAMyW,gBAEhHvS,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQ9O,QAASJ,KAAK6T,cAAehS,MAAO,CAACqO,UAAW,MAAOlH,WAAY,OAAQjH,MAAM,aAAzF,WAGTV,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,MAAOkH,WAAY,OACpC3H,EAAAC,EAAAC,cAAC+S,GAAA,EAAD,KACwC,KAA7BtU,KAAK7C,MAAM6V,cAAyB3R,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACE,MAAO,QAAS/B,KAAK7C,MAAM6V,eAAyB3R,EAAAC,EAAAC,cAAA,YACxGF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,SAAxB,YACA7O,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOxH,MAAO,CAAE0H,aAAc,OAAQ/L,KAAK,OAAOsQ,SAAU9N,KAAKmT,uBAAwBtV,MAAOmC,KAAK7C,MAAMiW,iBAE3G/R,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,SAAxB,SACA7O,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOxH,MAAO,CAAE0H,aAAc,OAAQ/L,KAAK,QAAQsQ,SAAU9N,KAAKuT,oBAAqB1V,MAAOmC,KAAK7C,MAAMqW,cAEzGnS,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,SAAxB,YACA7O,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOxH,MAAO,CAAE0H,aAAc,OAAQ/L,KAAK,WAAWsQ,SAAU9N,KAAKyT,uBAAwB5V,MAAOmC,KAAK7C,MAAMuW,iBAEhHrS,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQ9O,QAASJ,KAAKkU,eAAgBrS,MAAO,CAACqO,UAAW,MAAOlH,WAAY,OAAQjH,MAAM,aAA1F,aAIVV,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,MAAOkH,WAAY,OACpC3H,EAAAC,EAAAC,cAAC+S,GAAA,EAAD,KACQjT,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACqO,UAAW,SAAxB,YACA7O,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOxH,MAAO,CAAE0H,aAAc,OAAQ/L,KAAK,UAE5C6D,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAQ9O,QAASJ,KAAKH,MAAMwC,OAAQR,MAAO,CAACqO,UAAW,MAAOlH,WAAY,OAAQjH,MAAM,aAAxF,iBAKVV,EAAAC,EAAAC,cAAA,OAAKwB,IAAK,mCACTC,IAAI,GAAGnB,MAAO,CAACC,MAAO,MAAOsE,OAAQ,MAAOqG,UAAW,wBAAyBtD,UAAW,sBAlQjFlH,aA2RRC,eAfS,SAAA/E,GACpB,MAAO,CACHhC,WAAYgC,EAAMhC,WAClBmR,SAAUnP,EAAMpB,UAChBG,SAAUiB,EAAMjB,SAChBD,YAAakB,EAAMlB,cAIA,SAAAkG,GACvB,MAAO,CACH2R,YAAa,SAACS,EAAWC,EAAW3W,GAAvB,OAAiCsE,EAAS,CAAC3E,Kf/PpC,ee+PoEkC,QAAS6U,EAAW5U,YAAa6U,EAAW7W,IAAKE,OAIlIqE,CAA6C4Q,mCCjRtD2B,eAEF,SAAAA,IAAc,IAAA3U,EAAA,OAAArC,OAAAsC,EAAA,EAAAtC,CAAAuC,KAAAyU,IACZ3U,EAAArC,OAAAwC,EAAA,EAAAxC,CAAAuC,KAAAvC,OAAAyC,EAAA,EAAAzC,CAAAgX,GAAAtU,KAAAH,QAOJ0U,eAAiB,WAEf5U,EAAKW,SAAS,CACZkU,aAAa,KAXD7U,EAehB8U,WAAa,WAEX9U,EAAKW,SAAS,CACZkU,aAAa,KAlBD7U,EAsDd+U,4BAA8B,SAACxI,GAiB7B,IAfA,IAAIyI,EACJ,CAACC,gBAAiB,EAAEC,cAAe,EAAEC,SAAY,EAAEC,SAAY,EAAEC,SAAY,EAC7EC,SAAY,EAAEC,gBAAiB,EAAEC,gBAAiB,EAAEC,UAAa,EAAEC,QAAW,EAAEC,sBAAuB,EAAEC,uBAAwB,EAChIC,KAAQ,EAAEC,0BAA2B,EACrCC,2BAA4B,EAAEC,MAAS,EAAEC,YAAa,EACvDC,UAAa,EAAEC,cAAe,EAAGC,QAAW,GAExCC,EACF,CAACC,QAAW,EAAGC,cAAiB,EAAGC,oBAAqB,EAAGC,SAAY,EACtE7M,QAAW,EAAG8M,kCAAmC,EAAGC,yBAA0B,EAAGC,QAAW,EAAGC,SAAY,EAC1GC,QAAW,EAAGC,WAAc,EAAGC,SAAY,EAAGC,UAAa,EAAGC,WAAc,EAAGC,WAAc,EAC/FC,YAAe,EAAGC,WAAc,EAAGhM,WAAc,EAAGiM,SAAY,GAE9DC,EAAY,GAERjT,EAAI,EAAGA,EAAIiI,EAAKhP,OAAQ+G,IAAK,CAEjC,IAAIkT,EAAW,EACXC,EAAY,EAEblL,EAAKjI,GAAG,iBAAiBc,gBAAiB4P,IAC3CwC,GAAYxC,EAAiBzI,EAAKjI,GAAG,mBAGpCiI,EAAKjI,GAAG,iBAAiBc,gBAAiB4P,IAC3CwC,GAAYxC,EAAiBzI,EAAKjI,GAAG,mBAGpCiI,EAAKjI,GAAG,cAAcc,gBAAiBiR,IACxCoB,EAAY7M,KAAK+E,IAAI8H,EAAWpB,EAAc9J,EAAKjI,GAAG,iBAGrDiI,EAAKjI,GAAG,cAAcc,gBAAiBiR,IACxCoB,EAAY7M,KAAK+E,IAAI8H,EAAWpB,EAAc9J,EAAKjI,GAAG,iBAGrDiI,EAAKjI,GAAG,cAAcc,gBAAiBiR,IACxCoB,EAAY7M,KAAK+E,IAAI8H,EAAWpB,EAAc9J,EAAKjI,GAAG,iBAGxD,IAAIrG,EAAOuZ,EAAWC,EAElBC,EAAM,EAERA,EADCzZ,GAAQ,GACH,EACAA,EAAO,IAAMA,EAAO,GACpB,EAEA,EAGRsZ,EAAUjT,GAAK,CAACiT,UAAaG,GAIjC,OAAOH,GA/GKvX,EAoHd2X,kBAAoB,SAACpL,GAkCnB,IAhCA,IAAIyI,EACJ,CAACC,gBAAiB,EAAEC,cAAe,EAAEC,SAAY,EAAEC,SAAY,EAAEC,SAAY,EAC7EC,SAAY,EAAEC,gBAAiB,EAAEC,gBAAiB,EAAEC,UAAa,EAAEC,QAAW,EAAEC,sBAAuB,EAAEC,uBAAwB,EAChIC,KAAQ,EAAEC,0BAA2B,EACrCC,2BAA4B,EAAEC,MAAS,EAAEC,YAAa,EACtDC,UAAa,EAAE0B,cAAe,EAAGxB,QAAW,GAMzCyB,EACJ,CACIC,kBAAmB,EACnBC,SAAY,EACZC,oBAAqB,EACrBC,QAAW,EACXC,qBAAsB,EACtBC,UAAa,EACbC,sBAAuB,EACvBC,YAAe,EACfC,0BAA2B,EAC3BjJ,KAAQ,EACRkJ,SAAY,EACZC,oBAAqB,EACrBC,kBAAmB,EACnBC,MAAS,EACTC,qBAAsB,GAGtBC,EAAa,GAETtU,EAAI,EAAGA,EAAIiI,EAAKhP,OAAQ+G,IAAK,CAEjC,IAAIkT,EAAW,EACXqB,EAAW,EAEZtM,EAAKjI,GAAG,iBAAiBc,gBAAiB4P,IAC3CwC,EAAW5M,KAAK+E,IAAI6H,EAAUxC,EAAiBzI,EAAKjI,GAAG,oBAGtDiI,EAAKjI,GAAG,iBAAiBc,gBAAiB4P,IAC3CwC,EAAW5M,KAAK+E,IAAI6H,EAAUxC,EAAiBzI,EAAKjI,GAAG,oBAGtDiI,EAAKjI,GAAG,cAAcc,gBAAiByS,IACxCgB,EAAWjO,KAAK+E,IAAIkJ,EAAUhB,EAActL,EAAKjI,GAAG,iBAGnDiI,EAAKjI,GAAG,cAAcc,gBAAiByS,IACxCgB,EAAWjO,KAAK+E,IAAIkJ,EAAUhB,EAActL,EAAKjI,GAAG,iBAGnDiI,EAAKjI,GAAG,cAAcc,gBAAiByS,IACxCgB,EAAWjO,KAAK+E,IAAIkJ,EAAUhB,EAActL,EAAKjI,GAAG,iBAGtDsU,EAAWtU,GAAK,CAACsU,WAAcpB,EAAWqB,GAE9C,OAAOD,GAjLK5Y,EAoLd8Y,mBAAqB,SAAC1B,GAyFpB,OAvFAA,EAAcA,EAAY/V,IAAI,SAACmD,GAE7B,IAAIuU,EAAQ,EACRC,EAAa,GAEbC,EAAczU,EAAK,0BAEvB,OAAQyU,GAEJ,IAAK,UACHA,EAAc,EACd,MACF,IAAK,SACHA,EAAc,EACd,MACF,IAAK,YACFA,EAAc,EACf,MACF,IAAK,WACHA,EAAc,EACd,MACF,IAAK,SACHA,EAAc,EACd,MACF,IAAK,QACHA,EAAc,EACd,MACF,QACEA,EAAc,EACdD,GAA0B,EAIhC,IAAIE,EAAY1U,EAAK,wBAElB2U,MAAMD,GACPF,GAA0B,EAK1BD,GAAShQ,SAASmQ,GAGpB,IAAIE,EAAW5U,EAAK,wBAEjB2U,MAAMC,GACPJ,GAA0B,EAI1BD,GAAShQ,SAASqQ,GAGpB,IAAIC,EAAW7U,EAAK,+BAEjB2U,MAAME,GACPL,GAA0B,EAI1BD,GAAShQ,SAASsQ,GAGpB,IAAIC,EAAW9U,EAAI,QAEhB2U,MAAMG,GACPN,GAA0B,EAI1BD,GAAShQ,SAASuQ,GAGpB,IAAIC,EAAW/U,EAAI,WAUnB,OARG2U,MAAMI,GACPP,GAA0B,EAI1BD,GAAShQ,SAASwQ,GAGb,CAACC,aAAiBT,EAAQC,EAAc,KAAKS,QAAQ,OA1QlDzZ,EAgRhB0Z,cAAgB,WACd1Z,EAAKW,SAAS,CACZkU,aAAa,KAhRb7U,EAAK3C,MAAQ,CACXkP,KAAM,GACNsI,aAAa,GAJH7U,mFA0BM,IAAAkB,EAAAhB,KAEhByZ,KAASC,KAAK,CACZlY,IAAK,+CACLmY,SAAU,SAAAC,GAOR,IALA,IAAI7b,EAAO6b,EAAU,OAAWC,SAE5B3C,EAAclW,EAAK4X,mBAAmBgB,EAAU,YAAgBC,UAChEC,EAAa9Y,EAAKyW,kBAAkBmC,EAAU,OAAWC,UACzDxC,EAAYrW,EAAK6T,4BAA4B+E,EAAU,OAAWC,UAC9DzV,EAAI,EAAGA,EAAIrG,EAAKV,OAAQ+G,IAC1BrG,EAAKqG,GAAL3G,OAAAC,EAAA,EAAAD,CAAA,GACEM,EAAKqG,GADP,CAEDkV,YAAapC,EAAY9S,GAAZ,YACbsU,WAAYoB,EAAW1V,GAAX,WACZiT,UAAWA,EAAUjT,GAAV,YAIhB5E,QAAQC,IAAI1B,GACZiD,EAAKnB,MAAMka,iBAAiBhc,IAE9Bic,aAAa,qCAuOf,OACE3Y,EAAAC,EAAAC,cAAC0Y,GAAA,EAAD,KACEja,KAAK7C,MAAMwX,YAAgBtT,EAAAC,EAAAC,cAAC2Y,GAAD,CAAU7X,OAAQrC,KAAK0U,iBAAyB1U,KAAKH,MAAM3E,cAM7EmG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAASJ,EAAAC,EAAAC,cAAC4Y,EAAD,CAAehO,aAAcnM,KAAKH,MAAMua,sBAC3E/Y,EAAAC,EAAAC,cAAC8Y,GAAD,CAAYzI,MAAM,EAAMQ,UAAU,KAPwE/Q,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACtHJ,EAAAC,EAAAC,cAAC+Y,EAAD,MACAjZ,EAAAC,EAAAC,cAACgZ,EAAD,MACAlZ,EAAAC,EAAAC,cAACiZ,EAAD,MACAnZ,EAAAC,EAAAC,cAACkZ,GAAD,MACApZ,EAAAC,EAAAC,cAAC8Y,GAAD,CAAYzI,MAAM,EAAOQ,UAAU,aAjS9BnQ,aAyTHC,eAdS,SAAA/E,GACpB,MAAO,CACHjC,cAAeiC,EAAMjC,gBAIF,SAAAiH,GACvB,MAAO,CACH4X,iBAAkB,SAAClc,GAAD,OAAWsE,EAAS,CAAC3E,KhBtTpB,cgBsTmDK,MAAOA,KAC7Euc,oBAAqB,kBAAMjY,EAAS,CAAC3E,KhBnSR,6BgBwStB0E,CAA6CuS,IC/TxCiG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNN,IAAMC,GAAc7d,EACd8d,GAAQC,YAAYF,IAE1BG,IAASC,OAAO9Z,EAAAC,EAAAC,cAAC6Z,EAAA,EAAD,CAAUJ,MAAOA,IAAO3Z,EAAAC,EAAAC,cAAC8Z,GAAD,OAAoBC,SAASC,eAAe,SDkH9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzc,KAAK,SAAA0c,GACjCA,EAAaC","file":"static/js/main.4602b6cc.chunk.js","sourcesContent":["import * as actionTypes from '../actions';\r\n\r\nconst initialState = {\r\n\r\n    searchDisplay: false,\r\n    searchData: [],\r\n    names: [],\r\n    params: [],\r\n\r\n    listDisplay: false,\r\n\r\n    searchTermDisplay: false,\r\n    searchTermQuery: '',\r\n\r\n    filter: true,\r\n    minYear: 1990,\r\n    maxYear: 2018,\r\n    venueFilter: 'all',\r\n    sourceFilter: 'both',\r\n\r\n\r\n    categories: ['Function', 'BodyZones', 'Fabrication', 'Material'],\r\n    functions: ['Storage', 'Breathability', 'Energy Harvesting', 'Feedback',\r\n     'Display', 'Electronic Elements Connections', 'Wireless Communication', 'Control', 'Movement',\r\n      'Sensing', 'Protective', 'Magnetic', 'Cognitive', 'Modularity', 'Emissivity',\r\n    'Wearability', 'Morphology', 'Aesthetics', 'Gestures'],\r\n    bodyZones: ['Head', 'Chest', 'Pelvic Region', 'Arms', 'Legs',\r\n    'Wrist and Hand', 'Back', 'Full Body', 'Feet'],\r\n    fabrication: ['Stiching/Sewing', 'Laser Cutting', 'Weaving', '3D Printing',\r\n     'Layering', 'Printing', 'Sticking', 'Head Pressing', 'Heat Transfer',\r\n      'Soldering', 'Origami', 'Molding and Casting', 'Pleating and Folding',\r\n      'Knit', 'Embroidery and Applique', 'Beading', 'Quilting',\r\n      'Patchwork and Pattering', 'Woven', 'Non Woven', 'Machining', 'Painting'],\r\n    material: ['Illumination', 'Conductive Inks', 'Polymers', 'Molding Materials',\r\n    'Threads', 'Conductive Threads','Adhesives', 'Paper and Cardboard', 'Electronics',\r\n    'Textile and Composites', 'Bonded', 'Jaquard', 'Hide', 'Hardware', 'Organic Materials',\r\n    'Inks & Finishes', 'Metal', 'Shape Memory Alloy', 'Fabrics'],\r\n\r\n    arrFunc: [],\r\n    arrBod: [],\r\n    arrFab: [],\r\n    arrMat: [],\r\n\r\n    selFunction: '',\r\n    selBodyZones: '',\r\n    selFabrication: '',\r\n    selMaterial: '',\r\n\r\n    showFunc: false,\r\n    showBod: false,\r\n    showFab: false,\r\n    showMat: false,\r\n\r\n    bookMarks: [],\r\n    viewBookmarks: false,\r\n\r\n    isLoggedIn: false,\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case actionTypes.SELECT_FUNCTION:\r\n            return {\r\n                ...state,\r\n                selFunction: action.val\r\n            }\r\n        case actionTypes.SELECT_BODYZONES:\r\n            return {\r\n                ...state,\r\n                selBodyZones: action.val\r\n            }\r\n        case actionTypes.SELECT_FABRICATION:\r\n            return {\r\n                ...state,\r\n                selFabrication: action.val\r\n            }\r\n        case actionTypes.SELECT_MATERIAL:\r\n             return {\r\n                 ...state,\r\n                 selMaterial: action.val\r\n             }\r\n        case actionTypes.SHOW_FUNC:\r\n            return {\r\n              ...state,\r\n              showFunc: !(state.showFunc)\r\n            }\r\n        case actionTypes.SHOW_BOD:\r\n            return {\r\n                ...state,\r\n                showBod: !(state.showBod)\r\n            }\r\n        case actionTypes.SHOW_FAB:\r\n           return {\r\n               ...state,\r\n               showFab: !(state.showFab)\r\n           }\r\n        case actionTypes.SHOW_MAT:\r\n           return {\r\n               ...state,\r\n               showMat: !(state.showMat)\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_FUNC:\r\n           return {\r\n                ...state,\r\n                arrFunc: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_BOD:\r\n\r\n           return {\r\n                ...state,\r\n                arrBod: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_FAB:\r\n           return {\r\n                ...state,\r\n                arrFab: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_MAT:\r\n           return {\r\n                ...state,\r\n                arrMat: [...action.value]\r\n           }\r\n        case actionTypes.UPDATE_DATA:\r\n          return {\r\n            ...state,\r\n            searchData: [...action.value]\r\n          }\r\n          case actionTypes.SEARCH_DISPLAY:\r\n            return {\r\n              ...state,\r\n              searchDisplay: true,\r\n            }\r\n\r\n          case actionTypes.REMOVE_SEARCH_DISPLAY:\r\n          return {\r\n            ...state,\r\n            searchDisplay: false,\r\n            searchTermDisplay: false,\r\n          }\r\n\r\n          case actionTypes.UPDATE_QUERY:\r\n            return {\r\n              ...state,\r\n              names: [...action.names],\r\n              params: [...action.params]\r\n            }\r\n          case actionTypes.FILTER_DATA:\r\n            return {\r\n              ...state,\r\n              filter: true,\r\n            }\r\n          case actionTypes.FILTER_YEAR:\r\n            return {\r\n              ...state,\r\n              minYear: action.minYear,\r\n              maxYear: action.maxYear,\r\n            }\r\n          case actionTypes.FILTER_VENUE:\r\n            return {\r\n              ...state,\r\n              venueFilter: action.val,\r\n            }\r\n          case actionTypes.FILTER_SOURCE:\r\n            return {\r\n              ...state,\r\n              sourceFilter: action.val,\r\n            }\r\n          case actionTypes.TOGGLE_DISPLAY:\r\n            return {\r\n              ...state,\r\n              listView: (!state.listView),\r\n            }\r\n          case actionTypes.SEARCH_TERM_DISPLAY:\r\n            return  {\r\n              ...state,\r\n              searchTermDisplay: true,\r\n            }\r\n          case actionTypes.SEARCH_TERM_QUERY:\r\n            return {\r\n              ...state,\r\n              searchTermQuery: action.val,\r\n            }\r\n          case actionTypes.UPDATE_BOOKMARKS:\r\n\r\n              let temp = [...state.bookMarks];\r\n\r\n              var index = temp.indexOf(action.val);\r\n\r\n              if (index > -1) {\r\n                 temp.splice(index, 1);\r\n              }\r\n\r\n              else {\r\n                temp.push(action.val);\r\n              }\r\n\r\n              let jsonToSend = JSON.stringify({\r\n                   username: state.username,\r\n                   password: state.password,\r\n                   bookmarks: temp\r\n               })\r\n\r\n              var request = new Request('https://chimerabackend.herokuapp.com/api/editPreferences/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                    },\r\n                    body: jsonToSend\r\n                  });\r\n                  fetch(request).then(function(response){\r\n\r\n                     if(response.status.toString() === '200') {\r\n                        response.text().then(function(text) {\r\n\r\n                            var objReceived = JSON.parse(text);\r\n                            if (objReceived.message === 'SUCCESS') {\r\n\r\n                               console.log(\"Updated\");\r\n                            }\r\n\r\n                        })\r\n                      }\r\n                  })\r\n\r\n              return {\r\n                ...state,\r\n                bookMarks: temp,\r\n              }\r\n\r\n          case actionTypes.VIEW_BOOKMARKS: {\r\n\r\n            return {\r\n              ...state,\r\n              viewBookmarks: (!state.viewBookmarks),\r\n            }\r\n\r\n          }\r\n\r\n          case actionTypes.AUTH_SUCCESS: {\r\n\r\n            console.log(action);\r\n            return {\r\n              ...state,\r\n              isLoggedIn: true,\r\n              username: action.valName,\r\n              password: action.valPassword,\r\n              bookMarks: action.val\r\n            }\r\n          }\r\n\r\n          case actionTypes.AUTH_FAILURE: {\r\n\r\n            return {\r\n              ...state,\r\n              isLoggedIn: false,\r\n            }\r\n          }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","export const SELECT_FUNCTION = 'SELECT_FUNCTION';\r\nexport const SELECT_BODYZONES = 'SELECT_BODYZONES';\r\nexport const SELECT_FABRICATION = 'SELECT_FABRICATION';\r\nexport const SELECT_MATERIAL = 'SELECT_MATERIAL';\r\n\r\nexport const SHOW_FUNC = 'SHOW_FUNC';\r\nexport const SHOW_BOD = 'SHOW_BOD';\r\nexport const SHOW_FAB = 'SHOW_FAB';\r\nexport const SHOW_MAT = 'SHOW_MAT';\r\n\r\nexport const PRE_SELECT_FUNC = 'PRE_SELECT_FUNC';\r\nexport const PRE_SELECT_BOD = 'PRE_SELECT_BOD';\r\nexport const PRE_SELECT_FAB = 'PRE_SELECT_FAB';\r\nexport const PRE_SELECT_MAT = 'PRE_SELECT_MAT';\r\n\r\nexport const UPDATE_DATA = 'UPDATE_DATA';\r\nexport const SEARCH_DISPLAY = 'SEARCH_DISPLAY';\r\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\r\n\r\nexport const FILTER_DATA = 'FILTER_DATA';\r\nexport const FILTER_YEAR = 'FILTER_YEAR';\r\nexport const FILTER_VENUE = 'FILTER_VENUE';\r\nexport const FILTER_SOURCE = 'FILTER_SOURCE';\r\n\r\nexport const TOGGLE_DISPLAY = 'TOGGLE_DISPLAY';\r\n\r\nexport const SEARCH_TERM_DISPLAY = 'SEARCH_TERM_DISPLAY';\r\nexport const SEARCH_TERM_QUERY = 'SEARCH_TERM_QUERY';\r\n\r\nexport const UPDATE_BOOKMARKS = 'UPDATE_BOOKMARKS';\r\nexport const VIEW_BOOKMARKS = 'VIEW_BOOKMARKS';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\r\n\r\nexport const REMOVE_SEARCH_DISPLAY = 'REMOVE_SEARCH_DISPLAY';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPanePopoverTab.css';\r\nimport { Button, CustomInput, Form, FormGroup, Label } from 'reactstrap';\r\nimport * as actionTypes from '../store/actions';\r\n\r\n\r\nclass LeftPanePopoverTab extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n         listArr: this.props.selArr,\r\n        };\r\n    }\r\n\r\n    onClick = (subtype) => {\r\n\r\n\r\n        let tempArr = this.state.listArr;\r\n\r\n        if(this.state.listArr.includes(subtype)) {\r\n\r\n            tempArr.splice(tempArr.indexOf(subtype),1 );\r\n        }\r\n\r\n        else {\r\n            tempArr.push(subtype);\r\n        }\r\n\r\n        this.setState({\r\n\r\n            listArr: tempArr,\r\n        });\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        this.onSelect();\r\n    }\r\n\r\n    onSelect = () => {\r\n\r\n            //this.props.types and this.state.listArr\r\n            let type = this.props.type;\r\n\r\n\r\n             if(type === 'Function') {\r\n\r\n                 this.props.onSelFunction(this.state.listArr);\r\n             }\r\n             else if(type === 'BodyZones') {\r\n                 this.props.onSelBodyZones(this.state.listArr);\r\n             }\r\n             else if(type === 'Fabrication') {\r\n                 this.props.onSelFabrication(this.state.listArr);\r\n             }\r\n             else {\r\n                 this.props.onSelMaterial(this.state.listArr);\r\n             }\r\n\r\n             //this.props.toggle();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n            console.log(this.props.type);\r\n            console.log(this.state.listArr);\r\n            let inp = '';\r\n\r\n            let selArr = this.state.listArr;\r\n            inp = this.props.subtypes.map((input) => {\r\n\r\n                return (\r\n\r\n                    <div key={this.props.key}>\r\n                     {(selArr.includes(input)) ? (\r\n                       <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBodySelected'\r\n                          name=\"customRadio\"\r\n\r\n                          id={input}\r\n                          label={input}>{input}</div>\r\n                        ) : (\r\n                          <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBody'\r\n                          name=\"customRadio\" key={input} id={input}\r\n                                    label={input}>{input}</div>\r\n                        )}\r\n                     </div>\r\n\r\n\r\n                );\r\n            }\r\n            )\r\n            return (\r\n                        <div style={{width: '100%', color: \"#A7AFBA\", backgroundColor: \"black\"}}>\r\n                          {inp}\r\n                        </div>\r\n\r\n\r\n            );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelFunction: (value) => dispatch({type: actionTypes.PRE_SELECT_FUNC, value: value}),\r\n        onSelBodyZones: (value) => dispatch({type: actionTypes.PRE_SELECT_BOD, value: value}),\r\n        onSelFabrication: (value) => dispatch({type: actionTypes.PRE_SELECT_FAB, value: value}),\r\n        onSelMaterial: (value) => dispatch({type: actionTypes.PRE_SELECT_MAT, value: value}),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LeftPanePopoverTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPaneTab.css'\r\n\r\nimport LeftPanePopoverTab from './LeftPanePopoverTab';\r\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nclass LeftPaneTab extends Component {\r\n\r\n    constructor(props) {\r\n       super(props);\r\n\r\n\r\n\r\n       this.state = {\r\n         popoverFunc: false,\r\n         popoverBod: false,\r\n         popoverFab: false,\r\n         popoverMat: false,\r\n         popoverOpen: false,\r\n       };\r\n\r\n    }\r\n\r\n     toggle = (name) => {\r\n       this.setState({\r\n         popoverOpen: !this.state.popoverOpen\r\n       });\r\n     }\r\n\r\n\r\n   render() {\r\n\r\n\r\n            let type = this.props.name;\r\n\r\n            let arr = [];\r\n            let selArr = [];\r\n\r\n            if(type === 'Function') {\r\n                arr = this.props.functions;\r\n                selArr = this.props.arrFunc;\r\n            }\r\n            else if(type === 'BodyZones') {\r\n                arr = this.props.bodyZones;\r\n                selArr = this.props.arrBod;\r\n            }\r\n            else if(type === 'Fabrication') {\r\n                arr = this.props.fabrication;\r\n                selArr = this.props.arrFab;\r\n            }\r\n            else {\r\n                arr = this.props.material;\r\n                selArr = this.props.arrMat;\r\n            }\r\n\r\n            let backgroundCol = \"rgb(172, 216, 206)\";\r\n            let borderCol = \"rgb(110, 169, 155)\";\r\n\r\n            if(this.props.name === \"Material\") {\r\n                backgroundCol = \"rgb(254, 205, 102)\";\r\n                borderCol = \"rgb(254, 172, 0)\";\r\n            }\r\n\r\n            else if(this.props.name === \"Fabrication\") {\r\n              backgroundCol = \"rgb(133, 194, 219)\";\r\n              borderCol = \"rgb(0, 181, 254)\";\r\n            }\r\n\r\n            //console.log(store.getState());\r\n            return (\r\n\r\n             <div id={'Popover-'+this.props.name} style={{ backgroundColor: backgroundCol, borderColor: borderCol }} className=\"leftPaneTabBody\">\r\n\r\n                 <div className=\"rotate5 move\">{this.props\r\n                 .name}\r\n                 </div>\r\n\r\n\r\n                 <img id=\"image\" src={\"ImageDatabase/Icons/\" + this.props.name + \".png\"}\r\n                  alt=\"\" className=\"imgStyle\"/>\r\n\r\n\r\n\r\n\r\n                         <UncontrolledPopover style={{borderColor: \"#1D4999\", borderStyle: \"solid\", borderWidth: \"medium\", backgroundColor: \"black\"}} hideArrow={true} modifiers={{offset: '-5vw'}} trigger=\"legacy\" target={'Popover-'\r\n                         +\r\n\r\n                         this\r\n                         .props\r\n                         .name}>\r\n\r\n                              <PopoverHeader style={{color: \"#A7AFBA\", backgroundColor: \"black\", fontWeight: \"bold\"}}>{this.props.name}</PopoverHeader>\r\n                               <PopoverBody style={{padding: '0', color: \"#A7AFBA\", backgroundColor: \"black\"}}><LeftPanePopoverTab\r\n                                                        type={this.props.name}\r\n                                                        subtypes={arr}\r\n                                                         selArr={selArr}\r\n                                                         toggle={this.toggle}\r\n                                                         key={this.props.key}/>\r\n                          </PopoverBody>\r\n\r\n                         </UncontrolledPopover>\r\n\r\n            </div>\r\n\r\n        );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        functions: state.functions,\r\n        bodyZones: state.bodyZones,\r\n        fabrication: state.fabrication,\r\n        material: state.material,\r\n\r\n        showFunc: state.showFunc,\r\n        showBod: state.showBod,\r\n        showFab: state.showFab,\r\n        showMat: state.showMat,\r\n\r\n        arrFunc: state.arrFunc,\r\n        arrBod: state.arrBod,\r\n        arrFab: state.arrFab,\r\n        arrMat: state.arrMat,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeftPaneTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './leftPane.css'\r\nimport LeftPaneTab from './LeftPaneTab';\r\n\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass LeftPane extends Component {\r\n\r\n    onClick = (type) => {\r\n\r\n\r\n\r\n         if(type === 'Function') {\r\n\r\n             this.props.onShowFunction();\r\n         }\r\n         else if(type === 'BodyZones') {\r\n             this.props.onShowBodyZones();\r\n         }\r\n         else if(type === 'Fabrication') {\r\n             this.props.onShowFabrication();\r\n         }\r\n         else {\r\n             this.props.onShowMaterial();\r\n         }\r\n    };\r\n\r\n    render() {\r\n\r\n           let listItems = '';\r\n           let i = 0;\r\n\r\n           let tempList = this.props.categories;\r\n           tempList = tempList.filter((item) => {\r\n             return item !== 'BodyZones'\r\n           })\r\n           listItems = tempList.map((listItem) => {\r\n                return (\r\n                    <LeftPaneTab key={i++} name={listItem} clicked={this.onClick} />\r\n                )\r\n            });\r\n\r\n            return (\r\n\r\n             <div className=\"leftPaneBody\">\r\n                {listItems}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        categories: state.categories,\r\n        searchData: state.searchData\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onShowFunction: () => dispatch({type: actionTypes.SHOW_FUNC}),\r\n        onShowBodyZones: () => dispatch({type: actionTypes.SHOW_BOD}),\r\n        onShowFabrication: () => dispatch({type: actionTypes.SHOW_FAB}),\r\n        onShowMaterial: () => dispatch({type: actionTypes.SHOW_MAT}),\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftPane);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './matrix.css'\r\nimport './matrixSVG.css'\r\nimport { GridGenerator, HexGrid, Layout, Path, Hexagon, Text, Pattern, Hex } from 'react-hexgrid';\r\n\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\n\r\nimport * as actionTypes from '.././store/actions';\r\n\r\nclass Matrix extends Component {\r\n\r\n    onClick = (name_array, bool_param, query_param_array) => {\r\n\r\n        if(bool_param) {\r\n\r\n          this.props.updateQuery(name_array, query_param_array);\r\n          this.props.toggleDisplay();\r\n        }\r\n    };\r\n\r\n    /*\r\n\r\n      For every hexagon:\r\n\r\n        1) When clickable:\r\n\r\n            For that specific query, determine how many entries are there in the database.\r\n\r\n            For the 4 base types\r\n\r\n\r\n        2) When not clickable:\r\n\r\n              For all fifteen hexagons I need to calculate number of corresponding inputs.\r\n              Basically like for function, check if entry has X in any of func1-3. look over every entry and maintain\r\n              a boolean for all 4 parameters. and then increae counts depending on either of the 15 cases\r\n              For function + material, check both similars\r\n    */\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n            const hexagonSize = { x: 12.5, y:  11.5 };\r\n\r\n            let name_array = [];\r\n            name_array[0] = 'Function';\r\n            name_array[1] = 'BodyZones';\r\n            name_array[2] = 'Fabrication';\r\n            name_array[3] = 'Material'\r\n\r\n            let bool_array = [];\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n\r\n            if(this.props.selFunction !== '') {\r\n                bool_array[0] = true;\r\n                name_array[0] = this.props.selFunction;\r\n              }\r\n\r\n            if(this.props.selBodyZones !== '') {\r\n                bool_array[1] = true;\r\n                name_array[1] = this.props.selBodyZones;\r\n            }\r\n\r\n            if(this.props.selFabrication !== '') {\r\n                bool_array[2] = true;\r\n                name_array[2] = this.props.selFabrication;\r\n            }\r\n\r\n            if(this.props.selMaterial !== '') {\r\n                bool_array[3] = true;\r\n                name_array[3] = this.props.selMaterial;\r\n            }\r\n\r\n            let funcCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            funcCount = funcCount.length;\r\n\r\n            if(bool_array[0]) {\r\n\r\n              let curFuncCount = this.props.searchData.filter((item) => {\r\n                return item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n              });\r\n              funcCount = curFuncCount.length;\r\n            }\r\n\r\n            let fabCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabCount = fabCount.length;\r\n\r\n            if(bool_array[2]) {\r\n\r\n              let curFabCount = this.props.searchData.filter((item) => {\r\n                return item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n              });\r\n              fabCount = curFabCount.length;\r\n            }\r\n\r\n            let matCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matCount = matCount.length;\r\n\r\n            if(bool_array[3]) {\r\n\r\n              let curMatCount = this.props.searchData.filter((item) => {\r\n                return item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n              });\r\n              matCount = curMatCount.length;\r\n            }\r\n\r\n            let bodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            bodCount = bodCount.length;\r\n\r\n            if(bool_array[1]) {\r\n\r\n              let curBodCount = this.props.searchData.filter((item) => {\r\n                return item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n              });\r\n              bodCount = curBodCount.length;\r\n            }\r\n\r\n            /*\r\n              For twos, take 2 bool arrays\r\n            */\r\n\r\n            let funcBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            funcBodCount = funcBodCount.length;\r\n\r\n            if(bool_array[0] && bool_array[1]) {\r\n\r\n              let curFuncBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              funcBodCount = curFuncBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let matBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matBodCount = matBodCount.length;\r\n\r\n            if(bool_array[1] && bool_array[3]) {\r\n\r\n              let curMatBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\r\n              });\r\n              matBodCount = curMatBodCount.length;\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            let fabBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabBodCount = fabBodCount.length;\r\n\r\n            if(bool_array[1] && bool_array[2]) {\r\n\r\n              let curFabBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n              });\r\n              fabBodCount = curFabBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let fabFuncCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabFuncCount = fabFuncCount.length;\r\n\r\n            if(bool_array[0] && bool_array[2]) {\r\n              let curFabFuncCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              fabFuncCount = curFabFuncCount.length;\r\n            }\r\n\r\n            let matFuncCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matFuncCount = matFuncCount.length;\r\n\r\n            if(bool_array[0] && bool_array[3]) {\r\n              let curMatFuncCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              matFuncCount = curMatFuncCount.length;\r\n            }\r\n\r\n\r\n\r\n            let matFabCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matFabCount = matFabCount.length;\r\n\r\n            if(bool_array[2] && bool_array[3]) {\r\n              let curMatFabCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n              });\r\n              matFabCount = curMatFabCount.length;\r\n            }\r\n\r\n\r\n\r\n\r\n            let matFabFuncCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            matFabFuncCount = matFabFuncCount.length;\r\n\r\n            if(bool_array[2] && bool_array[3] && bool_array[0]) {\r\n              let curMatFabFuncCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                )\r\n              });\r\n              matFabFuncCount = curMatFabFuncCount.length;\r\n            }\r\n\r\n\r\n            let matFabBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            matFabBodCount = matFabBodCount.length;\r\n\r\n\r\n            if(bool_array[2] && bool_array[3] && bool_array[1]) {\r\n              let curMatFabBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n              matFabBodCount = curMatFabBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let funcFabBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            funcFabBodCount = funcFabBodCount.length;\r\n\r\n            if(bool_array[2] && bool_array[0] && bool_array[1]) {\r\n              let curFuncFabBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n\r\n              console.log(curFuncFabBodCount);\r\n              funcFabBodCount = curFuncFabBodCount.length;\r\n            }\r\n\r\n            let funcMatBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            funcMatBodCount = funcMatBodCount.length;\r\n\r\n            if(bool_array[3] && bool_array[0] && bool_array[1]) {\r\n              let curFuncMatBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n              funcMatBodCount = curFuncMatBodCount.length;\r\n            }\r\n\r\n            let allCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            allCount = allCount.length;\r\n\r\n            if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\r\n              let curAllCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                  (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n\r\n              });\r\n              allCount = curAllCount.length;\r\n            }\r\n\r\n            return (\r\n\r\n             <div className=\"matrixBody\">\r\n\r\n\r\n             <div className=\"matrixSVG\">\r\n                        <HexGrid width={775} height={600} viewBox=\"-40 -45 90 90\">\r\n                        <Layout size={hexagonSize} flat={true} spacing={1.05} origin={{ x: 0, y: 0 }}>\r\n\r\n                                  <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Fabrication', 'Material', 'Function'])} q={0} r={0} s={0}>\r\n\r\n                                    {(bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + allCount + \")\"}</tspan></text>) :\r\n                                     (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + allCount + \")\"}</tspan></text>)}\r\n                                 </Hexagon>\r\n\r\n                                {/*\r\n                                 <Hexagon q={0} r={2} s={0} stroke=\"green\" fill=\"purple\"/>\r\n                                 <Hexagon q={0} r={-2} s={0} stroke=\"green\" fill=\"purple\"/>\r\n\r\n\r\n                                 <Hexagon q={1} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={1} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                 <Hexagon q={-1} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={-1} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n\r\n                                 <Hexagon q={-2} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={-2} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                 <Hexagon q={2} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={2} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={-3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n\r\n                                <Hexagon q={-4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                */}\r\n\r\n\r\n                                 <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2], ['BodyZones', 'Fabrication'])} q={0} r={1} s={0}>\r\n\r\n                                   {(bool_array[1] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text>) :\r\n                                    (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text>)}\r\n                                </Hexagon>\r\n\r\n                                <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[3], ['Function', 'Material'])} q={0} r={-1} s={0}>\r\n\r\n                                  {(bool_array[0] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text>) :\r\n                                   (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text>)}\r\n                               </Hexagon>\r\n\r\n\r\n\r\n                               <Hexagon onClick={() => this.onClick(name_array, bool_array[2], ['Fabrication'])} q={2} r={0} s={0}>\r\n                                   <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabCount + \")\"}</tspan></text>\r\n                              </Hexagon>\r\n                              <Hexagon onClick={() => this.onClick(name_array, bool_array[3], ['Material'])} q={2} r={-2} s={0}>\r\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(254, 205, 102)\">{name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matCount + \")\"}</tspan></text>\r\n\r\n                             </Hexagon>\r\n\r\n                             <Hexagon onClick={() => this.onClick(name_array, bool_array[2] && bool_array[3], ['Material', 'Fabrication'])} q={2} r={-1} s={0}>\r\n                               {(bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text>) :\r\n                                (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text>)}\r\n\r\n                            </Hexagon>\r\n\r\n                            <Hexagon onClick={() => this.onClick(name_array, bool_array[0], ['Function'])} q={-2} r={0} s={0}>\r\n\r\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcCount + \")\"}</tspan></text>\r\n                           </Hexagon>\r\n\r\n                           <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1], ['Function', 'BodyZones'])} q={-2} r={1} s={0}>\r\n\r\n                             {(bool_array[0] && bool_array[1]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text>) :\r\n                              (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text>)}\r\n                          </Hexagon>\r\n\r\n                          <Hexagon onClick={() => this.onClick(name_array, bool_array[1], ['BodyZones'])} q={-2} r={2} s={0}>\r\n                          <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + bodCount + \")\"}</tspan></text>\r\n\r\n                         </Hexagon>\r\n\r\n                           <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[3], ['BodyZones', 'Material'])} q={1} r={-1} s={0}>\r\n\r\n                             {(bool_array[1] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text>) :\r\n                              (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text>)}\r\n                          </Hexagon>\r\n\r\n                          <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2], ['Function', 'Fabrication'])} q={-1} r={0} s={0}>\r\n\r\n                            {(bool_array[0] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text>) :\r\n                             (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text>)}\r\n                         </Hexagon>\r\n\r\n                         <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[3], ['Function', 'BodyZones', 'Material'])} q={-1} r={-1} s={0}>\r\n\r\n                           {(bool_array[0] && bool_array[1] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>) :\r\n                            (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>)}\r\n                        </Hexagon>\r\n\r\n\r\n                        <Hexagon q={-1} r={2} s={0}>\r\n                          <Text>Contact Us</Text>\r\n                       </Hexagon>\r\n\r\n                       <Hexagon  q={1} r={1} s={0}>\r\n                         <Text>Contribute</Text>\r\n                      </Hexagon>\r\n\r\n                      <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Material', 'Fabrication'])} q={1} r={0} s={0}>\r\n\r\n                        {(bool_array[1] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text>) :\r\n                         (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text>)}\r\n                     </Hexagon>\r\n\r\n                   <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2], ['Function', 'BodyZones', 'Fabrication'])} q={-1} r={1} s={0}>\r\n\r\n                       {(bool_array[0] && bool_array[1] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text>) :\r\n                        (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text>)}\r\n                    </Hexagon>\r\n\r\n                    <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2] && bool_array[3],  ['Function', 'Material', 'Fabrication'])} q={1} r={-2} s={0}>\r\n\r\n                      {(bool_array[0] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text>) :\r\n                       (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text>)}\r\n                    </Hexagon>\r\n\r\n\r\n          </Layout>\r\n        </HexGrid>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selFunction: state.selFunction,\r\n        selBodyZones: state.selBodyZones,\r\n        selFabrication: state.selFabrication,\r\n        selMaterial: state.selMaterial,\r\n        searchData: state.searchData,\r\n\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\r\n        updateQuery: (name_array, query_param) => dispatch({type: actionTypes.UPDATE_QUERY, names: name_array, params: query_param})\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matrix);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPaneModalTab.css';\r\nimport { CustomInput, Form, FormGroup, Label } from 'reactstrap';\r\nimport * as actionTypes from '../store/actions';\r\n\r\n\r\nclass LeftPaneModalTab extends Component {\r\n\r\n\r\n    constructor(props) {\r\n       super(props);\r\n\r\n       this.state = {\r\n         curInput: '',\r\n       };\r\n    }\r\n\r\n    onSelect = (input, type) => {\r\n        if(type == 'Function') {\r\n\r\n            this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n\r\n\r\n            this.props.onSelectFunction(input);\r\n        }\r\n        else if(type == 'BodyZones') {\r\n\r\n            this.props.onSelectBodyZones(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n        else if(type == 'Fabrication') {\r\n            this.props.onSelectFabrication(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n        else {\r\n            this.props.onSelectMaterial(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    /*\r\n        Use state to save current input.\r\n        Use conditional rendering to render the selected input differently\r\n    */\r\n\r\n    render() {\r\n            let inp = '';\r\n            let curInp = this.state.curInp;\r\n\r\n            inp = this.props.subtypes.map((input) => {\r\n\r\n                return (\r\n                    <div>\r\n                    {(curInp === input) ? (\r\n                    <div style={{background: 'black', color: '#A7AFBA', fontWeight: 'bold'}} onClick={() => this.onSelect(input, this.props.type)}\r\n                    className='modalHover'\r\n                                              key={input}\r\n                     >{input}</div>) : (<div onClick={() => this.onSelect(input, this.props.type)}\r\n                     className='modalHover'\r\n                                                                                      key={input}\r\n                                                             >{input}</div>)}\r\n                                                             </div>\r\n                );\r\n            }\r\n\r\n            )\r\n            return (\r\n\r\n            <div className='leftPaneModalTabBody'>\r\n                  {inp}\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectFunction: (value) => dispatch({type: actionTypes.SELECT_FUNCTION, val: value}),\r\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\r\n        onSelectFabrication: (value) => dispatch({type: actionTypes.SELECT_FABRICATION, val: value}),\r\n        onSelectMaterial: (value) => dispatch({type: actionTypes.SELECT_MATERIAL, val: value}),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LeftPaneModalTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPane.css'\r\nimport LeftPaneModalTab from './LeftPaneModalTab';\r\n\r\nimport { Button, Fade } from 'reactstrap';\r\n\r\nclass LeftPaneModal extends Component {\r\n\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n         listArr: this.props.selArr,\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n            let funcModal = <LeftPaneModalTab style={{height: '25%'}}\r\n                                        type='Function'\r\n                                        subtypes={this.props.functions} />;\r\n\r\n            let bodyModal = <LeftPaneModalTab style={{height: '25%'}}\r\n             type='BodyZones'\r\n            subtypes={this.props.bodyZones} />;\r\n\r\n            let fabModal =  <LeftPaneModalTab style={{height: '25%'}}\r\n            type='Fabrication'\r\n            subtypes={this.props.fabrication} />;\r\n\r\n            let matModal = <LeftPaneModalTab style={{height: '25%'}}\r\n            type='Material'\r\n            subtypes={this.props.material} />;\r\n\r\n            return (\r\n\r\n\r\n            <div className=\"leftPaneModal\">\r\n\r\n                   {funcModal}\r\n                   {fabModal}\r\n                   {matModal}\r\n            </div>\r\n\r\n            );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    console.log(state.arrFunc);\r\n    return {\r\n        functions: state.arrFunc,\r\n        bodyZones: state.arrBod,\r\n        fabrication: state.arrFab,\r\n        material: state.arrMat,\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeftPaneModal);\r\n","import React, { Component } from 'react';\r\n\r\nimport { CardImg, CardBody,\r\n CardSubtitle } from 'reactstrap';\r\n\r\n import * as actionTypes from '.././store/actions';\r\n import { connect } from 'react-redux';\r\n\r\nimport './searchDisplay.css'\r\n\r\nimport { Card, Button, CardTitle, CardText, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nclass SearchDisplayTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tooltipOpenCost: false,\r\n      tooltipOpenImp: false,\r\n      tooltipOpenWear: false,\r\n    };\r\n\r\n    this.toggleImp = this.toggleImp.bind(this);\r\n    this.toggleCost = this.toggleCost.bind(this);\r\n    this.toggleWear = this.toggleWear.bind(this);\r\n\r\n  }\r\n\r\n  toggleCost = () => {\r\n    this.setState({\r\n      tooltipOpenCost: !this.state.tooltipOpenCost\r\n    });\r\n  }\r\n\r\n  toggleImp = () => {\r\n    this.setState({\r\n      tooltipOpenImp: !this.state.tooltipOpenImp\r\n    });\r\n  }\r\n\r\n  toggleWear = () => {\r\n    this.setState({\r\n      tooltipOpenWear: !this.state.tooltipOpenWear\r\n    });\r\n  }\r\n\r\n  updateBookmark = (name) => {\r\n\r\n    let temp = name.substring(10,30);\r\n    console.log(temp);\r\n    this.props.updateBookmark(temp);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let inp = '';\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n\r\n    if(this.props.type === 'Research')\r\n      j = 1;\r\n    else if(this.props.type === 'Tutorial')\r\n      j = 2;\r\n    else if(this.props.type === 'Aesthetic Approach')\r\n      j = 3;\r\n    else if(this.props.type === 'Design Concepts')\r\n      j = 4\r\n\r\n    inp = this.props.arr.map((input) => {\r\n\r\n      i++;\r\n      let check = this.props.bookMarks.includes(input[\"Reference Link\"].substring(10,30));\r\n\r\n\r\n      let wearToken = \"Wear1\";\r\n      if(parseInt(input[\"Wearability\"]) <= 10)\r\n        wearToken = \"Wear1\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 20)\r\n        wearToken = \"Wear2\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 50)\r\n        wearToken = \"Wear3\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 70)\r\n        wearToken = \"Wear4\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 100)\r\n        wearToken = \"Wear5\";\r\n\r\n      let costToken = \"$$\"\r\n\r\n      if(parseInt(input[\"costMetric\"]) > 17)\r\n        costToken = \"$$$\";\r\n      else if(parseInt(input[\"costMetric\"]) >= 6)\r\n        costToken = \"$$\";\r\n      else\r\n        costToken = \"$\";\r\n\r\n\r\n      let col = \"green\";\r\n\r\n      if(parseInt(input[\"impMetric\"]) === 3)\r\n        col = \"red\";\r\n      else if(parseInt(input[\"impMetric\"]) === 2)\r\n        col = \"yellow\";\r\n\r\n      if(input[\"PIC ID\"] === undefined || input[\"PIC ID\"].length == 0)\r\n        return (\r\n          <div />\r\n        )\r\n\r\n      else {\r\n      return (\r\n\r\n        <div style={{marginLeft: '10px', borderWidth: \"medium\", borderStyle:\"solid\"}}>\r\n\r\n          <div className=\"bgimg\">\r\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\r\n\r\n            <img id=\"image\" src={\"ImageDatabase/\" + input[\"PIC ID\"] + \".jpg\"}  onerror={\"this.onerror=null; this.src=\" + \"ImageDatabase/\" + input[\"PIC ID\"] + \".png\"} alt=\"\" style={{height: '20vh', width: '100%', objectFit: 'cover'}}/>\r\n            </a>\r\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\r\n            <div id=\"title\" className=\"centered\">{(input[\"Reference Name\"].length < 40) ? (input[\"Reference Name\"]) : (input[\"Reference Name\"].substring(0, 40) + \"...\")}</div>\r\n            </a>\r\n\r\n            {(this.props.loggedIn) ? (<div id=\"title\" className=\"ticker\"><Input checked={check} onClick={() => this.updateBookmark(input[\"Reference Link\"])} type=\"checkbox\" />{' '}</div>) : (<div/>)}\r\n\r\n\r\n            <div className=\"cost\"><div style={{backgroundColor: \"#f7f7f7\", borderRadius: \"4px\", opacity: \"0.75\", height: '18px', width: '18px'}}>{costToken}</div>\r\n            <div class=\"tooltipCost\">Cost</div>\r\n\r\n        </div>\r\n\r\n            <div className=\"imp\">\r\n                  <div style={{height: '18px', width: '18px', backgroundColor: col}}>\r\n            </div>\r\n            <div class=\"tooltipImp\">Implementation</div>\r\n\r\n        </div>\r\n\r\n            <div className=\"wear\">\r\n                             <img src={\"ImageDatabase/Icons/\" + wearToken + \".png\"}\r\n                              alt=\"\" style={{height: '18px', width: '18px', objectFit: \"cover\"}}/>\r\n\r\n\r\n                  <div class=\"tooltipWear\">Wearability</div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n      )\r\n    }\r\n    });\r\n\r\n\r\n    return (\r\n      <div className=\"searchStore\">\r\n\r\n        <div className=\"leftPaneSearch\">\r\n            <div className=\"rotate1\">{this.props.type}</div>\r\n        </div>\r\n\r\n        <div className=\"searchTabContent\">\r\n          <div style={{display: 'flex', height: \"105%\", overflowX: 'scroll', overflowY: 'hidden'}}>\r\n            {inp}\r\n          </div>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateBookmark: (value) => dispatch({type: actionTypes.UPDATE_BOOKMARKS, val: value.toString(0,20)}),\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        bookMarks: state.bookMarks,\r\n\r\n        loggedIn: state.isLoggedIn,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplayTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './searchDisplay.css'\r\nimport SearchDisplayTab from './SearchDisplayTab'\r\nimport ListDisplayTab from './ListDisplayTab'\r\n\r\nimport { Table } from 'reactstrap';\r\n\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass SearchDisplay extends Component {\r\n\r\n\r\n  /*\r\n    Have a list view control variable in state\r\n  */\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n          filterData: [],\r\n          research: [],\r\n          tutorials: [],\r\n          aesthetics: [],\r\n          concepts: [],\r\n          listView: false,\r\n        };\r\n    }\r\n\r\n    filterFunc = (item) => {\r\n\r\n      return (item[\"Function 1\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 2\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 3\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()))\r\n    }\r\n\r\n    filterBod = (item) => {\r\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 2\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 3\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()))\r\n    }\r\n\r\n    filterFab = (item) => {\r\n      return (item[\"Fabrication 1\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()) || item[\"Fabrication 2\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()))\r\n    }\r\n\r\n    filterMat = (item) => {\r\n      return (item[\"Material 1\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 2\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 3\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()))\r\n    }\r\n\r\n    filterYear = (item) => {\r\n\r\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\r\n    }\r\n\r\n    filterVenue = (item) => {\r\n      console.log(this.props.venue);\r\n      return (this.props.venue === 'all' || item[\"Conference (VENUE)\"] === this.props.venue)\r\n    }\r\n\r\n    filterSource = (item) => {\r\n      return (this.props.source === 'both' || item[\"Source\"] === this.props.source)\r\n    }\r\n\r\n    shuffleArray = (array) => {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(this.random(i) * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n\r\n      return array;\r\n    }\r\n\r\n    random = (seed) => {\r\n      var x = Math.sin(seed++) * 10000;\r\n      return x - Math.floor(x);\r\n    }\r\n\r\n    render() {\r\n\r\n            let filterArr = this.props.allData;\r\n\r\n            if(!this.props.viewBookmarks) {\r\n                  if(!this.props.searchDisplay) {\r\n\r\n\r\n                          if(this.props.filter) {\r\n\r\n                            filterArr = filterArr.filter(this.filterYear);\r\n                            filterArr = filterArr.filter(this.filterVenue);\r\n                            filterArr = filterArr.filter(this.filterSource);\r\n                          }\r\n                            console.log(filterArr);\r\n\r\n                          if(this.props.params.includes('Function')) {\r\n                             filterArr = filterArr.filter(this.filterFunc);\r\n                          }\r\n\r\n                          if(this.props.params.includes('BodyZones')) {\r\n                             filterArr = filterArr.filter(this.filterBod);\r\n                          }\r\n                          if(this.props.params.includes('Fabrication')) {\r\n                             filterArr = filterArr.filter(this.filterFab);\r\n                          }\r\n                          if(this.props.params.includes('Material')) {\r\n                             filterArr = filterArr.filter(this.filterMat);\r\n                          }\r\n                }\r\n\r\n                else {\r\n\r\n                    filterArr = filterArr.filter((item) => {\r\n                      return item[\"Reference Name\"].toLowerCase().includes(this.props.searchQuery.toLowerCase());\r\n                  });\r\n                }\r\n          }\r\n\r\n\r\n          else {\r\n\r\n            filterArr = filterArr.filter((item) => {\r\n\r\n              console.log(item[\"Reference Link\"].substring(10,30));\r\n              console.log(this.props.bookMarks);\r\n\r\n              return this.props.bookMarks.includes(item[\"Reference Link\"].substring(10,30));\r\n            });\r\n\r\n          }\r\n\r\n          let researchArr = [];\r\n          let tutorialsArr = [];\r\n          let aestheticsArr = [];\r\n          let conceptsArr = [];\r\n          let patentsArr = [];\r\n\r\n          researchArr = filterArr.filter((item) => {\r\n            return item[\"Research\"].trim() === 'x'\r\n          });\r\n\r\n          tutorialsArr = filterArr.filter((item) => {\r\n            return item[\"Tutorial\"].trim() === 'x'\r\n          });\r\n\r\n          aestheticsArr = filterArr.filter((item) => {\r\n            return item[\"Aesthetic Approach\"].trim() === 'x'\r\n          });\r\n\r\n          conceptsArr = filterArr.filter((item) => {\r\n            return item[\"Design Concepts\"].trim() === 'x'\r\n          });\r\n\r\n          patentsArr = filterArr.filter((item) => {\r\n            return item[\"Patents\"].trim() === 'x'\r\n          });\r\n\r\n\r\n          let listView = this.props.listView;\r\n          let i = 1;\r\n          let listContents = filterArr.map((item) => {\r\n            return (\r\n              <tr>\r\n                <th scope=\"row\">{i++}</th>\r\n                <td>{item[\"Reference Name\"]}</td>\r\n                <td>{item[\"Reference Link\"]}</td>\r\n              </tr>\r\n            )\r\n          })\r\n\r\n          let corLabel = \"Pinned/Bookmarks\";\r\n\r\n          if(!this.props.viewBookmarks) {\r\n\r\n            corLabel = \"\";\r\n            if(this.props.params.includes('Function'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[0];\r\n              else {\r\n                corLabel = corLabel + ' + ' + this.props.names[0];\r\n              }\r\n\r\n            if(this.props.params.includes('BodyZones'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[1];\r\n              else {\r\n                corLabel = corLabel + ' + ' + this.props.names[1];\r\n              }\r\n\r\n            if(this.props.params.includes('Fabrication'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[2];\r\n              else {\r\n                corLabel = corLabel + ' + '  + this.props.names[2];\r\n              }\r\n\r\n            if(this.props.params.includes('Material'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[3];\r\n              else {\r\n                corLabel = corLabel + ' + ' + this.props.names[3];\r\n              }\r\n          }\r\n\r\n\r\n          return (\r\n\r\n            <div style={{width: \"100vw\"}}>\r\n              {(listView) ? (<div className=\"listSearch\">\r\n                    <Table striped>\r\n                    <thead>\r\n                      <th>#</th>\r\n                      <th>Reference Name</th>\r\n                      <th>Link</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {listContents}\r\n                    </tbody>\r\n                  </Table>\r\n              </div>\r\n             ) : (\r\n               <div className=\"layoutSearch\">\r\n                     <SearchDisplayTab type='Research' arr={this.shuffleArray(researchArr)}/>\r\n                     <SearchDisplayTab type='Tutorials' arr={this.shuffleArray(tutorialsArr)}/>\r\n                     <SearchDisplayTab type='Aesthetics' arr={this.shuffleArray(aestheticsArr)}/>\r\n                     <SearchDisplayTab type='Concepts' arr={this.shuffleArray(conceptsArr)}/>\r\n                    <SearchDisplayTab type='Patents' arr={this.shuffleArray(patentsArr)}/>\r\n                    <div className=\"bottomBar\">\r\n                    <div onClick={this.props.backToSearch} className=\"backLabel\">\r\n                        <div>{\"<---- Go Back to Search\"}</div>\r\n                    </div>\r\n                      <div className=\"corLabel\">\r\n                          <div>{corLabel}</div>\r\n                      </div>\r\n                    </div>\r\n             </div>)}\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allData: state.searchData,\r\n        names: state.names,\r\n        params: state.params,\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n\r\n        listView: state.listView,\r\n\r\n        searchDisplay: state.searchTermDisplay,\r\n        searchQuery: state.searchTermQuery,\r\n\r\n        viewBookmarks: state.viewBookmarks,\r\n        bookMarks: state.bookMarks,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchDisplay);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CardImg, CardBody,\r\n CardSubtitle } from 'reactstrap';\r\n\r\nimport './searchDisplay.css'\r\n\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\n\r\nclass ListDisplayTab extends Component {\r\n\r\n  render() {\r\n\r\n    let inp = '';\r\n    let i = 1;\r\n    inp = this.props.arr.map((input) => {\r\n\r\n      return (\r\n        <tr>\r\n          <th scope=\"row\">{i++}</th>\r\n          <td>{input[\"Reference Name\"]}</td>\r\n          <td><a  href={input[\"Reference Link\"]}>{input[\"Reference Link\"]}</a></td>\r\n        </tr>\r\n    )});\r\n\r\n    return (\r\n      <div>\r\n      <h3>{this.props.type}</h3>\r\n      <Table dark>\r\n      <thead>\r\n        <tr>\r\n          <th>Number</th>\r\n          <th>Title</th>\r\n          <th>Link</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {inp}\r\n      </tbody>\r\n    </Table>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ListDisplayTab;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n\r\nclass ColCharts extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n  }\r\n\r\n  render() {\r\n\r\n    const label = this.props.label;\r\n\r\n    /*\r\n      I have search data and I have a label\r\n    */\r\n\r\n    let curList = [];\r\n    let data = [];\r\n    if(this.props.label === 'Function') {\r\n          curList = this.props.function;\r\n\r\n\r\n          curList = curList.map((subType) => {\r\n\r\n          let temp = this.props.searchData.filter((item) => {\r\n\r\n            return (item[\"Function 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n            || item[\"Function 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n            || item[\"Function 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n          });\r\n\r\n          return {name: subType, Results: temp.length}\r\n        });\r\n\r\n\r\n    data = curList;\r\n    }\r\n\r\n    else if(this.props.label === 'Fabrication') {\r\n\r\n      curList = this.props.fabrication;\r\n\r\n\r\n      curList = curList.map((subType) => {\r\n\r\n      let temp = this.props.searchData.filter((item) => {\r\n\r\n        return item[\"Fabrication 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Fabrication 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      });\r\n\r\n      return {name: subType, Results: temp.length}\r\n      });\r\n      data = curList;\r\n    }\r\n\r\n    else {\r\n\r\n      curList = this.props.material;\r\n\r\n\r\n      curList = curList.map((subType) => {\r\n\r\n      let temp = this.props.searchData.filter((item) => {\r\n\r\n        return (item[\"Material 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Material 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Material 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n      });\r\n\r\n      return {name: subType, Results: temp.length}\r\n    });\r\n\r\n\r\n      data = curList;\r\n    }\r\n\r\n\r\n    return (\r\n      <div style={{width: \"50%\", display: \"flex\"}}>\r\n\r\n      <div style={{color:\"white\", fontWeight: \"bold\"}}>{this.props.label}</div>\r\n      <div style={{transform: \"translateX(-30px)\"}}>\r\n            <BarChart width={550} height={240} data={data}\r\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n\r\n           <XAxis dataKey=\"name\"/>\r\n           <YAxis/>\r\n           <Tooltip cursor={false}/>\r\n           <Bar dataKey=\"Results\" fill=\"black\" />\r\n          </BarChart>\r\n    </div>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        function: state.functions,\r\n        material: state.material,\r\n        fabrication: state.fabrication,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ColCharts);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n\r\nclass BodyChart extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    let curList = [];\r\n    let data = [];\r\n\r\n    curList = this.props.bodyZones;\r\n\r\n    curList = curList.map((subType) => {\r\n\r\n    let temp = this.props.searchData.filter((item) => {\r\n\r\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      || item[\"Body Zone 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      || item[\"Body Zone 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n    });\r\n\r\n    return {name: subType, value: temp.length}\r\n  });\r\n\r\n    data = curList;\r\n    let out = {};\r\n    for(let i = 0; i < data.length; i++) {\r\n      out[data[i].name] = data[i].value;\r\n    }\r\n\r\n    console.log(out);\r\n\r\n    return (\r\n      <div style={{width: \"50%\", display: \"flex\"}}>\r\n          <div style={{color:\"white\", fontWeight: \"bold\"}}>Body Zones</div>\r\n          <div style={{transform: \"translate(20px, -30px)\", position: \"relative\"}}>\r\n              <img src={\"ImageDatabase/Icons/BodyStats.jpg\"}\r\n               alt=\"\" style={{height: '40vh', width: '25vw', objectFit: \"cover\"}}/>\r\n               <div style={{position: \"absolute\", top: \"12%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Head\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"23%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Back\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"33%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Chest\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"48%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Pelvic Region\"]}</div>\r\n               <div style={{position: \"absolute\", bottom: \"0.5%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Feet\"]}</div>\r\n\r\n               <div style={{position: \"absolute\", top: \"25%\", left: \"77%\", color: \"white\", fontSize: \"small\"}}>{out[\"Arms\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"48%\", left: \"78%\", color: \"white\", fontSize: \"small\"}}>{out[\"Wrist and Hand\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"61%\", left: \"78%\", color: \"white\", fontSize: \"small\"}}>{out[\"Legs\"]}</div>\r\n\r\n               <div style={{position: \"absolute\", top: \"40%\", right: \"3.6%\", color: \"white\", fontSize: \"small\"}}>{out[\"Full Body\"]}</div>\r\n\r\n           </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        bodyZones: state.bodyZones,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(BodyChart);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport 'rc-slider/assets/index.css';\r\nimport './filterBody.css'\r\nimport Slider from 'rc-slider';\r\nimport * as actionTypes from '.././store/actions';\r\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\r\nimport { ButtonDropdown, Progress, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nimport ColCharts from './ColCharts'\r\nimport BodyChart from './BodyChart'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport { Label } from 'semantic-ui-react'\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = Slider.Range;\r\n\r\nclass FilterBody extends Component {\r\n\r\n    constructor(props) {\r\n          super(props);\r\n\r\n\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n          this.state = {\r\n            dropdownOpen: false,\r\n            venue: 'All',\r\n            modal: false,\r\n            showLabels: true,\r\n\r\n            sourceEng: false,\r\n            sourceFash: false,\r\n          };\r\n    }\r\n\r\n    toggleStats = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n\r\n      this.props.filterToggle();\r\n\r\n    }\r\n\r\n    toggle() {\r\n\r\n      this.setState(prevState => ({\r\n        dropdownOpen: !prevState.dropdownOpen,\r\n        showLabels: !prevState.showLabels\r\n      }));\r\n   }\r\n\r\n     onChange = (value) => {\r\n\r\n       console.log(value[1]);\r\n\r\n      this.props.filterData();\r\n      this.props.filterYear(value[0], value[1]);\r\n    }\r\n\r\n    onVenueClick = (value) => {\r\n\r\n      this.setState({\r\n        venue: value,\r\n      });\r\n\r\n      this.props.filterVenue(value);\r\n    }\r\n\r\n    onSourceClick = (value) => {\r\n\r\n\r\n      if(value === 'Engineering') {\r\n        this.setState(prevState => ({\r\n          sourceEng: !prevState.sourceEng\r\n        }));\r\n      }\r\n\r\n      else if(value === 'Fashion') {\r\n        this.setState(prevState => ({\r\n          sourceFash: !prevState.sourceFash\r\n        }));\r\n      }\r\n\r\n      if(this.state.sourceEng && this.state.sourceFash)\r\n        value = \"both\"\r\n      else if(!this.state.sourceEng && !this.state.sourceFash)\r\n        value = 'both'\r\n\r\n      this.props.filterSource(value);\r\n    }\r\n\r\n    render() {\r\n\r\n      let venueArr = this.props.searchData;\r\n      venueArr = venueArr.map((venue) => venue[\"Conference (VENUE)\"]);\r\n\r\n      let filterEngineering = this.props.searchData.filter((item) => {\r\n        return (item[\"Source\"] === \"Engineering\" || item[\"Source\"] === \"Both\")\r\n      });\r\n\r\n      let filterFashion = this.props.searchData.filter((item) => {\r\n        return (item[\"Source\"] === \"Fashion\" || item[\"Source\"] === \"Both\")\r\n      });\r\n\r\n      let engLength = filterEngineering.length;\r\n      let fashLength = filterFashion.length;\r\n\r\n      engLength = engLength * 100 / (engLength + fashLength);\r\n      fashLength = fashLength * 100 / (fashLength + engLength);\r\n\r\n      venueArr = [...new Set(venueArr)];\r\n\r\n      venueArr = venueArr.map((venue) => {\r\n        return (\r\n          <DropdownItem onClick={() => this.onVenueClick(venue)}>{venue}</DropdownItem>\r\n        )\r\n      });\r\n\r\n      const style = { width: 400, margin: 50 };\r\n\r\n      const dataPie = [\r\n          {value: 25, color: \"black\", title: \"Function\"},\r\n          {value: 50, color: \"red\", title: \"BodyZones\"},\r\n          {value: 30, color: \"green\", title: \"Material\"},\r\n          {value: 20, color: \"blue\", title: \"Fabrication\"},\r\n      ]\r\n\r\n\r\n      let yearData = [];\r\n\r\n      for(let i = 1990; i <= 2018; i++) {\r\n\r\n        let temp = this.props.searchData.filter((item) => {\r\n\r\n          return item[\"Year\"] === i.toString();\r\n        })\r\n\r\n        yearData = [\r\n            ...yearData,\r\n            {\r\n              name: i.toString(),\r\n              Projects: temp.length,\r\n            }\r\n        ];\r\n\r\n\r\n      }\r\n\r\n        const closeBtn = <Button onClick={this.toggleStats} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n      return (\r\n          <div>\r\n              <div>Time Frame</div>\r\n              <BarChart width={280} height={150} data={yearData}\r\n                  margin={{top: 5, right: 30, left: 0, bottom: 0}}>\r\n                  <XAxis dataKey=\"name\" hide={true}/>\r\n                  <Tooltip viewBox={{height: 50, width: 50 }} cursor={false}/>\r\n                  <Bar dataKey=\"Projects\" />\r\n             </BarChart>\r\n\r\n              <Range handleStyle={[{ backgroundColor: 'black'}, {backgroundColor: 'black' }]} trackStyle={[{ backgroundColor: 'grey', height: \"6px\"}]}\r\n              allowCross={false}  railStyle={{ backgroundColor: 'black' }} min={1990} max={2018} defaultValue={[1990, 2018]} onChange={(value) => this.onChange(value)} />\r\n              <div>{this.props.minYear}<span style={{float: \"right\"}}>{this.props.maxYear}</span></div>\r\n              <br />\r\n              <div>Publication Venue</div>\r\n              <ButtonDropdown style={{width:\"90%\", height: '25px', transform: \"translateX(5%)\"}} isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                      <DropdownToggle style={{marginBottom: \"-5px\", backgroundColor: \"white\", color: \"#9B089A\"}} caret>\r\n                        {this.state.venue}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu style={{width:\"105%\", overflowY:\"scroll\", height:\"40vh\"}}>\r\n                        {venueArr}\r\n                      </DropdownMenu>\r\n              </ButtonDropdown>\r\n\r\n              <div style={{marginTop: \"1.3vh\"}}>Filter by:</div>\r\n              <div style={{marginTop: \"8px\", marginRight: \"20px\", marginLeft: \"20px\"}}>\r\n                {(this.state.sourceEng) ? (<Button className=\"btnSelectorClicked\" onClick={() => this.onSourceClick(\"Engineering\")}>Engineering</Button>)\r\n                  : (<Button className=\"btnSelector\" onClick={() => this.onSourceClick(\"Engineering\")}>Engineering</Button>)}\r\n                {(this.state.sourceFash) ? (<Button className=\"btnSelectorClicked\" style={{float: \"right\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)\r\n                 : (<Button className=\"btnSelector\" style={{float: \"right\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)}\r\n              </div>\r\n\r\n              <div style={{marginTop: \"8px\"}}>\r\n                % Contribution\r\n              </div>\r\n              <div style={{marginTop: '8px', marginLeft: '10px'}}>\r\n                {(this.state.showLabels) ? (<><Label style={{transform: \"translateY(4px)\", backgroundColor: \"#f98686\"}} key=\"Orange\" />{' '}<span>Engineering</span>{' '}\r\n                <Label style={{transform: \"translateY(4px)\", marginLeft: \"10px\"}} color=\"red\" key=\"red\" />{' '}<span>Fashion</span>{' '}</>) : (<div style={{height: \"2vh\"}}>Placeholder</div>)}\r\n\r\n                  <br />\r\n                  <div>\r\n                  <br />\r\n                  <Progress multi>\r\n                    <Progress className=\"engStyle\" bar value={engLength} />\r\n                    <Progress bar color=\"danger\" value={fashLength} />\r\n                  </Progress>\r\n                  </div>\r\n              </div>\r\n\r\n              <div style={{marginTop: \"8px\", marginLeft: \"20%\"}}>\r\n                <Button onClick={this.toggleDisplay} outline color=\"secondary\">{(this.props.listView) ? (\"View Results in Original Form\") : (\"View Results in List Form\")}</Button>{' '}\r\n              </div>\r\n\r\n              {(this.props.loggedIn) ? (<div style={{marginTop: \"8px\", marginLeft: \"20%\"}}>\r\n                <Button onClick={this.toggleBookmarks} outline color=\"secondary\">{(this.props.viewBookmarks) ? (\"View all Results\") : (\"View Pinned/Bookmarks\")}</Button>{' '}\r\n              </div>) : (<div/>)}\r\n\r\n              <div style={{marginTop: \"13px\", marginLeft: \"27%\", zIndex: \"2500 !important\"}}>\r\n\r\n\r\n                      <Button outline color=\"secondary\" onClick={this.toggleStats}>Resource Statistics</Button>\r\n\r\n                      <Modal size=\"lg\" style={{maxWidth: '100vw', maxHeight: '100vh', width: '100vw', height: '100vh'}} isOpen={this.state.modal} toggle={this.toggle}>\r\n                        <ModalHeader close={closeBtn} style={{backgroundColor: \"black\", color: \"white\"}} toggle={this.toggleStats}>Resource Statistics</ModalHeader>\r\n\r\n                        <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\"}}>\r\n\r\n                            <div style={{display: \"flex\", height: \"49%\"}}>\r\n                               <ColCharts label=\"Function\" />\r\n                               <ColCharts label=\"Material\" />\r\n                            </div>\r\n\r\n                            <div style={{display: \"flex\",height: \"49%\", marginTop: \"2%\"}}>\r\n                               <ColCharts label=\"Fabrication\" />\r\n                               <BodyChart />\r\n                            </div>\r\n\r\n                        </ModalBody>\r\n\r\n                      </Modal>\r\n           </div>\r\n\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n    toggleDisplay = () => {\r\n\r\n      this.props.toggleDisplay();\r\n    }\r\n\r\n    toggleBookmarks = () => {\r\n\r\n      this.props.toggleBookmarks();\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        filterData: () => dispatch({type: actionTypes.FILTER_DATA}),\r\n        filterYear: (minYear, maxYear) => dispatch({type: actionTypes.FILTER_YEAR, minYear: minYear, maxYear: maxYear}),\r\n        filterVenue: (venue) => dispatch({type: actionTypes.FILTER_VENUE, val: venue}),\r\n        filterSource: (source) => dispatch({type: actionTypes.FILTER_SOURCE, val: source}),\r\n        toggleDisplay: () => dispatch({type: actionTypes.TOGGLE_DISPLAY}),\r\n        toggleBookmarks: () =>  dispatch({type: actionTypes.VIEW_BOOKMARKS}),\r\n\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n        searchData: state.searchData,\r\n        listView: state.listView,\r\n        viewBookmarks: state.viewBookmarks,\r\n\r\n        loggedIn: state.isLoggedIn,\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBody);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './filterBody.css'\r\n\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nimport FilterBody from './FilterBody';\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass FilterPane extends Component {\r\n\r\n  /*\r\n    Make a boolean in store, whether results to be displayed are from searchQuery\r\n    Store the search query itself\r\n\r\n    Define an action to store search query\r\n  */\r\n\r\n\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n      this.state = {\r\n        value: '',\r\n        popoverOpen: false,\r\n        visibility: 'visible',\r\n      };\r\n    }\r\n\r\n    toggleVisibility = () => {\r\n      if(this.state.visibility === 'visible') {\r\n        this.setState({\r\n          visibility: 'hidden',\r\n        });\r\n      }\r\n      else {\r\n        this.setState({\r\n          visibility: 'visible',\r\n        });\r\n      }\r\n\r\n      console.log(this.state.visibility);\r\n    }\r\n\r\n    toggle() {\r\n      this.setState({\r\n        popoverOpen: !this.state.popoverOpen\r\n      });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n       this.setState({value: event.target.value});\r\n     }\r\n\r\n   handleSubmit = (event) => {\r\n\r\n     this.props.toggleDisplay();\r\n     this.props.searchTermDisplayUpdate();\r\n     this.props.searchTermQueryUpdate(this.state.value);\r\n\r\n     this.setState({value: ''});\r\n     event.preventDefault();\r\n\r\n   }\r\n\r\n    render() {\r\n\r\n      let val = 'translateX(-1.2vw)';\r\n      if(this.state.popoverOpen){\r\n        val = 'translateX(-24vw)';\r\n\r\n      }\r\n\r\n      let temp = 'translate(-100px, 10px)'\r\n\r\n      //if(this.state.popoverOpen)\r\n        //temp = 'translate(-350px, 10px)'\r\n\r\n      return (\r\n\r\n          <div className={(this.props.move) ? ((!this.props.listView) ? (\"filterTabMove\") : (\"filterTabExtra\")) : (\"filterTab\")}>\r\n\r\n          <div className=\"searchBar\">\r\n          <form onSubmit={this.handleSubmit} id=\"demo-2\">\r\n            <input type=\"search\" placeholder=\"Search\" value={this.state.value} onChange={this.handleChange} />\r\n          </form>\r\n          </div>\r\n\r\n          <div style={{transform: \"translate(0, 33vh)\", padding: \"0 0 0 0\", zIndex: \"999\"}}>\r\n              <div style={{transform: val}}>\r\n                  <Button className=\"rotate6\" style={{ zIndex: \"900\", width: \"180px\", height: \"25px\"}} outline color=\"info\" id={'PopoverFilter'}><div style={{ transform: \"translateY(-10px)\",  borderTopStyle: \"solid\", borderColor: \"black\", borderWidth: \"2px\"}}><b> - - - - - -</b></div></Button>\r\n               </div>\r\n\r\n               <Popover hideArrow={true} style={{width: \"102%\", height: \"100%\", color: \"black\", transform: \"translateX(-0.3vw)\", zIndex: \"10\"}} placement=\"right\" isOpen={this.state.popoverOpen} target={'PopoverFilter'} toggle={this.toggle}>\r\n                 <PopoverHeader style={{fontWeight: \"bold\", width: \"102%\", backgroundColor: \"black\", color: \"white\"}}>Data Filter</PopoverHeader>\r\n                 <PopoverBody style={{color: \"black\", width: \"102%\", fontWeight: \"bold\", backgroundColor: \"black\", color: \"white\"}}><FilterBody filterToggle={this.toggleVisibility} showLoop={this.props.showLoop}/></PopoverBody>\r\n               </Popover>\r\n               </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        searchTermDisplayUpdate: () => dispatch({type: actionTypes.SEARCH_TERM_DISPLAY}),\r\n        searchTermQueryUpdate: (value) => dispatch({type: actionTypes.SEARCH_TERM_QUERY, val: value}),\r\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listView: state.listView,\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPane);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\nimport ColCharts from './ColCharts'\r\nimport BodyChart from './BodyChart'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass BodyZones extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n          zone: 'none',\r\n          modal: false\r\n        };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n\r\n  clicked = (area) => {\r\n\r\n    if(this.state.name === 'none') {\r\n\r\n      this.setState({\r\n        zone: area.name\r\n      });\r\n\r\n      this.props.onSelectBodyZones(area.name);\r\n    }\r\n\r\n    else {\r\n\r\n      if(area.name != this.state.zone) {\r\n\r\n        this.setState({\r\n          zone: area.name\r\n        });\r\n\r\n        this.props.onSelectBodyZones(area.name);\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          zone: 'none'\r\n        });\r\n      }\r\n   }\r\n\t}\r\n\r\n    render() {\r\n\r\n      let img = \"ImageDatabase/HumanBody/Androgynous.png\";\r\n\r\n      if(this.state.zone === 'none')\r\n        img = \"ImageDatabase/HumanBody/Androgynous.png\";\r\n\r\n      else if(this.state.zone === 'Head')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_head.png\";\r\n\r\n      else if(this.state.zone === 'Chest')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_chest.png\";\r\n\r\n      else if(this.state.zone === 'Back')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_back.png\";\r\n\r\n      else if(this.state.zone === 'Pelvic Region')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_pelvicregion.png\";\r\n\r\n      else if(this.state.zone === 'Legs')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_legs.png\";\r\n\r\n      else if(this.state.zone === 'Feet')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_feet.png\";\r\n\r\n      else if(this.state.zone === 'Arms')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_arm.png\";\r\n\r\n      else if(this.state.zone === 'Wrist and Hand')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_handnwrist.png\";\r\n\r\n      let myMap = {\r\n          name: \"my-map\",\r\n          areas: [\r\n          {name: \"Head\", shape: \"rect\", coords: [70, 0, 110, 57], fillColor: \"transparent\"},\r\n          {name: \"Chest\", shape: \"rect\", coords: [53, 57, 90, 164], fillColor: \"transparent\"},\r\n          {name: \"Back\", shape: \"rect\", coords: [90, 57, 127, 164], fillColor: \"transparent\"},\r\n          {name: \"Pelvic Region\", shape: \"rect\", coords: [50, 168, 130, 214], fillColor: \"transparent\"},\r\n          {name: \"Legs\", shape: \"rect\", coords: [50, 214, 130, 368], fillColor: \"transparent\"},\r\n          {name: \"Feet\", shape: \"rect\", coords: [45, 368, 135, 400], fillColor: \"transparent\"},\r\n\r\n          {name: \"Arms\", shape: \"rect\", coords: [22, 67, 53, 174], fillColor: \"transparent\"},\r\n          {name: \"Arms\", shape: \"rect\", coords: [127, 67, 158, 174], fillColor: \"transparent\"},\r\n\r\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [0, 174, 30, 215], fillColor: \"transparent\"},\r\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [148, 174, 178, 215], fillColor: \"transparent\"}\r\n          ]\r\n      }\r\n\r\n            const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n            return (\r\n             <div className=\"container\">\r\n\r\n\r\n\r\n             <div style={{transform: \"translate(20px, 100px)\"}}>\r\n             <ImageMapper src={img} map={myMap} width={205} height={400}\r\n              \tonClick={area => this.clicked(area)}\r\n              />\r\n              <div style={{marginTop: \"10px\", transform: \"translateX(-1.35vw)\", color: \"#CECECE\", fontWeight: \"600\", fontSize: \"small\"}}>\r\n                  <div>CLICK ON THE</div>\r\n                  <div>BODY ZONES SELECTION</div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(BodyZones);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomePage.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport {Alert} from 'reactstrap';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nclass HomePage extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n          zone: 'none',\r\n          signUpEmail: '',\r\n          signUpUsername: '',\r\n          signUpPassword: '',\r\n          signUpWarning: '',\r\n          loginUsername: '',\r\n          loginPassword: '',\r\n          loginWarning: '',\r\n          modal: false\r\n        };\r\n\r\n      this.onSignUpEmailChange = this.onSignUpEmailChange.bind(this);\r\n      this.onSignUpUsernameChange = this.onSignUpUsernameChange.bind(this);\r\n      this.onSignUpPasswordChange = this.onSignUpPasswordChange.bind(this);\r\n      this.onSignUpWarningChange = this.onSignUpWarningChange.bind(this);\r\n\r\n      this.onLoginUsernameChange = this.onLoginUsernameChange.bind(this);\r\n      this.onLoginPasswordChange = this.onLoginPasswordChange.bind(this);\r\n      this.onLoginWarningChange = this.onLoginWarningChange.bind(this);\r\n\r\n      this.onSignUpSubmit = this.onSignUpSubmit.bind(this);\r\n      this.onLoginSubmit = this.onLoginSubmit.bind(this);\r\n  }\r\n\r\n    toggle = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n    }\r\n\r\n    onSignUpWarningChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpWarning: 'Invalid credentials',\r\n      });\r\n    }\r\n\r\n    onLoginWarningChange = (event) => {\r\n\r\n      this.setState({\r\n        loginWarning: 'Invalid credentials',\r\n      });\r\n    }\r\n\r\n    onSignUpUsernameChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpUsername: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginUsernameChange = (event) => {\r\n\r\n      this.setState({\r\n        loginUsername: event.target.value,\r\n      });\r\n    }\r\n\r\n\r\n    onSignUpEmailChange = (event) => {\r\n\r\n\r\n      this.setState({\r\n        signUpEmail: event.target.value,\r\n      });\r\n    }\r\n\r\n    onSignUpPasswordChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpPassword: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginPasswordChange = (event) => {\r\n\r\n      this.setState({\r\n        loginPassword: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginSubmit = () => {\r\n\r\n      let success = true;\r\n      let bookMarks = [];\r\n\r\n      let authSuccess = this.props.authSuccess;\r\n      let toggleDisp = this.props.toggle;\r\n\r\n      let onLoginWarningChange = this.onLoginWarningChange;\r\n\r\n      let jsonToSend = JSON.stringify({\r\n           username: this.state.loginUsername,\r\n           password: this.state.loginPassword\r\n       })\r\n\r\n       let pwd = this.state.loginPassword;\r\n\r\n       var request = new Request('https://chimerabackend.herokuapp.com/api/login/', {\r\n             method: 'POST',\r\n             headers: {\r\n               'Content-Type': 'application/json',\r\n             },\r\n             body: jsonToSend\r\n           });\r\n       fetch(request).then(function(response){\r\n\r\n          if(response.status.toString() === '200') {\r\n             response.text().then(function(text) {\r\n\r\n                 var objReceived = JSON.parse(text);\r\n                 if (objReceived.message === 'SUCCESS') {\r\n\r\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\r\n                    toggleDisp();\r\n                 }\r\n                 else {\r\n\r\n                     onLoginWarningChange();\r\n\r\n                 }\r\n             })\r\n           }\r\n\r\n           else {\r\n             onLoginWarningChange();\r\n           }\r\n       })\r\n\r\n    }\r\n\r\n    onSignUpSubmit = () => {\r\n\r\n      let success = true;\r\n      let bookMarks = [];\r\n\r\n      let authSuccess = this.props.authSuccess;\r\n      let toggleDisp = this.props.toggle;\r\n\r\n      let onSignUpWarningChange = this.onSignUpWarningChange;\r\n\r\n      let pwd = this.state.signUpPassword;\r\n\r\n      let jsonToSend = JSON.stringify({\r\n           username: this.state.signUpUsername,\r\n           email: this.state.signUpEmail,\r\n           password: this.state.signUpPassword\r\n       })\r\n\r\n       var request = new Request('https://chimerabackend.herokuapp.com/api/signup/', {\r\n             method: 'POST',\r\n             headers: {\r\n               'Content-Type': 'application/json',\r\n             },\r\n             body: jsonToSend\r\n           });\r\n       fetch(request).then(function(response){\r\n\r\n          if(response.status.toString() === '200') {\r\n             response.text().then(function(text) {\r\n\r\n                 var objReceived = JSON.parse(text);\r\n                 if (objReceived.message === 'SUCCESS') {\r\n\r\n                    console.log(objReceived);\r\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\r\n                    toggleDisp();\r\n                 }\r\n                 else {\r\n\r\n                     onSignUpWarningChange();\r\n\r\n                 }\r\n             })\r\n           }\r\n\r\n           else {\r\n             onSignUpWarningChange();\r\n           }\r\n       })\r\n    }\r\n\r\n    render() {\r\n\r\n      const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n      /*\r\n        Make sign up warning and login warning in store and if success, call searchDisplay or toggleSearchDisplay.\r\n        Whateva\r\n      */\r\n\r\n\r\n\r\n      return (\r\n\r\n      <div style={{height: \"100vh\", width:\"100vw\", backgroundSize: \"cover\", backgroundColor: \"black\"}}>\r\n\r\n      <div style={{height: '50%', width: '50%'}}>\r\n      <img src={\"ImageDatabase/Icons/Home.png\"}\r\n       alt=\"\" style={{width: '50vw', transform: \"translate(26vw, 18vh)\", objectFit: \"cover\"}}/>\r\n      </div>\r\n\r\n         <div className=\"containerHome\">\r\n\r\n         <div style={{color: \"white\", textAlign: \"center\", marginLeft: \"5%\", marginTop: \"5%\"}}>Welcome to Chimera, an interactive search engine for Wearables</div>\r\n\r\n         <Button outline size=\"lg\" style={{color: \"white\", marginLeft: \"50%\", marginTop: \"2%\", borderStyle: \"thin\", borderColor: \"white\", borderRadius: \"2px\"}} color=\"black\" onClick={this.toggle}>Enter</Button>{' '}\r\n\r\n         <Modal size=\"lg\" style={{backgroundColor: \"black\", maxWidth: '90vw',  maxHeight: '90vh', width: '90vw', height: '90vh'}} isOpen={this.state.modal} toggle={this.toggle}>\r\n\r\n           <ModalBody style={{backgroundColor: \"black\", color: \"white\"}}>\r\n           <div style={{display: \"flex\"}}>\r\n            <div style={{width: \"30%\", marginTop: \"1.25%\"}}>\r\n               <Form>\r\n                      {(this.state.loginWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.loginWarning}</div>) : (<div></div>)}\r\n                       <div>Username</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onLoginUsernameChange} value={this.state.loginUsername}/>\r\n\r\n                       <div style={{marginTop: \"4.83%\"}}>Password</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onLoginPasswordChange} value={this.state.loginPassword} />\r\n\r\n                     <Button onClick={this.onLoginSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Login</Button>\r\n                </Form>\r\n            </div>\r\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\r\n               <Form>\r\n                        {(this.state.signUpWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.signUpWarning}</div>) : (<div></div>)}\r\n                       <div style={{marginTop: \"10px\"}}>Username</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onSignUpUsernameChange} value={this.state.signUpUsername}/>\r\n\r\n                       <div style={{marginTop: \"10px\"}}>Email</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\" onChange={this.onSignUpEmailChange} value={this.state.signUpEmail}/>\r\n\r\n                       <div style={{marginTop: \"10px\"}}>Password</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onSignUpPasswordChange} value={this.state.signUpPassword} />\r\n\r\n                      <Button onClick={this.onSignUpSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Sign Up</Button>\r\n                </Form>\r\n            </div>\r\n\r\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\r\n               <Form>\r\n                       <div style={{marginTop: \"10px\"}}>Username</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\"/>\r\n\r\n                      <Button onClick={this.props.toggle} style={{marginTop: \"10%\", marginLeft: \"35%\"}} color=\"secondary\">Guest Mode</Button>\r\n                </Form>\r\n            </div>\r\n\r\n            </div>\r\n            <img src={\"ImageDatabase/Icons/MiniHome.png\"}\r\n             alt=\"\" style={{width: '10%', height: \"20%\", transform: \"translate(39vw, 18vh)\", objectFit: \"cover\"}}/>\r\n           </ModalBody>\r\n\r\n         </Modal>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        function: state.functions,\r\n        material: state.material,\r\n        fabrication: state.fabrication,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authSuccess: (valuename, valuepass, value) => dispatch({type: actionTypes.AUTH_SUCCESS, valName: valuename, valPassword: valuepass, val: value}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\nimport \"react-awesome-popover/build/index.css\";\r\nimport { connect } from 'react-redux';\r\nimport LeftPane from './components/LeftPane';\r\nimport Matrix from './components/Matrix';\r\nimport LeftPaneModal from './components/LeftPaneModal';\r\nimport SearchDisplay from './components/SearchDisplay';\r\nimport FilterPane from './components/FilterPane';\r\nimport BodyZones from './components/BodyZones';\r\nimport HomePage from './components/HomePage'\r\nimport { Button, Fade } from 'reactstrap';\r\nimport Tabletop from 'tabletop';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport * as actionTypes from './store/actions';\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        data: [],\r\n        displayHome: true,\r\n      }\r\n  }\r\n\r\n  toggleToSearch = () => {\r\n\r\n    this.setState({\r\n      displayHome: false,\r\n    })\r\n  }\r\n\r\n  toggleBack = () => {\r\n\r\n    this.setState({\r\n      displayHome: true,\r\n    })\r\n  }\r\n\r\n/*\r\n    1) Create a modal for login when start is clicked\r\n    2) Make a state variable, isLoggen in, only display bookmark related features if user is indeed logged in\r\n*/\r\n    componentDidMount() {\r\n\r\n        Tabletop.init({\r\n          key: '19SNEbgmJqzFkXajdTnCDN5S6-PHmqFIGoN_MCFeOMcc',\r\n          callback: googleData => {\r\n\r\n            let temp = googleData[\"Sheet1\"].elements;\r\n\r\n            let wearability = this.computeWearability(googleData[\"Wearability\"].elements);\r\n            let costmetric = this.computeCostMetric(googleData[\"Sheet1\"].elements);\r\n            let impMetric = this.computeImplementationMetric(googleData[\"Sheet1\"].elements);\r\n            for(let i = 0; i < temp.length; i++) {\r\n                  temp[i] = {\r\n                 ...temp[i],\r\n                 Wearability: wearability[i][\"Wearability\"],\r\n                 costMetric: costmetric[i][\"costMetric\"],\r\n                 impMetric: impMetric[i][\"impMetric\"],\r\n               };\r\n            }\r\n\r\n            console.log(temp);\r\n            this.props.updateSearchData(temp);\r\n          },\r\n          simpleSheet: false\r\n        })\r\n\r\n    }\r\n\r\n    computeImplementationMetric = (data) => {\r\n\r\n      let fabricationChart =\r\n      {\"laser cutting\":\t3,\"3d printing\":\t9,\"layering\": 1,\"printing\": 3,\"painting\": 3,\r\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 9,\"soldering\":\t3,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\r\n       \"knit\": 9,\"embroidery and applique\":\t9,\r\n       \"patchwork and patterning\": 3,\"woven\": 3,\"non woven\":\t3,\r\n      \"machining\":\t3,\"cut and sew\":\t1, \"joining\": 1};\r\n\r\n      let functionChart =\r\n        {'storage': 1, 'breathability': 3, 'energy harvesting': 9, 'feedback': 9,\r\n         'display': 3, 'electronic elements connections': 3, 'wireless communication': 9, 'control': 9, 'movement': 3,\r\n          'sensing': 3, 'protective': 1, 'magnetic': 1, 'cognitive': 9, 'modularity': 3, 'emissivity': 3,\r\n        'wearability': 3, 'morphology': 3, 'aesthetics': 3, 'gestures': 3};\r\n\r\n      let impMetric = [];\r\n\r\n      for(let i = 0; i < data.length; i++) {\r\n\r\n          let fabScore = 0;\r\n          let funcScore = 0;\r\n\r\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\r\n            fabScore += fabricationChart[data[i][\"Fabrication 1\"]];\r\n          }\r\n\r\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\r\n            fabScore += fabricationChart[data[i][\"Fabrication 2\"]];\r\n          }\r\n\r\n          if(data[i][\"Function 1\"].toLowerCase() in functionChart) {\r\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 1\"]]);\r\n          }\r\n\r\n          if(data[i][\"Function 2\"].toLowerCase() in functionChart) {\r\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 2\"]]);\r\n          }\r\n\r\n          if(data[i][\"Function 3\"].toLowerCase() in functionChart) {\r\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 3\"]]);\r\n          }\r\n\r\n          let temp = fabScore * funcScore;\r\n\r\n          let ans = 1;\r\n          if(temp <= 12)\r\n            ans = 1;\r\n          else if(temp > 12 && temp < 54)\r\n            ans = 2;\r\n          else {\r\n            ans = 3;\r\n          }\r\n\r\n          impMetric[i] = {\"impMetric\": ans};\r\n      }\r\n\r\n\r\n      return impMetric;\r\n\r\n\r\n  }\r\n\r\n    computeCostMetric = (data) => {\r\n\r\n      let fabricationChart =\r\n      {\"laser cutting\":\t9,\"3d printing\":\t9,\"layering\": 3,\"printing\": 3,\"painting\": 3,\r\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 3,\"soldering\":\t1,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\r\n       \"knit\": 1,\"embroidery and applique\":\t3,\r\n       \"patchwork and patterning\": 3,\"woven\": 9,\"non woven\":\t9,\r\n       \"machining\":\t9,\"cut and wew\":\t1, \"joining\": 3};\r\n\r\n\r\n      /*\r\n        INKS AND FINISHES\r\n      */\r\n      let materialChart =\r\n      {\r\n          \"conductive inks\": 3,\r\n          \"polymers\": 9,\r\n          \"molding materials\": 9,\r\n          \"threads\": 1,\r\n          \"conductive threads\":\t3,\r\n          \"adhesives\": 3,\r\n          \"paper and cardboard\": 1,\r\n          \"electronics\": 9,\r\n          \"textiles and composites\": 1,\r\n          \"hide\":\t1,\r\n          \"hardware\": 1,\r\n          \"organic materials\": 9,\r\n          \"inks & finishes\": 0,\r\n          \"metal\": 3,\r\n          \"shape memory alloy\": 9\r\n      };\r\n\r\n      let costMetric = [];\r\n\r\n      for(let i = 0; i < data.length; i++) {\r\n\r\n          let fabScore = 0;\r\n          let matScore = 0;\r\n\r\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\r\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 1\"]]);\r\n          }\r\n\r\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\r\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 2\"]]);\r\n          }\r\n\r\n          if(data[i][\"Material 1\"].toLowerCase() in materialChart) {\r\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 1\"]]);\r\n          }\r\n\r\n          if(data[i][\"Material 2\"].toLowerCase() in materialChart) {\r\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 2\"]]);\r\n          }\r\n\r\n          if(data[i][\"Material 3\"].toLowerCase() in materialChart) {\r\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 3\"]]);\r\n          }\r\n\r\n          costMetric[i] = {\"costMetric\": fabScore + matScore};\r\n      }\r\n      return costMetric;\r\n    }\r\n\r\n    computeWearability = (wearability) => {\r\n\r\n      wearability = wearability.map((item) => {\r\n\r\n        let count = 0\r\n        let totalCount = 50\r\n\r\n        let attachScore = item[\"Attachment to the Body\"];\r\n\r\n        switch (attachScore) {\r\n\r\n            case \"Threads\":\r\n              attachScore = 5;\r\n              break;\r\n            case \"Velcro\":\r\n              attachScore = 3;\r\n              break;\r\n            case \"Adhesives\":\r\n               attachScore = 4;\r\n              break;\r\n            case \"Embedded\":\r\n              attachScore = 2;\r\n              break;\r\n            case \"Straps\":\r\n              attachScore = 1;\r\n              break;\r\n            case \"Clips\":\r\n              attachScore = 4;\r\n              break;\r\n            default:\r\n              attachScore = 0;\r\n              totalCount = totalCount - 5;\r\n\r\n        }\r\n\r\n        let mainScore = item[\"Maintenance required\"];\r\n\r\n        if(isNaN(mainScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n\r\n          count += parseInt(mainScore);\r\n        }\r\n\r\n        let actScore = item[\"activity obstruction\"];\r\n\r\n        if(isNaN(actScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(actScore);\r\n        }\r\n\r\n        let intScore = item[\"Integration (form and size)\"];\r\n\r\n        if(isNaN(intScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(intScore);\r\n        }\r\n\r\n        let conScore = item[\"Context\"];\r\n\r\n        if(isNaN(conScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(conScore);\r\n        }\r\n\r\n        let aesScore = item[\"Aesthetics\"];\r\n\r\n        if(isNaN(aesScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(aesScore);\r\n        }\r\n\r\n        return {\"Wearability\": ((count / totalCount) * 100).toFixed(2)}\r\n      })\r\n\r\n      return wearability;\r\n    }\r\n\r\n  displayMatrix = () => {\r\n    this.setState({\r\n      displayHome: false,\r\n    });\r\n  }\r\n\r\n    render() {\r\n\r\n        return (\r\n          <BrowserRouter>\r\n          {(this.state.displayHome) ? (<HomePage toggle={this.toggleToSearch} />) : ((!this.props.searchDisplay) ? (<div className=\"layout\">\r\n             <LeftPane />\r\n             <LeftPaneModal />\r\n             <Matrix />\r\n             <BodyZones />\r\n             <FilterPane move={false} showLoop={true}/>\r\n          </div>) : (<div className=\"layout\"><SearchDisplay backToSearch={this.props.updateSearchDisplay}/>\r\n          <FilterPane move={true} showLoop={true}/></div>)\r\n        )}\r\n        </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchDisplay: state.searchDisplay,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateSearchData: (value) => dispatch({type: actionTypes.UPDATE_DATA, value: value}),\r\n        updateSearchDisplay: () => dispatch({type: actionTypes.REMOVE_SEARCH_DISPLAY})\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './store/reducers/index'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootReducer = reducer;\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}