{"version":3,"sources":["store/reducers/index.js","store/actions.js","components/LeftPanePopoverTab.js","components/LeftPaneTab.js","components/LeftPane.js","components/Matrix.js","components/LeftPaneModalTab.js","components/LeftPaneModal.js","components/SearchDisplayTab.js","components/SearchDisplay.js","components/ListDisplayTab.js","components/ColCharts.js","components/BodyChart.js","components/FilterBody.js","components/FilterPane.js","components/BodyZones.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","searchDisplay","searchData","names","params","listDisplay","searchTermDisplay","searchTermQuery","filter","minYear","maxYear","venueFilter","sourceFilter","categories","functions","bodyZones","fabrication","material","arrFunc","arrBod","arrFab","arrMat","selFunction","selBodyZones","selFabrication","selMaterial","showFunc","showBod","showFab","showMat","bookMarks","viewBookmarks","isLoggedIn","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","val","toConsumableArray","value","listView","temp","index","indexOf","splice","push","LeftPanePopoverTab","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","subtype","tempArr","listArr","includes","setState","onSelect","onSelFunction","onSelBodyZones","onSelFabrication","onSelMaterial","selArr","_this2","console","log","inp","subtypes","map","input","react_default","a","createElement","key","className","name","id","label","style","width","color","backgroundColor","Component","connect","dispatch","LeftPaneTab","toggle","popoverOpen","popoverFunc","popoverBod","popoverFab","popoverMat","arr","backgroundCol","borderCol","borderColor","src","alt","height","objectFit","transform","UncontrolledPopover","borderStyle","borderWidth","hideArrow","modifiers","offset","trigger","target","PopoverHeader","fontWeight","PopoverBody","padding","components_LeftPanePopoverTab","LeftPane","onShowFunction","onShowBodyZones","onShowFabrication","onShowMaterial","listItems","i","tempList","item","listItem","components_LeftPaneTab","clicked","Matrix","name_array","bool_param","query_param_array","updateQuery","toggleDisplay","bool_array","funcCount","toLowerCase","trim","fabCount","matCount","bodCount","funcBodCount","matBodCount","fabBodCount","fabFuncCount","matFuncCount","matFabCount","matFabFuncCount","matFabBodCount","funcFabBodCount","curFuncFabBodCount","funcMatBodCount","allCount","lib","viewBox","size","x","y","flat","spacing","origin","q","r","s","textAnchor","dy","fill","query_param","LeftPaneModalTab","curInp","onSelectFunction","onSelectBodyZones","onSelectFabrication","onSelectMaterial","curInput","background","LeftPaneModal","funcModal","components_LeftPaneModalTab","fabModal","matModal","SearchDisplayTab","updateBookmark","check","wearToken","parseInt","costToken","col","marginLeft","href","onerror","substring","loggedIn","Input","checked","borderRadius","opacity","overflow","display","overflowX","overflowY","SearchDisplay","filterFunc","filterBod","filterFab","filterMat","filterYear","filterVenue","venue","filterSource","source","shuffleArray","array","j","Math","floor","random","_ref","seed","sin","filterData","research","tutorials","aesthetics","concepts","filterArr","allData","searchQuery","researchArr","tutorialsArr","aestheticsArr","conceptsArr","patentsArr","listContents","scope","corLabel","Table","striped","components_SearchDisplayTab","backToSearch","ColCharts","data","function","subType","Results","es6","margin","top","right","left","bottom","dataKey","BodyChart","out","position","fontSize","Range","Slider","createSliderWithTooltip","FilterBody","toggleStats","prevState","modal","filterToggle","onChange","onVenueClick","onSourceClick","toggleBookmarks","bind","assertThisInitialized","dropdownOpen","venueArr","filterEngineering","filterFashion","engLength","fashLength","Set","DropdownItem","yearData","_loop","toString","concat","Projects","closeBtn","Button","hide","cursor","stroke","strokeWidth","handleStyle","trackStyle","allowCross","railStyle","min","max","defaultValue","float","ButtonDropdown","isOpen","DropdownToggle","marginBottom","caret","DropdownMenu","marginTop","marginRight","Label","Progress","multi","bar","outline","zIndex","Modal","maxWidth","maxHeight","ModalHeader","close","ModalBody","components_ColCharts","components_BodyChart","FilterPane","toggleVisibility","visibility","handleChange","event","handleSubmit","searchTermDisplayUpdate","searchTermQueryUpdate","preventDefault","move","onSubmit","placeholder","borderTopStyle","Popover","placement","components_FilterBody","showLoop","BodyZones","area","zone","img","ImageMapper_default","areas","shape","coords","fillColor","HomePage","onSignUpWarningChange","signUpWarning","onLoginWarningChange","loginWarning","onSignUpUsernameChange","signUpUsername","onLoginUsernameChange","loginUsername","onSignUpEmailChange","signUpEmail","onSignUpPasswordChange","signUpPassword","onLoginPasswordChange","loginPassword","onLoginSubmit","authSuccess","toggleDisp","jsonToSend","JSON","stringify","username","password","request","Request","method","headers","Content-Type","body","fetch","then","response","status","text","objReceived","parse","message","bookmarks","onSignUpSubmit","email","backgroundImage","backgroundSize","Form","FormGroup","es_Label","for","App","toggleToSearch","displayHome","toggleBack","computeImplementationMetric","fabricationChart","laser cutting","3d printing","layering","printing","painting","sticking","heat pressing","heat transfer","soldering","origami","molding and casting","pleating and folding","knit","embroidery and applique","patchwork and patterning","woven","non woven","machining","cut and sew","joining","functionChart","storage","breathability","energy harvesting","feedback","electronic elements connections","wireless communication","control","movement","sensing","protective","magnetic","cognitive","modularity","emissivity","wearability","morphology","gestures","impMetric","fabScore","funcScore","ans","computeCostMetric","cut and wew","materialChart","conductive inks","polymers","molding materials","threads","conductive threads","adhesives","paper and cardboard","electronics","textiles and composites","hardware","organic materials","inks & finishes","metal","shape memory alloy","costMetric","matScore","computeWearability","count","totalCount","attachScore","mainScore","isNaN","actScore","intScore","conScore","aesScore","Wearability","toFixed","displayMatrix","Tabletop","init","callback","googleData","elements","costmetric","updateSearchData","simpleSheet","react_router_dom","src_components_HomePage","components_SearchDisplay","updateSearchDisplay","components_FilterPane","components_LeftPane","components_LeftPaneModal","components_Matrix","components_BodyZones","Boolean","window","location","hostname","match","rootReducer","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7995190c.chunk.js","sourcesContent":["import * as actionTypes from '../actions';\r\n\r\nconst initialState = {\r\n\r\n    searchDisplay: false,\r\n    searchData: [],\r\n    names: [],\r\n    params: [],\r\n\r\n    listDisplay: false,\r\n\r\n    searchTermDisplay: false,\r\n    searchTermQuery: '',\r\n\r\n    filter: true,\r\n    minYear: 1990,\r\n    maxYear: 2018,\r\n    venueFilter: 'all',\r\n    sourceFilter: 'both',\r\n\r\n    categories: ['Function', 'BodyZones', 'Fabrication', 'Material'],\r\n    functions: ['Storage', 'Breathability', 'Energy Harvesting', 'Feedback',\r\n     'Display', 'Electronic Elements Connections', 'Wireless Communication', 'Control', 'Movement',\r\n      'Sensing', 'Protective', 'Magnetic', 'Cognitive', 'Modularity', 'Emissivity',\r\n    'Wearability', 'Morphology', 'Aesthetics', 'Gestures'],\r\n    bodyZones: ['Head', 'Chest', 'Pelvic Region', 'Arms', 'Legs',\r\n    'Wrist and Hand', 'Back', 'Full Body', 'Feet'],\r\n    fabrication: ['Stiching/Sewing', 'Laser Cutting', 'Weaving', '3D Printing',\r\n     'Layering', 'Printing', 'Sticking', 'Head Pressing', 'Heat Transfer',\r\n      'Soldering', 'Origami', 'Molding and Casting', 'Pleating and Folding',\r\n      'Knit', 'Embroidery and Applique', 'Beading', 'Quilting',\r\n      'Patchwork and Pattering', 'Woven', 'Non Woven', 'Machining', 'Painting'],\r\n    material: ['Illumination', 'Conductive Inks', 'Polymers', 'Molding Materials',\r\n    'Threads', 'Conductive Threads','Adhesives', 'Paper and Cardboard', 'Electronics',\r\n    'Textile and Composites', 'Bonded', 'Jaquard', 'Hide', 'Hardware', 'Organic Materials',\r\n    'Inks & Finishes', 'Metal', 'Shape Memory Alloy'],\r\n\r\n    arrFunc: [],\r\n    arrBod: [],\r\n    arrFab: [],\r\n    arrMat: [],\r\n\r\n    selFunction: '',\r\n    selBodyZones: '',\r\n    selFabrication: '',\r\n    selMaterial: '',\r\n\r\n    showFunc: false,\r\n    showBod: false,\r\n    showFab: false,\r\n    showMat: false,\r\n\r\n    bookMarks: [],\r\n    viewBookmarks: false,\r\n\r\n    isLoggedIn: false,\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case actionTypes.SELECT_FUNCTION:\r\n            return {\r\n                ...state,\r\n                selFunction: action.val\r\n            }\r\n        case actionTypes.SELECT_BODYZONES:\r\n            return {\r\n                ...state,\r\n                selBodyZones: action.val\r\n            }\r\n        case actionTypes.SELECT_FABRICATION:\r\n            return {\r\n                ...state,\r\n                selFabrication: action.val\r\n            }\r\n        case actionTypes.SELECT_MATERIAL:\r\n             return {\r\n                 ...state,\r\n                 selMaterial: action.val\r\n             }\r\n        case actionTypes.SHOW_FUNC:\r\n            return {\r\n              ...state,\r\n              showFunc: !(state.showFunc)\r\n            }\r\n        case actionTypes.SHOW_BOD:\r\n            return {\r\n                ...state,\r\n                showBod: !(state.showBod)\r\n            }\r\n        case actionTypes.SHOW_FAB:\r\n           return {\r\n               ...state,\r\n               showFab: !(state.showFab)\r\n           }\r\n        case actionTypes.SHOW_MAT:\r\n           return {\r\n               ...state,\r\n               showMat: !(state.showMat)\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_FUNC:\r\n           return {\r\n                ...state,\r\n                arrFunc: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_BOD:\r\n\r\n           return {\r\n                ...state,\r\n                arrBod: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_FAB:\r\n           return {\r\n                ...state,\r\n                arrFab: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_MAT:\r\n           return {\r\n                ...state,\r\n                arrMat: [...action.value]\r\n           }\r\n        case actionTypes.UPDATE_DATA:\r\n          return {\r\n            ...state,\r\n            searchData: [...action.value]\r\n          }\r\n          case actionTypes.SEARCH_DISPLAY:\r\n            return {\r\n              ...state,\r\n              searchDisplay: true,\r\n            }\r\n\r\n          case actionTypes.REMOVE_SEARCH_DISPLAY:\r\n          return {\r\n            ...state,\r\n            searchDisplay: false,\r\n          }\r\n          \r\n          case actionTypes.UPDATE_QUERY:\r\n            return {\r\n              ...state,\r\n              names: [...action.names],\r\n              params: [...action.params]\r\n            }\r\n          case actionTypes.FILTER_DATA:\r\n            return {\r\n              ...state,\r\n              filter: true,\r\n            }\r\n          case actionTypes.FILTER_YEAR:\r\n            return {\r\n              ...state,\r\n              minYear: action.minYear,\r\n              maxYear: action.maxYear,\r\n            }\r\n          case actionTypes.FILTER_VENUE:\r\n            return {\r\n              ...state,\r\n              venueFilter: action.val,\r\n            }\r\n          case actionTypes.FILTER_SOURCE:\r\n            return {\r\n              ...state,\r\n              sourceFilter: action.val,\r\n            }\r\n          case actionTypes.TOGGLE_DISPLAY:\r\n            return {\r\n              ...state,\r\n              listView: (!state.listView),\r\n            }\r\n          case actionTypes.SEARCH_TERM_DISPLAY:\r\n            return  {\r\n              ...state,\r\n              searchTermDisplay: true,\r\n            }\r\n          case actionTypes.SEARCH_TERM_QUERY:\r\n            return {\r\n              ...state,\r\n              searchTermQuery: action.val,\r\n            }\r\n          case actionTypes.UPDATE_BOOKMARKS:\r\n\r\n              let temp = [...state.bookMarks];\r\n\r\n              var index = temp.indexOf(action.val);\r\n\r\n              if (index > -1) {\r\n                 temp.splice(index, 1);\r\n              }\r\n\r\n              else {\r\n                temp.push(action.val);\r\n              }\r\n\r\n              return {\r\n                ...state,\r\n                bookMarks: temp,\r\n              }\r\n\r\n          case actionTypes.VIEW_BOOKMARKS: {\r\n\r\n            return {\r\n              ...state,\r\n              viewBookmarks: (!state.viewBookmarks),\r\n            }\r\n\r\n          }\r\n\r\n          case actionTypes.AUTH_SUCCESS: {\r\n\r\n            return {\r\n              ...state,\r\n              isLoggedIn: true,\r\n              bookMarks: action.val\r\n            }\r\n          }\r\n\r\n          case actionTypes.AUTH_FAILURE: {\r\n\r\n            return {\r\n              ...state,\r\n              isLoggedIn: false,\r\n            }\r\n          }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","export const SELECT_FUNCTION = 'SELECT_FUNCTION';\r\nexport const SELECT_BODYZONES = 'SELECT_BODYZONES';\r\nexport const SELECT_FABRICATION = 'SELECT_FABRICATION';\r\nexport const SELECT_MATERIAL = 'SELECT_MATERIAL';\r\n\r\nexport const SHOW_FUNC = 'SHOW_FUNC';\r\nexport const SHOW_BOD = 'SHOW_BOD';\r\nexport const SHOW_FAB = 'SHOW_FAB';\r\nexport const SHOW_MAT = 'SHOW_MAT';\r\n\r\nexport const PRE_SELECT_FUNC = 'PRE_SELECT_FUNC';\r\nexport const PRE_SELECT_BOD = 'PRE_SELECT_BOD';\r\nexport const PRE_SELECT_FAB = 'PRE_SELECT_FAB';\r\nexport const PRE_SELECT_MAT = 'PRE_SELECT_MAT';\r\n\r\nexport const UPDATE_DATA = 'UPDATE_DATA';\r\nexport const SEARCH_DISPLAY = 'SEARCH_DISPLAY';\r\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\r\n\r\nexport const FILTER_DATA = 'FILTER_DATA';\r\nexport const FILTER_YEAR = 'FILTER_YEAR';\r\nexport const FILTER_VENUE = 'FILTER_VENUE';\r\nexport const FILTER_SOURCE = 'FILTER_SOURCE';\r\n\r\nexport const TOGGLE_DISPLAY = 'TOGGLE_DISPLAY';\r\n\r\nexport const SEARCH_TERM_DISPLAY = 'SEARCH_TERM_DISPLAY';\r\nexport const SEARCH_TERM_QUERY = 'SEARCH_TERM_QUERY';\r\n\r\nexport const UPDATE_BOOKMARKS = 'UPDATE_BOOKMARKS';\r\nexport const VIEW_BOOKMARKS = 'VIEW_BOOKMARKS';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\r\n\r\nexport const REMOVE_SEARCH_DISPLAY = 'REMOVE_SEARCH_DISPLAY';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPanePopoverTab.css';\r\nimport { Button, CustomInput, Form, FormGroup, Label } from 'reactstrap';\r\nimport * as actionTypes from '../store/actions';\r\n\r\n\r\nclass LeftPanePopoverTab extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n         listArr: this.props.selArr,\r\n        };\r\n    }\r\n\r\n    onClick = (subtype) => {\r\n\r\n\r\n        let tempArr = this.state.listArr;\r\n\r\n        if(this.state.listArr.includes(subtype)) {\r\n\r\n            tempArr.splice(tempArr.indexOf(subtype),1 );\r\n        }\r\n\r\n        else {\r\n            tempArr.push(subtype);\r\n        }\r\n\r\n        this.setState({\r\n\r\n            listArr: tempArr,\r\n        });\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        this.onSelect();\r\n    }\r\n\r\n    onSelect = () => {\r\n\r\n            //this.props.types and this.state.listArr\r\n            let type = this.props.type;\r\n\r\n\r\n             if(type === 'Function') {\r\n\r\n                 this.props.onSelFunction(this.state.listArr);\r\n             }\r\n             else if(type === 'BodyZones') {\r\n                 this.props.onSelBodyZones(this.state.listArr);\r\n             }\r\n             else if(type === 'Fabrication') {\r\n                 this.props.onSelFabrication(this.state.listArr);\r\n             }\r\n             else {\r\n                 this.props.onSelMaterial(this.state.listArr);\r\n             }\r\n\r\n             //this.props.toggle();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n            console.log(this.props.type);\r\n            console.log(this.state.listArr);\r\n            let inp = '';\r\n\r\n            let selArr = this.state.listArr;\r\n            inp = this.props.subtypes.map((input) => {\r\n\r\n                return (\r\n\r\n                    <div key={this.props.key}>\r\n                     {(selArr.includes(input)) ? (\r\n                       <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBodySelected'\r\n                          name=\"customRadio\"\r\n\r\n                          id={input}\r\n                          label={input}>{input}</div>\r\n                        ) : (\r\n                          <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBody'\r\n                          name=\"customRadio\" key={input} id={input}\r\n                                    label={input}>{input}</div>\r\n                        )}\r\n                     </div>\r\n\r\n\r\n                );\r\n            }\r\n            )\r\n            return (\r\n                        <div style={{width: '100%', color: \"#A7AFBA\", backgroundColor: \"black\"}}>\r\n                          {inp}\r\n                        </div>\r\n\r\n\r\n            );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelFunction: (value) => dispatch({type: actionTypes.PRE_SELECT_FUNC, value: value}),\r\n        onSelBodyZones: (value) => dispatch({type: actionTypes.PRE_SELECT_BOD, value: value}),\r\n        onSelFabrication: (value) => dispatch({type: actionTypes.PRE_SELECT_FAB, value: value}),\r\n        onSelMaterial: (value) => dispatch({type: actionTypes.PRE_SELECT_MAT, value: value}),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LeftPanePopoverTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPaneTab.css'\r\n\r\nimport LeftPanePopoverTab from './LeftPanePopoverTab';\r\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nclass LeftPaneTab extends Component {\r\n\r\n    constructor(props) {\r\n       super(props);\r\n\r\n\r\n\r\n       this.state = {\r\n         popoverFunc: false,\r\n         popoverBod: false,\r\n         popoverFab: false,\r\n         popoverMat: false,\r\n         popoverOpen: false,\r\n       };\r\n\r\n    }\r\n\r\n     toggle = (name) => {\r\n       this.setState({\r\n         popoverOpen: !this.state.popoverOpen\r\n       });\r\n     }\r\n\r\n\r\n   render() {\r\n\r\n\r\n            let type = this.props.name;\r\n\r\n            let arr = [];\r\n            let selArr = [];\r\n\r\n            if(type === 'Function') {\r\n                arr = this.props.functions;\r\n                selArr = this.props.arrFunc;\r\n            }\r\n            else if(type === 'BodyZones') {\r\n                arr = this.props.bodyZones;\r\n                selArr = this.props.arrBod;\r\n            }\r\n            else if(type === 'Fabrication') {\r\n                arr = this.props.fabrication;\r\n                selArr = this.props.arrFab;\r\n            }\r\n            else {\r\n                arr = this.props.material;\r\n                selArr = this.props.arrMat;\r\n            }\r\n\r\n            let backgroundCol = \"rgb(172, 216, 206)\";\r\n            let borderCol = \"rgb(110, 169, 155)\";\r\n\r\n            if(this.props.name === \"Material\") {\r\n                backgroundCol = \"rgb(254, 205, 102)\";\r\n                borderCol = \"rgb(254, 172, 0)\";\r\n            }\r\n\r\n            else if(this.props.name === \"Fabrication\") {\r\n              backgroundCol = \"rgb(133, 194, 219)\";\r\n              borderCol = \"rgb(0, 181, 254)\";\r\n            }\r\n\r\n            //console.log(store.getState());\r\n            return (\r\n\r\n             <div id={'Popover-'+this.props.name} style={{ backgroundColor: backgroundCol, borderColor: borderCol }} className=\"leftPaneTabBody\">\r\n\r\n                 <div className=\"rotate5 move\">{this.props\r\n                 .name}\r\n                 </div>\r\n\r\n\r\n                 <img id=\"image\" src={\"ImageDatabase/Icons/\" + this.props.name + \".png\"}\r\n                  alt=\"\" style={{height: '40px', width: '40px', objectFit: 'cover', transform: \"translate(6px, 20px)\"}}/>\r\n\r\n\r\n\r\n\r\n                         <UncontrolledPopover style={{borderColor: \"#1D4999\", borderStyle: \"solid\", borderWidth: \"5px\", backgroundColor: \"black\"}} hideArrow={true} modifiers={{offset: '-5vw'}} trigger=\"legacy\" target={'Popover-'\r\n                         +\r\n\r\n                         this\r\n                         .props\r\n                         .name}>\r\n\r\n                              <PopoverHeader style={{color: \"#A7AFBA\", backgroundColor: \"black\", fontWeight: \"bold\"}}>{this.props.name}</PopoverHeader>\r\n                               <PopoverBody style={{padding: '0', color: \"#A7AFBA\", backgroundColor: \"black\"}}><LeftPanePopoverTab\r\n                                                        type={this.props.name}\r\n                                                        subtypes={arr}\r\n                                                         selArr={selArr}\r\n                                                         toggle={this.toggle}\r\n                                                         key={this.props.key}/>\r\n                          </PopoverBody>\r\n\r\n                         </UncontrolledPopover>\r\n\r\n            </div>\r\n\r\n        );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        functions: state.functions,\r\n        bodyZones: state.bodyZones,\r\n        fabrication: state.fabrication,\r\n        material: state.material,\r\n\r\n        showFunc: state.showFunc,\r\n        showBod: state.showBod,\r\n        showFab: state.showFab,\r\n        showMat: state.showMat,\r\n\r\n        arrFunc: state.arrFunc,\r\n        arrBod: state.arrBod,\r\n        arrFab: state.arrFab,\r\n        arrMat: state.arrMat,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeftPaneTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './leftPane.css'\r\nimport LeftPaneTab from './LeftPaneTab';\r\n\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass LeftPane extends Component {\r\n\r\n    onClick = (type) => {\r\n\r\n\r\n\r\n         if(type === 'Function') {\r\n\r\n             this.props.onShowFunction();\r\n         }\r\n         else if(type === 'BodyZones') {\r\n             this.props.onShowBodyZones();\r\n         }\r\n         else if(type === 'Fabrication') {\r\n             this.props.onShowFabrication();\r\n         }\r\n         else {\r\n             this.props.onShowMaterial();\r\n         }\r\n    };\r\n\r\n    render() {\r\n\r\n           let listItems = '';\r\n           let i = 0;\r\n\r\n           let tempList = this.props.categories;\r\n           tempList = tempList.filter((item) => {\r\n             return item !== 'BodyZones'\r\n           })\r\n           listItems = tempList.map((listItem) => {\r\n                return (\r\n                    <LeftPaneTab key={i++} name={listItem} clicked={this.onClick} />\r\n                )\r\n            });\r\n\r\n            return (\r\n\r\n             <div className=\"leftPaneBody\">\r\n                {listItems}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        categories: state.categories,\r\n        searchData: state.searchData\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onShowFunction: () => dispatch({type: actionTypes.SHOW_FUNC}),\r\n        onShowBodyZones: () => dispatch({type: actionTypes.SHOW_BOD}),\r\n        onShowFabrication: () => dispatch({type: actionTypes.SHOW_FAB}),\r\n        onShowMaterial: () => dispatch({type: actionTypes.SHOW_MAT}),\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftPane);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './matrix.css'\r\nimport './matrixSVG.css'\r\nimport { GridGenerator, HexGrid, Layout, Path, Hexagon, Text, Pattern, Hex } from 'react-hexgrid';\r\n\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\n\r\nimport * as actionTypes from '.././store/actions';\r\n\r\nclass Matrix extends Component {\r\n\r\n    onClick = (name_array, bool_param, query_param_array) => {\r\n\r\n        if(bool_param) {\r\n\r\n          this.props.updateQuery(name_array, query_param_array);\r\n          this.props.toggleDisplay();\r\n        }\r\n    };\r\n\r\n    /*\r\n\r\n      For every hexagon:\r\n\r\n        1) When clickable:\r\n\r\n            For that specific query, determine how many entries are there in the database.\r\n\r\n            For the 4 base types\r\n\r\n\r\n        2) When not clickable:\r\n\r\n              For all fifteen hexagons I need to calculate number of corresponding inputs.\r\n              Basically like for function, check if entry has X in any of func1-3. look over every entry and maintain\r\n              a boolean for all 4 parameters. and then increae counts depending on either of the 15 cases\r\n              For function + material, check both similars\r\n    */\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n            const hexagonSize = { x: 12.5, y:  11.5 };\r\n\r\n            let name_array = [];\r\n            name_array[0] = 'Function';\r\n            name_array[1] = 'BodyZones';\r\n            name_array[2] = 'Fabrication';\r\n            name_array[3] = 'Material'\r\n\r\n            let bool_array = [];\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n\r\n            if(this.props.selFunction !== '') {\r\n                bool_array[0] = true;\r\n                name_array[0] = this.props.selFunction;\r\n              }\r\n\r\n            if(this.props.selBodyZones !== '') {\r\n                bool_array[1] = true;\r\n                name_array[1] = this.props.selBodyZones;\r\n            }\r\n\r\n            if(this.props.selFabrication !== '') {\r\n                bool_array[2] = true;\r\n                name_array[2] = this.props.selFabrication;\r\n            }\r\n\r\n            if(this.props.selMaterial !== '') {\r\n                bool_array[3] = true;\r\n                name_array[3] = this.props.selMaterial;\r\n            }\r\n\r\n            let funcCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            funcCount = funcCount.length;\r\n\r\n            if(bool_array[0]) {\r\n\r\n              let curFuncCount = this.props.searchData.filter((item) => {\r\n                return item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n              });\r\n              funcCount = curFuncCount.length;\r\n            }\r\n\r\n            let fabCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabCount = fabCount.length;\r\n\r\n            if(bool_array[2]) {\r\n\r\n              let curFabCount = this.props.searchData.filter((item) => {\r\n                return item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n              });\r\n              fabCount = curFabCount.length;\r\n            }\r\n\r\n            let matCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matCount = matCount.length;\r\n\r\n            if(bool_array[3]) {\r\n\r\n              let curMatCount = this.props.searchData.filter((item) => {\r\n                return item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n              });\r\n              matCount = curMatCount.length;\r\n            }\r\n\r\n            let bodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            bodCount = bodCount.length;\r\n\r\n            if(bool_array[1]) {\r\n\r\n              let curBodCount = this.props.searchData.filter((item) => {\r\n                return item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n              });\r\n              bodCount = curBodCount.length;\r\n            }\r\n\r\n            /*\r\n              For twos, take 2 bool arrays\r\n            */\r\n\r\n            let funcBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            funcBodCount = funcBodCount.length;\r\n\r\n            if(bool_array[0] && bool_array[1]) {\r\n\r\n              let curFuncBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              funcBodCount = curFuncBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let matBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matBodCount = matBodCount.length;\r\n\r\n            if(bool_array[1] && bool_array[3]) {\r\n\r\n              let curMatBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\r\n              });\r\n              matBodCount = curMatBodCount.length;\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n            let fabBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabBodCount = fabBodCount.length;\r\n\r\n            if(bool_array[1] && bool_array[2]) {\r\n\r\n              let curFabBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n              });\r\n              fabBodCount = curFabBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let fabFuncCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabFuncCount = fabFuncCount.length;\r\n\r\n            if(bool_array[0] && bool_array[2]) {\r\n              let curFabFuncCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              fabFuncCount = curFabFuncCount.length;\r\n            }\r\n\r\n            let matFuncCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matFuncCount = matFuncCount.length;\r\n\r\n            if(bool_array[0] && bool_array[3]) {\r\n              let curMatFuncCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              matFuncCount = curMatFuncCount.length;\r\n            }\r\n\r\n\r\n\r\n            let matFabCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matFabCount = matFabCount.length;\r\n\r\n            if(bool_array[2] && bool_array[3]) {\r\n              let curMatFabCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n              });\r\n              matFabCount = curMatFabCount.length;\r\n            }\r\n\r\n\r\n\r\n\r\n            let matFabFuncCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            matFabFuncCount = matFabFuncCount.length;\r\n\r\n            if(bool_array[2] && bool_array[3] && bool_array[0]) {\r\n              let curMatFabFuncCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                )\r\n              });\r\n              matFabFuncCount = curMatFabFuncCount.length;\r\n            }\r\n\r\n\r\n            let matFabBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            matFabBodCount = matFabBodCount.length;\r\n\r\n\r\n            if(bool_array[2] && bool_array[3] && bool_array[1]) {\r\n              let curMatFabBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n              matFabBodCount = curMatFabBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let funcFabBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            funcFabBodCount = funcFabBodCount.length;\r\n\r\n            if(bool_array[2] && bool_array[0] && bool_array[1]) {\r\n              let curFuncFabBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n\r\n              console.log(curFuncFabBodCount);\r\n              funcFabBodCount = curFuncFabBodCount.length;\r\n            }\r\n\r\n            let funcMatBodCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            funcMatBodCount = funcMatBodCount.length;\r\n\r\n            if(bool_array[3] && bool_array[0] && bool_array[1]) {\r\n              let curFuncMatBodCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n              funcMatBodCount = curFuncMatBodCount.length;\r\n            }\r\n\r\n            let allCount = this.props.searchData.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            allCount = allCount.length;\r\n\r\n            if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\r\n              let curAllCount = this.props.searchData.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                  (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n\r\n              });\r\n              allCount = curAllCount.length;\r\n            }\r\n\r\n            return (\r\n\r\n             <div className=\"matrixBody\">\r\n\r\n\r\n             <div className=\"matrixSVG\">\r\n                        <HexGrid width={775} height={600} viewBox=\"-40 -45 90 90\">\r\n                        <Layout size={hexagonSize} flat={true} spacing={1.05} origin={{ x: 0, y: 0 }}>\r\n\r\n                                  <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Fabrication', 'Material', 'Function'])} q={0} r={0} s={0}>\r\n\r\n                                    {(bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + allCount + \")\"}</tspan></text>) :\r\n                                     (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + allCount + \")\"}</tspan></text>)}\r\n                                 </Hexagon>\r\n\r\n                                {/*\r\n                                 <Hexagon q={0} r={2} s={0} stroke=\"green\" fill=\"purple\"/>\r\n                                 <Hexagon q={0} r={-2} s={0} stroke=\"green\" fill=\"purple\"/>\r\n\r\n\r\n                                 <Hexagon q={1} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={1} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                 <Hexagon q={-1} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={-1} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n\r\n                                 <Hexagon q={-2} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={-2} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                 <Hexagon q={2} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={2} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={-3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n\r\n                                <Hexagon q={-4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                */}\r\n\r\n\r\n                                 <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2], ['BodyZones', 'Fabrication'])} q={0} r={1} s={0}>\r\n\r\n                                   {(bool_array[1] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text>) :\r\n                                    (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text>)}\r\n                                </Hexagon>\r\n\r\n                                <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[3], ['Function', 'Material'])} q={0} r={-1} s={0}>\r\n\r\n                                  {(bool_array[0] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text>) :\r\n                                   (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text>)}\r\n                               </Hexagon>\r\n\r\n\r\n\r\n                               <Hexagon onClick={() => this.onClick(name_array, bool_array[2], ['Fabrication'])} q={2} r={0} s={0}>\r\n                                   <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabCount + \")\"}</tspan></text>\r\n                              </Hexagon>\r\n                              <Hexagon onClick={() => this.onClick(name_array, bool_array[3], ['Material'])} q={2} r={-2} s={0}>\r\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(254, 205, 102)\">{name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matCount + \")\"}</tspan></text>\r\n\r\n                             </Hexagon>\r\n\r\n                             <Hexagon onClick={() => this.onClick(name_array, bool_array[2] && bool_array[3], ['Material', 'Fabrication'])} q={2} r={-1} s={0}>\r\n                               {(bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text>) :\r\n                                (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text>)}\r\n\r\n                            </Hexagon>\r\n\r\n                            <Hexagon onClick={() => this.onClick(name_array, bool_array[0], ['Function'])} q={-2} r={0} s={0}>\r\n\r\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcCount + \")\"}</tspan></text>\r\n                           </Hexagon>\r\n\r\n                           <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1], ['Function', 'BodyZones'])} q={-2} r={1} s={0}>\r\n\r\n                             {(bool_array[0] && bool_array[1]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text>) :\r\n                              (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text>)}\r\n                          </Hexagon>\r\n\r\n                          <Hexagon onClick={() => this.onClick(name_array, bool_array[1], ['BodyZones'])} q={-2} r={2} s={0}>\r\n                          <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + bodCount + \")\"}</tspan></text>\r\n\r\n                         </Hexagon>\r\n\r\n                           <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[3], ['BodyZones', 'Material'])} q={1} r={-1} s={0}>\r\n\r\n                             {(bool_array[1] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text>) :\r\n                              (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text>)}\r\n                          </Hexagon>\r\n\r\n                          <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2], ['Function', 'Fabrication'])} q={-1} r={0} s={0}>\r\n\r\n                            {(bool_array[0] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text>) :\r\n                             (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text>)}\r\n                         </Hexagon>\r\n\r\n                         <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[3], ['Function', 'BodyZones', 'Material'])} q={-1} r={-1} s={0}>\r\n\r\n                           {(bool_array[0] && bool_array[1] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>) :\r\n                            (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>)}\r\n                        </Hexagon>\r\n\r\n\r\n                        <Hexagon q={-1} r={2} s={0}>\r\n                          <Text>Contact Us</Text>\r\n                       </Hexagon>\r\n\r\n                       <Hexagon  q={1} r={1} s={0}>\r\n                         <Text>Contribute</Text>\r\n                      </Hexagon>\r\n\r\n                      <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Material', 'Fabrication'])} q={1} r={0} s={0}>\r\n\r\n                        {(bool_array[1] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text>) :\r\n                         (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text>)}\r\n                     </Hexagon>\r\n\r\n                   <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2], ['Function', 'BodyZones', 'Fabrication'])} q={-1} r={1} s={0}>\r\n\r\n                       {(bool_array[0] && bool_array[1] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text>) :\r\n                        (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text>)}\r\n                    </Hexagon>\r\n\r\n                    <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2] && bool_array[3],  ['Function', 'Material', 'Fabrication'])} q={1} r={-2} s={0}>\r\n\r\n                      {(bool_array[0] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text>) :\r\n                       (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text>)}\r\n                    </Hexagon>\r\n\r\n\r\n          </Layout>\r\n        </HexGrid>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selFunction: state.selFunction,\r\n        selBodyZones: state.selBodyZones,\r\n        selFabrication: state.selFabrication,\r\n        selMaterial: state.selMaterial,\r\n        searchData: state.searchData,\r\n\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\r\n        updateQuery: (name_array, query_param) => dispatch({type: actionTypes.UPDATE_QUERY, names: name_array, params: query_param})\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matrix);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPaneModalTab.css';\r\nimport { CustomInput, Form, FormGroup, Label } from 'reactstrap';\r\nimport * as actionTypes from '../store/actions';\r\n\r\n\r\nclass LeftPaneModalTab extends Component {\r\n\r\n\r\n    constructor(props) {\r\n       super(props);\r\n\r\n       this.state = {\r\n         curInput: '',\r\n       };\r\n    }\r\n\r\n    onSelect = (input, type) => {\r\n        if(type == 'Function') {\r\n\r\n            this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n\r\n\r\n            this.props.onSelectFunction(input);\r\n        }\r\n        else if(type == 'BodyZones') {\r\n\r\n            this.props.onSelectBodyZones(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n        else if(type == 'Fabrication') {\r\n            this.props.onSelectFabrication(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n        else {\r\n            this.props.onSelectMaterial(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    /*\r\n        Use state to save current input.\r\n        Use conditional rendering to render the selected input differently\r\n    */\r\n\r\n    render() {\r\n            let inp = '';\r\n            let curInp = this.state.curInp;\r\n\r\n            inp = this.props.subtypes.map((input) => {\r\n\r\n                return (\r\n                    <div>\r\n                    {(curInp === input) ? (\r\n                    <div style={{background: 'black', color: '#A7AFBA', fontWeight: 'bold'}} onClick={() => this.onSelect(input, this.props.type)}\r\n                    className='modalHover'\r\n                                              key={input}\r\n                     >{input}</div>) : (<div onClick={() => this.onSelect(input, this.props.type)}\r\n                     className='modalHover'\r\n                                                                                      key={input}\r\n                                                             >{input}</div>)}\r\n                                                             </div>\r\n                );\r\n            }\r\n\r\n            )\r\n            return (\r\n\r\n            <div className='leftPaneModalTabBody'>\r\n                  {inp}\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectFunction: (value) => dispatch({type: actionTypes.SELECT_FUNCTION, val: value}),\r\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\r\n        onSelectFabrication: (value) => dispatch({type: actionTypes.SELECT_FABRICATION, val: value}),\r\n        onSelectMaterial: (value) => dispatch({type: actionTypes.SELECT_MATERIAL, val: value}),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LeftPaneModalTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPane.css'\r\nimport LeftPaneModalTab from './LeftPaneModalTab';\r\n\r\nimport { Button, Fade } from 'reactstrap';\r\n\r\nclass LeftPaneModal extends Component {\r\n\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n         listArr: this.props.selArr,\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n            let funcModal = <LeftPaneModalTab style={{height: '25%'}}\r\n                                        type='Function'\r\n                                        subtypes={this.props.functions} />;\r\n\r\n            let bodyModal = <LeftPaneModalTab style={{height: '25%'}}\r\n             type='BodyZones'\r\n            subtypes={this.props.bodyZones} />;\r\n\r\n            let fabModal =  <LeftPaneModalTab style={{height: '25%'}}\r\n            type='Fabrication'\r\n            subtypes={this.props.fabrication} />;\r\n\r\n            let matModal = <LeftPaneModalTab style={{height: '25%'}}\r\n            type='Material'\r\n            subtypes={this.props.material} />;\r\n\r\n            return (\r\n\r\n\r\n            <div className=\"leftPaneModal\">\r\n\r\n                   {funcModal}\r\n                   {fabModal}\r\n                   {matModal}\r\n            </div>\r\n\r\n            );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    console.log(state.arrFunc);\r\n    return {\r\n        functions: state.arrFunc,\r\n        bodyZones: state.arrBod,\r\n        fabrication: state.arrFab,\r\n        material: state.arrMat,\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeftPaneModal);\r\n","import React, { Component } from 'react';\r\n\r\nimport { CardImg, CardBody,\r\n CardSubtitle } from 'reactstrap';\r\n\r\n import * as actionTypes from '.././store/actions';\r\n import { connect } from 'react-redux';\r\n\r\nimport './searchDisplay.css'\r\n\r\nimport { Card, Button, CardTitle, CardText, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nclass SearchDisplayTab extends Component {\r\n\r\n  updateBookmark = (name) => {\r\n\r\n    this.props.updateBookmark(name);\r\n\r\n  }\r\n  render() {\r\n\r\n    let inp = '';\r\n\r\n    inp = this.props.arr.map((input) => {\r\n\r\n\r\n      let check = this.props.bookMarks.includes(input[\"Reference Link\"]);\r\n\r\n      let wearToken = \"Wear1\";\r\n      if(parseInt(input[\"Wearability\"]) <= 10)\r\n        wearToken = \"Wear1\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 20)\r\n        wearToken = \"Wear2\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 50)\r\n        wearToken = \"Wear3\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 70)\r\n        wearToken = \"Wear4\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 100)\r\n        wearToken = \"Wear5\";\r\n\r\n      let costToken = \"$$\"\r\n\r\n      if(parseInt(input[\"costMetric\"]) > 17)\r\n        costToken = \"$$$\";\r\n      else if(parseInt(input[\"costMetric\"]) >= 6)\r\n        costToken = \"$$\";\r\n      else\r\n        costToken = \"$\";\r\n\r\n\r\n      let col = \"green\";\r\n\r\n      console.log(input[\"impMetric\"]);\r\n\r\n      if(parseInt(input[\"impMetric\"]) === 3)\r\n        col = \"red\";\r\n      else if(parseInt(input[\"impMetric\"]) === 2)\r\n        col = \"yellow\";\r\n\r\n      if(input[\"PIC ID\"] === undefined || input[\"PIC ID\"].length == 0)\r\n        return (\r\n          <div />\r\n        )\r\n\r\n      else {\r\n      return (\r\n\r\n        <div style={{marginLeft: '10px', borderWidth: \"medium\", borderStyle:\"solid\"}}>\r\n\r\n          <div className=\"bgimg\">\r\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\r\n\r\n            <img id=\"image\" src={\"ImageDatabase/\" + input[\"PIC ID\"] + \".jpg\"}  onerror={\"this.onerror=null; this.src=\" + \"ImageDatabase/\" + input[\"PIC ID\"] + \".png\"} alt=\"\" style={{height: '20vh', width: '100%', objectFit: 'cover'}}/>\r\n            </a>\r\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\r\n            <div id=\"title\" className=\"centered\">{(input[\"Reference Name\"].length < 40) ? (input[\"Reference Name\"]) : (input[\"Reference Name\"].substring(0, 40) + \"...\")}</div>\r\n            </a>\r\n            {(this.props.loggedIn) ? (<div id=\"title\" className=\"ticker\"><Input checked={check} onClick={() => this.updateBookmark(input[\"Reference Link\"])} type=\"checkbox\" />{' '}</div>) : (<div/>)}\r\n\r\n            <div id=\"title\" className=\"cost\"><div style={{backgroundColor: \"#f7f7f7\", borderRadius: \"4px\", opacity: \"0.75\"}}>{costToken}</div></div>\r\n\r\n            <div id=\"title\" className=\"imp\">\r\n                  <div style={{height: '18px', width: '18px', backgroundColor: col}}>\r\n                  </div>\r\n\r\n            </div>\r\n\r\n            <div id=\"title\" className=\"wear\">\r\n                             <img src={\"ImageDatabase/Icons/\" + wearToken + \".png\"}\r\n                              alt=\"\" style={{height: '18px', width: '18px', objectFit: \"cover\"}}/>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      )\r\n    }\r\n    });\r\n\r\n\r\n    return (\r\n      <div className=\"searchStore\">\r\n        <div className=\"leftPaneSearch\">\r\n            <div className=\"rotate1\">{this.props.type}</div>\r\n        </div>\r\n\r\n        <div style={{overflow: 'hidden'}}>\r\n          <div style={{display: 'flex', height: \"105%\", overflowX: 'scroll', overflowY: 'hidden'}}>\r\n            {inp}\r\n          </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateBookmark: (value) => dispatch({type: actionTypes.UPDATE_BOOKMARKS, val: value}),\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        bookMarks: state.bookMarks,\r\n\r\n        loggedIn: state.isLoggedIn,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplayTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './searchDisplay.css'\r\nimport SearchDisplayTab from './SearchDisplayTab'\r\nimport ListDisplayTab from './ListDisplayTab'\r\n\r\nimport { Table } from 'reactstrap';\r\n\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass SearchDisplay extends Component {\r\n\r\n\r\n  /*\r\n    Have a list view control variable in state\r\n  */\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n          filterData: [],\r\n          research: [],\r\n          tutorials: [],\r\n          aesthetics: [],\r\n          concepts: [],\r\n          listView: false,\r\n        };\r\n    }\r\n\r\n    filterFunc = (item) => {\r\n\r\n      return (item[\"Function 1\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 2\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 3\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()))\r\n    }\r\n\r\n    filterBod = (item) => {\r\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 2\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 3\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()))\r\n    }\r\n\r\n    filterFab = (item) => {\r\n      return (item[\"Fabrication 1\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()) || item[\"Fabrication 2\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()))\r\n    }\r\n\r\n    filterMat = (item) => {\r\n      return (item[\"Material 1\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 2\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 3\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()))\r\n    }\r\n\r\n    filterYear = (item) => {\r\n\r\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\r\n    }\r\n\r\n    filterVenue = (item) => {\r\n      console.log(this.props.venue);\r\n      return (this.props.venue === 'all' || item[\"Conference (VENUE)\"] === this.props.venue)\r\n    }\r\n\r\n    filterSource = (item) => {\r\n      return (this.props.source === 'both' || item[\"Source\"] === this.props.source)\r\n    }\r\n\r\n    shuffleArray = (array) => {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(this.random(i) * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n\r\n      return array;\r\n    }\r\n\r\n    random = (seed) => {\r\n      var x = Math.sin(seed++) * 10000;\r\n      return x - Math.floor(x);\r\n    }\r\n\r\n    render() {\r\n\r\n            let filterArr = this.props.allData;\r\n\r\n            if(!this.props.viewBookmarks) {\r\n                  if(!this.props.searchDisplay) {\r\n\r\n\r\n                          if(this.props.filter) {\r\n\r\n                            filterArr = filterArr.filter(this.filterYear);\r\n                            filterArr = filterArr.filter(this.filterVenue);\r\n                            filterArr = filterArr.filter(this.filterSource);\r\n                          }\r\n                            console.log(filterArr);\r\n\r\n                          if(this.props.params.includes('Function')) {\r\n                             filterArr = filterArr.filter(this.filterFunc);\r\n                          }\r\n\r\n                          if(this.props.params.includes('BodyZones')) {\r\n                             filterArr = filterArr.filter(this.filterBod);\r\n                          }\r\n                          if(this.props.params.includes('Fabrication')) {\r\n                             filterArr = filterArr.filter(this.filterFab);\r\n                          }\r\n                          if(this.props.params.includes('Material')) {\r\n                             filterArr = filterArr.filter(this.filterMat);\r\n                          }\r\n                }\r\n\r\n                else {\r\n\r\n                    filterArr = filterArr.filter((item) => {\r\n                      return item[\"Reference Name\"].toLowerCase().includes(this.props.searchQuery.toLowerCase());\r\n                  });\r\n                }\r\n          }\r\n\r\n\r\n          else {\r\n\r\n            filterArr = filterArr.filter((item) => {\r\n\r\n              return this.props.bookMarks.includes(item[\"Reference Link\"]);\r\n            });\r\n\r\n          }\r\n\r\n          let researchArr = [];\r\n          let tutorialsArr = [];\r\n          let aestheticsArr = [];\r\n          let conceptsArr = [];\r\n          let patentsArr = [];\r\n\r\n          researchArr = filterArr.filter((item) => {\r\n            return item[\"Research\"].trim() === 'x'\r\n          });\r\n\r\n          tutorialsArr = filterArr.filter((item) => {\r\n            return item[\"Tutorial\"].trim() === 'x'\r\n          });\r\n\r\n          aestheticsArr = filterArr.filter((item) => {\r\n            return item[\"Aesthetic Approach\"].trim() === 'x'\r\n          });\r\n\r\n          conceptsArr = filterArr.filter((item) => {\r\n            return item[\"Design Concepts\"].trim() === 'x'\r\n          });\r\n\r\n          patentsArr = filterArr.filter((item) => {\r\n            return item[\"Patents\"].trim() === 'x'\r\n          });\r\n\r\n\r\n          let listView = this.props.listView;\r\n          let i = 1;\r\n          let listContents = filterArr.map((item) => {\r\n            return (\r\n              <tr>\r\n                <th scope=\"row\">{i++}</th>\r\n                <td>{item[\"Reference Name\"]}</td>\r\n                <td>{item[\"Reference Link\"]}</td>\r\n              </tr>\r\n            )\r\n          })\r\n\r\n          let corLabel = \"Pinned/Bookmarks\";\r\n\r\n          if(!this.props.viewBookmarks) {\r\n\r\n            corLabel = \"\";\r\n            if(this.props.params.includes('Function'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + 'Function';\r\n              else {\r\n                corLabel = corLabel + ' + Function';\r\n              }\r\n\r\n            if(this.props.params.includes('BodyZones'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + 'BodyZones';\r\n              else {\r\n                corLabel = corLabel + ' + BodyZones';\r\n              }\r\n\r\n            if(this.props.params.includes('Fabrication'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + 'Fabrication';\r\n              else {\r\n                corLabel = corLabel + ' + Fabrication';\r\n              }\r\n\r\n            if(this.props.params.includes('Material'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + 'Material';\r\n              else {\r\n                corLabel = corLabel + '+ Material';\r\n              }\r\n          }\r\n\r\n\r\n          return (\r\n\r\n            <div style={{width: \"100vw\"}}>\r\n              {(listView) ? (<div className=\"listSearch\">\r\n                    <Table striped>\r\n                    <thead>\r\n                      <th>#</th>\r\n                      <th>Reference Name</th>\r\n                      <th>Link</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {listContents}\r\n                    </tbody>\r\n                  </Table>\r\n              </div>\r\n             ) : (\r\n               <div className=\"layoutSearch\">\r\n                     <SearchDisplayTab type='Research' arr={this.shuffleArray(researchArr)}/>\r\n                     <SearchDisplayTab type='Tutorials' arr={this.shuffleArray(tutorialsArr)}/>\r\n                     <SearchDisplayTab type='Aesthetics' arr={this.shuffleArray(aestheticsArr)}/>\r\n                     <SearchDisplayTab type='Concepts' arr={this.shuffleArray(conceptsArr)}/>\r\n                    <SearchDisplayTab type='Patents' arr={this.shuffleArray(patentsArr)}/>\r\n                    <div className=\"bottomBar\">\r\n                    <div onClick={this.props.backToSearch} className=\"backLabel\">\r\n                        <div>{\"<---- Go Back to Search\"}</div>\r\n                    </div>\r\n                      <div className=\"corLabel\">\r\n                          <div>{corLabel}</div>\r\n                      </div>\r\n                    </div>\r\n             </div>)}\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allData: state.searchData,\r\n        names: state.names,\r\n        params: state.params,\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n\r\n        listView: state.listView,\r\n\r\n        searchDisplay: state.searchTermDisplay,\r\n        searchQuery: state.searchTermQuery,\r\n\r\n        viewBookmarks: state.viewBookmarks,\r\n        bookMarks: state.bookMarks,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchDisplay);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CardImg, CardBody,\r\n CardSubtitle } from 'reactstrap';\r\n\r\nimport './searchDisplay.css'\r\n\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\n\r\nclass ListDisplayTab extends Component {\r\n\r\n  render() {\r\n\r\n    let inp = '';\r\n    let i = 1;\r\n    inp = this.props.arr.map((input) => {\r\n\r\n      return (\r\n        <tr>\r\n          <th scope=\"row\">{i++}</th>\r\n          <td>{input[\"Reference Name\"]}</td>\r\n          <td><a  href={input[\"Reference Link\"]}>{input[\"Reference Link\"]}</a></td>\r\n        </tr>\r\n    )});\r\n\r\n    return (\r\n      <div>\r\n      <h3>{this.props.type}</h3>\r\n      <Table dark>\r\n      <thead>\r\n        <tr>\r\n          <th>Number</th>\r\n          <th>Title</th>\r\n          <th>Link</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {inp}\r\n      </tbody>\r\n    </Table>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ListDisplayTab;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n\r\nclass ColCharts extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n  }\r\n\r\n  render() {\r\n\r\n    const label = this.props.label;\r\n\r\n    /*\r\n      I have search data and I have a label\r\n    */\r\n\r\n    let curList = [];\r\n    let data = [];\r\n    if(this.props.label === 'Function') {\r\n          curList = this.props.function;\r\n\r\n\r\n          curList = curList.map((subType) => {\r\n\r\n          let temp = this.props.searchData.filter((item) => {\r\n\r\n            return (item[\"Function 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n            || item[\"Function 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n            || item[\"Function 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n          });\r\n\r\n          return {name: subType, Results: temp.length}\r\n        });\r\n\r\n\r\n    data = curList;\r\n    }\r\n\r\n    else if(this.props.label === 'Fabrication') {\r\n\r\n      curList = this.props.fabrication;\r\n\r\n\r\n      curList = curList.map((subType) => {\r\n\r\n      let temp = this.props.searchData.filter((item) => {\r\n\r\n        return item[\"Fabrication 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Fabrication 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      });\r\n\r\n      return {name: subType, Results: temp.length}\r\n      });\r\n      data = curList;\r\n    }\r\n\r\n    else {\r\n\r\n      curList = this.props.material;\r\n\r\n\r\n      curList = curList.map((subType) => {\r\n\r\n      let temp = this.props.searchData.filter((item) => {\r\n\r\n        return (item[\"Material 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Material 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Material 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n      });\r\n\r\n      return {name: subType, Results: temp.length}\r\n    });\r\n\r\n\r\n      data = curList;\r\n    }\r\n\r\n\r\n    return (\r\n      <div style={{width: \"50%\", display: \"flex\"}}>\r\n\r\n      <div style={{color:\"white\", fontWeight: \"bold\"}}>{this.props.label}</div>\r\n      <div style={{transform: \"translateX(-30px)\"}}>\r\n            <BarChart width={550} height={240} data={data}\r\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n\r\n           <XAxis dataKey=\"name\"/>\r\n           <YAxis/>\r\n           <Tooltip/>\r\n           <Bar dataKey=\"Results\" fill=\"black\" />\r\n          </BarChart>\r\n    </div>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        function: state.functions,\r\n        material: state.material,\r\n        fabrication: state.fabrication,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ColCharts);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n\r\nclass BodyChart extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    let curList = [];\r\n    let data = [];\r\n\r\n    curList = this.props.bodyZones;\r\n\r\n    curList = curList.map((subType) => {\r\n\r\n    let temp = this.props.searchData.filter((item) => {\r\n\r\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      || item[\"Body Zone 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      || item[\"Body Zone 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n    });\r\n\r\n    return {name: subType, value: temp.length}\r\n  });\r\n\r\n    data = curList;\r\n    let out = {};\r\n    for(let i = 0; i < data.length; i++) {\r\n      out[data[i].name] = data[i].value;\r\n    }\r\n\r\n    console.log(out);\r\n\r\n    return (\r\n      <div style={{width: \"50%\", display: \"flex\"}}>\r\n          <div style={{color:\"white\", fontWeight: \"bold\"}}>Body Zones</div>\r\n          <div style={{transform: \"translate(20px, -30px)\", position: \"relative\"}}>\r\n              <img src={\"ImageDatabase/Icons/BodyStats.jpg\"}\r\n               alt=\"\" style={{height: '40vh', width: '25vw', objectFit: \"cover\"}}/>\r\n               <div style={{position: \"absolute\", top: \"27px\", left: \"55px\", color: \"white\", fontSize: \"small\"}}>{out[\"Head\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"56px\", left: \"55px\", color: \"white\", fontSize: \"small\"}}>{out[\"Back\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"90px\", left: \"55px\", color: \"white\", fontSize: \"small\"}}>{out[\"Chest\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"120px\", left: \"55px\", color: \"white\", fontSize: \"small\"}}>{out[\"Pelvic Region\"]}</div>\r\n               <div style={{position: \"absolute\", bottom: \"2px\", left: \"55px\", color: \"white\", fontSize: \"small\"}}>{out[\"Feet\"]}</div>\r\n\r\n               <div style={{position: \"absolute\", top: \"70px\", left: \"245px\", color: \"white\", fontSize: \"small\"}}>{out[\"Arms\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"120px\", left: \"250px\", color: \"white\", fontSize: \"small\"}}>{out[\"Wrist and Hand\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"170px\", left: \"245px\", color: \"white\", fontSize: \"small\"}}>{out[\"Legs\"]}</div>\r\n\r\n               <div style={{position: \"absolute\", top: \"100px\", right: \"10px\", color: \"white\", fontSize: \"small\"}}>{out[\"Full Body\"]}</div>\r\n\r\n           </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        bodyZones: state.bodyZones,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(BodyChart);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport 'rc-slider/assets/index.css';\r\nimport './filterBody.css'\r\nimport Slider from 'rc-slider';\r\nimport * as actionTypes from '.././store/actions';\r\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\r\nimport { ButtonDropdown, Progress, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nimport ColCharts from './ColCharts'\r\nimport BodyChart from './BodyChart'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport { Label } from 'semantic-ui-react'\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = Slider.Range;\r\n\r\nclass FilterBody extends Component {\r\n\r\n    constructor(props) {\r\n          super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n          this.state = {\r\n            dropdownOpen: false,\r\n            venue: 'All',\r\n            modal: false,\r\n          };\r\n    }\r\n\r\n    toggleStats = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n\r\n      this.props.filterToggle();\r\n\r\n    }\r\n\r\n    toggle() {\r\n     this.setState({\r\n       dropdownOpen: !this.state.dropdownOpen\r\n     });\r\n   }\r\n\r\n     onChange = (value) => {\r\n\r\n       console.log(value[1]);\r\n\r\n      this.props.filterData();\r\n      this.props.filterYear(value[0], value[1]);\r\n    }\r\n\r\n    onVenueClick = (value) => {\r\n\r\n      this.setState({\r\n        venue: value,\r\n      });\r\n\r\n      this.props.filterVenue(value);\r\n    }\r\n\r\n    onSourceClick = (value) => {\r\n      this.props.filterSource(value);\r\n    }\r\n\r\n    render() {\r\n\r\n      let venueArr = this.props.searchData;\r\n      venueArr = venueArr.map((venue) => venue[\"Conference (VENUE)\"]);\r\n\r\n      let filterEngineering = this.props.searchData.filter((item) => {\r\n        return (item[\"Source\"] === \"Engineering\" || item[\"Source\"] === \"Both\")\r\n      });\r\n\r\n      let filterFashion = this.props.searchData.filter((item) => {\r\n        return (item[\"Source\"] === \"Fashion\" || item[\"Source\"] === \"Both\")\r\n      });\r\n\r\n      let engLength = filterEngineering.length;\r\n      let fashLength = filterFashion.length;\r\n\r\n      engLength = engLength * 100 / (engLength + fashLength);\r\n      fashLength = fashLength * 100 / (fashLength + engLength);\r\n\r\n      venueArr = [...new Set(venueArr)];\r\n\r\n      venueArr = venueArr.map((venue) => {\r\n        return (\r\n          <DropdownItem onClick={() => this.onVenueClick(venue)}>{venue}</DropdownItem>\r\n        )\r\n      });\r\n\r\n      const style = { width: 400, margin: 50 };\r\n\r\n      const dataPie = [\r\n          {value: 25, color: \"black\", title: \"Function\"},\r\n          {value: 50, color: \"red\", title: \"BodyZones\"},\r\n          {value: 30, color: \"green\", title: \"Material\"},\r\n          {value: 20, color: \"blue\", title: \"Fabrication\"},\r\n      ]\r\n\r\n\r\n      let yearData = [];\r\n\r\n      for(let i = 1990; i <= 2018; i++) {\r\n\r\n        let temp = this.props.searchData.filter((item) => {\r\n\r\n          return item[\"Year\"] === i.toString();\r\n        })\r\n\r\n        yearData = [\r\n            ...yearData,\r\n            {\r\n              name: i.toString(),\r\n              Projects: temp.length,\r\n            }\r\n        ];\r\n\r\n\r\n      }\r\n\r\n        const closeBtn = <Button onClick={this.toggleStats} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n      return (\r\n          <div>\r\n              <div>Time Frame</div>\r\n              <BarChart width={280} height={150} data={yearData}\r\n                  margin={{top: 5, right: 30, left: 0, bottom: 0}}>\r\n                  <XAxis dataKey=\"name\" hide={true}/>\r\n                  <Tooltip cursor={{ stroke: 'blue', strokeWidth: 2 }}/>\r\n                  <Bar dataKey=\"Projects\" fill=\"black\" />\r\n             </BarChart>\r\n\r\n              <Range handleStyle={[{ backgroundColor: 'black'}, {backgroundColor: 'black' }]} trackStyle={[{ backgroundColor: 'grey', height: \"6px\"}]}\r\n              allowCross={false}  railStyle={{ backgroundColor: 'black' }} min={1990} max={2018} defaultValue={[1990, 2018]} onChange={(value) => this.onChange(value)} />\r\n              <div>{this.props.minYear}<span style={{float: \"right\"}}>{this.props.maxYear}</span></div>\r\n              <br />\r\n              <div>Publication Venue</div>\r\n              <ButtonDropdown style={{width:\"100%\", height: '30px'}} isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                      <DropdownToggle style={{marginBottom: \"-5px\", backgroundColor: \"white\", color: \"#9B089A\"}}caret>\r\n                        {this.state.venue}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu style={{width:\"100%\", overflowY:\"scroll\", height:\"50vh\"}}>\r\n                        {venueArr}\r\n                      </DropdownMenu>\r\n              </ButtonDropdown>\r\n              <div style={{marginTop: \"20px\", marginRight: \"20px\", marginLeft: \"20px\"}}>\r\n                {(this.props.source === \"Engineering\") ? (<Button className=\"btnSelectorClicked\" onClick={() => this.onSourceClick(\"Engineering\")}>Engineering</Button>)\r\n                  : (<Button className=\"btnSelector\" onClick={() => this.onSourceClick(\"Engineering\")}>Engineering</Button>)}\r\n                {(this.props.source === \"Fashion\") ? (<Button className=\"btnSelectorClicked\" style={{float: \"right\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)\r\n                 : (<Button className=\"btnSelector\" style={{float: \"right\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)}\r\n              </div>\r\n              <div style={{marginTop: \"10px\"}}>\r\n                % Contribution\r\n              </div>\r\n              <div style={{marginTop: '10px', marginLeft: '10px'}}>\r\n                  <Label style={{transform: \"translateY(4px)\"}} color=\"green\"  key=\"Orange\" />{' '}<span>Engineering</span>{' '}\r\n                  <Label style={{transform: \"translateY(4px)\", marginLeft: \"10px\"}} color=\"red\" key=\"red\" />{' '}<span>Fashion</span>{' '}\r\n                  <br />\r\n                  <div>\r\n                  <br />\r\n                  <Progress multi>\r\n                    <Progress bar color=\"success\" value={engLength} />\r\n                    <Progress bar color=\"danger\" value={fashLength} />\r\n                  </Progress>\r\n                  </div>\r\n              </div>\r\n\r\n              <div style={{marginTop: \"10px\"}}>\r\n                <Button onClick={this.toggleDisplay} outline color=\"secondary\">{(this.props.listView) ? (\"View Results in Original Form\") : (\"View Results in List Form\")}</Button>{' '}\r\n              </div>\r\n\r\n              {(this.props.loggedIn) ? (<div style={{marginTop: \"10px\"}}>\r\n                <Button onClick={this.toggleBookmarks} outline color=\"secondary\">{(this.props.viewBookmarks) ? (\"View all Results\") : (\"View Pinned/Bookmarks\")}</Button>{' '}\r\n              </div>) : (<div/>)}\r\n\r\n              <div style={{marginTop: \"15px\", zIndex: \"2500 !important\"}}>\r\n\r\n\r\n                      <Button outline color=\"secondary\" onClick={this.toggleStats}>Resource Statistics</Button>\r\n\r\n                      <Modal size=\"lg\" style={{maxWidth: '98vw', maxHeight: '98vh', width: '98vw', height: '98vh'}} isOpen={this.state.modal} toggle={this.toggle}>\r\n                        <ModalHeader close={closeBtn} style={{backgroundColor: \"black\", color: \"white\"}} toggle={this.toggleStats}>Resource Statistics</ModalHeader>\r\n\r\n                        <ModalBody style={{backgroundColor: \"black\"}}>\r\n\r\n                            <div style={{display: \"flex\", height: \"50%\"}}>\r\n                               <ColCharts label=\"Function\" />\r\n                               <ColCharts label=\"Material\" />\r\n                            </div>\r\n\r\n                            <div style={{display: \"flex\",height: \"50%\"}}>\r\n                               <ColCharts label=\"Fabrication\" />\r\n                               <BodyChart />\r\n                            </div>\r\n\r\n                        </ModalBody>\r\n\r\n                      </Modal>\r\n           </div>\r\n\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n    toggleDisplay = () => {\r\n\r\n      this.props.toggleDisplay();\r\n    }\r\n\r\n    toggleBookmarks = () => {\r\n\r\n      this.props.toggleBookmarks();\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        filterData: () => dispatch({type: actionTypes.FILTER_DATA}),\r\n        filterYear: (minYear, maxYear) => dispatch({type: actionTypes.FILTER_YEAR, minYear: minYear, maxYear: maxYear}),\r\n        filterVenue: (venue) => dispatch({type: actionTypes.FILTER_VENUE, val: venue}),\r\n        filterSource: (source) => dispatch({type: actionTypes.FILTER_SOURCE, val: source}),\r\n        toggleDisplay: () => dispatch({type: actionTypes.TOGGLE_DISPLAY}),\r\n        toggleBookmarks: () =>  dispatch({type: actionTypes.VIEW_BOOKMARKS}),\r\n\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n        searchData: state.searchData,\r\n        listView: state.listView,\r\n        viewBookmarks: state.viewBookmarks,\r\n\r\n        loggedIn: state.isLoggedIn,\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBody);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './filterBody.css'\r\n\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nimport FilterBody from './FilterBody';\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass FilterPane extends Component {\r\n\r\n  /*\r\n    Make a boolean in store, whether results to be displayed are from searchQuery\r\n    Store the search query itself\r\n\r\n    Define an action to store search query\r\n  */\r\n\r\n\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n      this.state = {\r\n        value: '',\r\n        popoverOpen: false,\r\n        visibility: 'visible',\r\n      };\r\n    }\r\n\r\n    toggleVisibility = () => {\r\n      if(this.state.visibility === 'visible') {\r\n        this.setState({\r\n          visibility: 'hidden',\r\n        });\r\n      }\r\n      else {\r\n        this.setState({\r\n          visibility: 'visible',\r\n        });\r\n      }\r\n\r\n      console.log(this.state.visibility);\r\n    }\r\n\r\n    toggle() {\r\n      this.setState({\r\n        popoverOpen: !this.state.popoverOpen\r\n      });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n       this.setState({value: event.target.value});\r\n     }\r\n\r\n   handleSubmit = (event) => {\r\n\r\n     this.props.toggleDisplay();\r\n     this.props.searchTermDisplayUpdate();\r\n     this.props.searchTermQueryUpdate(this.state.value);\r\n\r\n     this.setState({value: ''});\r\n     event.preventDefault();\r\n\r\n   }\r\n\r\n    render() {\r\n\r\n      let val = 'translateX(-1.2vw)';\r\n      if(this.state.popoverOpen){\r\n        val = 'translateX(-24vw)';\r\n\r\n      }\r\n\r\n      let temp = 'translate(-100px, 10px)'\r\n\r\n      //if(this.state.popoverOpen)\r\n        //temp = 'translate(-350px, 10px)'\r\n\r\n      return (\r\n\r\n          <div className={(this.props.move) ? ((!this.props.listView) ? (\"filterTabMove\") : (\"filterTabExtra\")) : (\"filterTab\")}>\r\n\r\n          <div className=\"searchBar\">\r\n          <form onSubmit={this.handleSubmit} id=\"demo-2\">\r\n            <input type=\"search\" placeholder=\"Search\" value={this.state.value} onChange={this.handleChange} />\r\n          </form>\r\n          </div>\r\n          <div style={{transform: \"translate(0, 30vh)\", padding: \"0 0 0 0\", zIndex: \"999\"}}>\r\n              <div style={{transform: val}}>\r\n                  <Button className=\"rotate6\" style={{ zIndex: \"900\", width: \"180px\", height: \"25px\", color: \"black\", borderStyle: \"solid\", borderColor: \"black\", borderWidth: \"5px\"}} outline color=\"info\" id={'PopoverFilter'}><div style={{ transform: \"translateY(-10px)\",  borderTopStyle: \"solid\", borderColor: \"black\", borderWidth: \"2px\"}}><b> - - - - - -</b></div></Button>\r\n               </div>\r\n\r\n               <Popover hideArrow={true} style={{width: '275px', color: \"black\", transform: \"translateX(-0.3vw)\", zIndex: \"10\"}} placement=\"right\" isOpen={this.state.popoverOpen} target={'PopoverFilter'} toggle={this.toggle}>\r\n                 <PopoverHeader style={{fontWeight: \"bold\"}}>Data Filter</PopoverHeader>\r\n                 <PopoverBody style={{color: \"black\", fontWeight: \"bold\", backgroundColor: \"#e0dede\"}}><FilterBody filterToggle={this.toggleVisibility} showLoop={this.props.showLoop}/></PopoverBody>\r\n               </Popover>\r\n               </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        searchTermDisplayUpdate: () => dispatch({type: actionTypes.SEARCH_TERM_DISPLAY}),\r\n        searchTermQueryUpdate: (value) => dispatch({type: actionTypes.SEARCH_TERM_QUERY, val: value}),\r\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listView: state.listView,\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPane);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\nimport ColCharts from './ColCharts'\r\nimport BodyChart from './BodyChart'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass BodyZones extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n          zone: 'none',\r\n          modal: false\r\n        };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n\r\n  clicked = (area) => {\r\n\r\n    if(this.state.name === 'none') {\r\n\r\n      this.setState({\r\n        zone: area.name\r\n      });\r\n\r\n      this.props.onSelectBodyZones(area.name);\r\n    }\r\n\r\n    else {\r\n\r\n      if(area.name != this.state.zone) {\r\n\r\n        this.setState({\r\n          zone: area.name\r\n        });\r\n\r\n        this.props.onSelectBodyZones(area.name);\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          zone: 'none'\r\n        });\r\n      }\r\n   }\r\n\t}\r\n\r\n    render() {\r\n\r\n      let img = \"ImageDatabase/HumanBody/Androgynous.png\";\r\n\r\n      if(this.state.zone === 'none')\r\n        img = \"ImageDatabase/HumanBody/Androgynous.png\";\r\n\r\n      else if(this.state.zone === 'Head')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_head.png\";\r\n\r\n      else if(this.state.zone === 'Chest')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_chest.png\";\r\n\r\n      else if(this.state.zone === 'Back')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_back.png\";\r\n\r\n      else if(this.state.zone === 'Pelvic Region')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_pelvicregion.png\";\r\n\r\n      else if(this.state.zone === 'Legs')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_legs.png\";\r\n\r\n      else if(this.state.zone === 'Feet')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_feet.png\";\r\n\r\n      else if(this.state.zone === 'Arms')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_arm.png\";\r\n\r\n      else if(this.state.zone === 'Wrist and Hand')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_handnwrist.png\";\r\n\r\n      let myMap = {\r\n          name: \"my-map\",\r\n          areas: [\r\n          {name: \"Head\", shape: \"rect\", coords: [70, 0, 110, 57], fillColor: \"transparent\"},\r\n          {name: \"Chest\", shape: \"rect\", coords: [53, 57, 90, 164], fillColor: \"transparent\"},\r\n          {name: \"Back\", shape: \"rect\", coords: [90, 57, 127, 164], fillColor: \"transparent\"},\r\n          {name: \"Pelvic Region\", shape: \"rect\", coords: [50, 168, 130, 214], fillColor: \"transparent\"},\r\n          {name: \"Legs\", shape: \"rect\", coords: [50, 214, 130, 368], fillColor: \"transparent\"},\r\n          {name: \"Feet\", shape: \"rect\", coords: [45, 368, 135, 400], fillColor: \"transparent\"},\r\n\r\n          {name: \"Arms\", shape: \"rect\", coords: [22, 67, 53, 174], fillColor: \"transparent\"},\r\n          {name: \"Arms\", shape: \"rect\", coords: [127, 67, 158, 174], fillColor: \"transparent\"},\r\n\r\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [0, 174, 30, 215], fillColor: \"transparent\"},\r\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [148, 174, 178, 215], fillColor: \"transparent\"}\r\n          ]\r\n      }\r\n\r\n            const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n            return (\r\n             <div className=\"container\">\r\n\r\n\r\n\r\n             <div style={{transform: \"translate(20px, 100px)\"}}>\r\n             <ImageMapper src={img} map={myMap} width={180} height={400}\r\n              \tonClick={area => this.clicked(area)}\r\n              />\r\n              <div style={{marginTop: \"10px\", transform: \"translateX(-1.35vw)\", color: \"#CECECE\", fontWeight: \"600\", fontSize: \"small\"}}>\r\n                  <div>CLICK ON THE</div>\r\n                  <div>BODY ZONES SELECTION</div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(BodyZones);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomePage.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport {Alert} from 'reactstrap';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nclass HomePage extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n          zone: 'none',\r\n          signUpEmail: '',\r\n          signUpUsername: '',\r\n          signUpPassword: '',\r\n          signUpWarning: '',\r\n          loginUsername: '',\r\n          loginPassword: '',\r\n          loginWarning: '',\r\n          modal: false\r\n        };\r\n\r\n      this.onSignUpEmailChange = this.onSignUpEmailChange.bind(this);\r\n      this.onSignUpUsernameChange = this.onSignUpUsernameChange.bind(this);\r\n      this.onSignUpPasswordChange = this.onSignUpPasswordChange.bind(this);\r\n      this.onSignUpWarningChange = this.onSignUpWarningChange.bind(this);\r\n\r\n      this.onLoginUsernameChange = this.onLoginUsernameChange.bind(this);\r\n      this.onLoginPasswordChange = this.onLoginPasswordChange.bind(this);\r\n      this.onLoginWarningChange = this.onLoginWarningChange.bind(this);\r\n\r\n      this.onSignUpSubmit = this.onSignUpSubmit.bind(this);\r\n      this.onLoginSubmit = this.onLoginSubmit.bind(this);\r\n  }\r\n\r\n    toggle = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n    }\r\n\r\n    onSignUpWarningChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpWarning: 'Invalid credentials',\r\n      });\r\n    }\r\n\r\n    onLoginWarningChange = (event) => {\r\n\r\n      this.setState({\r\n        loginWarning: 'Invalid credentials',\r\n      });\r\n    }\r\n\r\n    onSignUpUsernameChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpUsername: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginUsernameChange = (event) => {\r\n\r\n      this.setState({\r\n        loginUsername: event.target.value,\r\n      });\r\n    }\r\n\r\n\r\n    onSignUpEmailChange = (event) => {\r\n\r\n\r\n      this.setState({\r\n        signUpEmail: event.target.value,\r\n      });\r\n    }\r\n\r\n    onSignUpPasswordChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpPassword: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginPasswordChange = (event) => {\r\n\r\n      this.setState({\r\n        loginPassword: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginSubmit = () => {\r\n\r\n      let success = true;\r\n      let bookMarks = [];\r\n\r\n      let authSuccess = this.props.authSuccess;\r\n      let toggleDisp = this.props.toggle;\r\n\r\n      let onLoginWarningChange = this.onLoginWarningChange;\r\n\r\n      let jsonToSend = JSON.stringify({\r\n           username: this.state.loginUsername,\r\n           password: this.state.loginPassword\r\n       })\r\n\r\n       var request = new Request('https://chimerabackend.herokuapp.com/api/login/', {\r\n             method: 'POST',\r\n             headers: {\r\n               'Content-Type': 'application/json',\r\n             },\r\n             body: jsonToSend\r\n           });\r\n       fetch(request).then(function(response){\r\n\r\n          if(response.status.toString() === '200') {\r\n             response.text().then(function(text) {\r\n\r\n                 var objReceived = JSON.parse(text);\r\n                 if (objReceived.message === 'SUCCESS') {\r\n\r\n                    authSuccess(objReceived.bookmarks);\r\n                    toggleDisp();\r\n                 }\r\n                 else {\r\n\r\n                     onLoginWarningChange();\r\n\r\n                 }\r\n             })\r\n           }\r\n\r\n           else {\r\n             onLoginWarningChange();\r\n           }\r\n       })\r\n\r\n    }\r\n\r\n    onSignUpSubmit = () => {\r\n\r\n      let success = true;\r\n      let bookMarks = [];\r\n\r\n      let authSuccess = this.props.authSuccess;\r\n      let toggleDisp = this.props.toggle;\r\n\r\n      let onSignUpWarningChange = this.onSignUpWarningChange;\r\n\r\n      let jsonToSend = JSON.stringify({\r\n           username: this.state.signUpUsername,\r\n           email: this.state.signUpEmail,\r\n           password: this.state.signUpPassword\r\n       })\r\n\r\n       var request = new Request('https://chimerabackend.herokuapp.com/api/signup/', {\r\n             method: 'POST',\r\n             headers: {\r\n               'Content-Type': 'application/json',\r\n             },\r\n             body: jsonToSend\r\n           });\r\n       fetch(request).then(function(response){\r\n\r\n          if(response.status.toString() === '200') {\r\n             response.text().then(function(text) {\r\n\r\n                 var objReceived = JSON.parse(text);\r\n                 if (objReceived.message === 'SUCCESS') {\r\n\r\n                    authSuccess(objReceived.bookmarks);\r\n                    toggleDisp();\r\n                 }\r\n                 else {\r\n\r\n                     onSignUpWarningChange();\r\n\r\n                 }\r\n             })\r\n           }\r\n\r\n           else {\r\n             onSignUpWarningChange();\r\n           }\r\n       })\r\n    }\r\n\r\n    render() {\r\n\r\n      const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n      /*\r\n        Make sign up warning and login warning in store and if success, call searchDisplay or toggleSearchDisplay.\r\n        Whateva\r\n      */\r\n\r\n\r\n\r\n      return (\r\n      <div style={{backgroundImage: \"url(ImageDatabase/Icons/Home.png)\", height: \"100vh\", width:\"100vw\", backgroundSize: \"cover\", backgroundColor: \"black\"}}>\r\n\r\n         <div className=\"containerHome\">\r\n\r\n         <div style={{color: \"white\", marginLeft: \"-10vw\"}}>Welcome to Chimera, an interactive search engine for Wearables</div>\r\n\r\n         <Button outline size=\"lg\" style={{color: \"white\", marginTop: \"5vh\", marginLeft: \"2vw\", borderStyle: \"thin\", borderColor: \"white\", borderRadius: \"2px\"}} color=\"black\" onClick={this.toggle}>Enter</Button>{' '}\r\n\r\n         <Modal size=\"lg\" style={{backgroundColor: \"black\", maxWidth: '80vw',  maxHeight: '80vh', width: '82vw', height: '82vh', borderStyle: \"solid\", borderColor: \"white\", borderRadius: \"6px\"}} isOpen={this.state.modal} toggle={this.toggle}>\r\n\r\n           <ModalBody style={{backgroundColor: \"black\", color: \"white\", maxWidth: '80vw',  maxHeight: '80vh', width: '79.7vw', height: '79vh'}}>\r\n\r\n           <div style={{display: \"flex\"}}>\r\n            <div style={{width: \"30%\"}}>\r\n\r\n\r\n               <Form>\r\n                    <FormGroup>\r\n                      {(this.state.loginWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.loginWarning}</div>) : (<div></div>)}\r\n                       <Label for=\"exampleEmail\">Username</Label>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onLoginUsernameChange} value={this.state.loginUsername}/>\r\n                     </FormGroup>\r\n                     <FormGroup>\r\n                       <Label for=\"examplePassword\">Password</Label>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onLoginPasswordChange} value={this.state.loginPassword} />\r\n                     </FormGroup>\r\n\r\n                     <Button onClick={this.onLoginSubmit} style={{marginTop: \"10px\", marginLeft: \"8vw\", transform: \"translateY(100px)\"}} color=\"secondary\">Login</Button>\r\n                </Form>\r\n            </div>\r\n\r\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\r\n\r\n\r\n               <Form>\r\n                        {(this.state.signUpWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.signUpWarning}</div>) : (<div></div>)}\r\n                       <Label style={{marginTop: \"10px\"}} for=\"exampleEmail\">Username</Label>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onSignUpUsernameChange} value={this.state.signUpUsername}/>\r\n\r\n                       <Label style={{marginTop: \"10px\"}} for=\"exampleEmail\">Email</Label>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\" onChange={this.onSignUpEmailChange} value={this.state.signUpEmail}/>\r\n\r\n                       <Label style={{marginTop: \"10px\"}} for=\"examplePassword\">Password</Label>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onSignUpPasswordChange} value={this.state.signUpPassword} />\r\n\r\n                      <Button onClick={this.onSignUpSubmit} style={{marginTop: \"10px\", marginLeft: \"8vw\", transform: \"translateY(37px)\"}} color=\"secondary\">Sign Up</Button>\r\n                </Form>\r\n            </div>\r\n\r\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\r\n\r\n\r\n               <Form>\r\n                       <Label style={{marginTop: \"10px\"}} for=\"exampleEmail\">Username</Label>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\"/>\r\n\r\n                      <Button onClick={this.props.toggle} style={{marginTop: \"10vh\", marginLeft: \"8vw\", transform: \"translateY(131px)\"}} color=\"secondary\">Guest Mode</Button>\r\n                </Form>\r\n            </div>\r\n\r\n            </div>\r\n           </ModalBody>\r\n\r\n         </Modal>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        function: state.functions,\r\n        material: state.material,\r\n        fabrication: state.fabrication,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authSuccess: (value) => dispatch({type: actionTypes.AUTH_SUCCESS, val: value}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport \"react-awesome-popover/build/index.css\";\nimport { connect } from 'react-redux';\nimport LeftPane from './components/LeftPane';\nimport Matrix from './components/Matrix';\nimport LeftPaneModal from './components/LeftPaneModal';\nimport SearchDisplay from './components/SearchDisplay';\nimport FilterPane from './components/FilterPane';\nimport BodyZones from './components/BodyZones';\nimport HomePage from './components/HomePage'\nimport { Button, Fade } from 'reactstrap';\nimport Tabletop from 'tabletop';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport * as actionTypes from './store/actions';\n\nclass App extends Component {\n\n    constructor() {\n      super()\n      this.state = {\n        data: [],\n        displayHome: true,\n      }\n  }\n\n  toggleToSearch = () => {\n\n    this.setState({\n      displayHome: false,\n    })\n  }\n\n  toggleBack = () => {\n\n    this.setState({\n      displayHome: true,\n    })\n  }\n\n/*\n    1) Create a modal for login when start is clicked\n    2) Make a state variable, isLoggen in, only display bookmark related features if user is indeed logged in\n*/\n    componentDidMount() {\n\n        Tabletop.init({\n          key: '19SNEbgmJqzFkXajdTnCDN5S6-PHmqFIGoN_MCFeOMcc',\n          callback: googleData => {\n\n            let temp = googleData[\"Sheet1\"].elements;\n\n            let wearability = this.computeWearability(googleData[\"Wearability\"].elements);\n            let costmetric = this.computeCostMetric(googleData[\"Sheet1\"].elements);\n            let impMetric = this.computeImplementationMetric(googleData[\"Sheet1\"].elements);\n            for(let i = 0; i < temp.length; i++) {\n                  temp[i] = {\n                 ...temp[i],\n                 Wearability: wearability[i][\"Wearability\"],\n                 costMetric: costmetric[i][\"costMetric\"],\n                 impMetric: impMetric[i][\"impMetric\"],\n               };\n            }\n\n            console.log(temp);\n            this.props.updateSearchData(temp);\n          },\n          simpleSheet: false\n        })\n\n    }\n\n    computeImplementationMetric = (data) => {\n\n      let fabricationChart =\n      {\"laser cutting\":\t3,\"3d printing\":\t9,\"layering\": 1,\"printing\": 3,\"painting\": 3,\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 9,\"soldering\":\t3,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\n       \"knit\": 9,\"embroidery and applique\":\t9,\n       \"patchwork and patterning\": 3,\"woven\": 3,\"non woven\":\t3,\n      \"machining\":\t3,\"cut and sew\":\t1, \"joining\": 1};\n\n      let functionChart =\n        {'storage': 1, 'breathability': 3, 'energy harvesting': 9, 'feedback': 9,\n         'display': 3, 'electronic elements connections': 3, 'wireless communication': 9, 'control': 9, 'movement': 3,\n          'sensing': 3, 'protective': 1, 'magnetic': 1, 'cognitive': 9, 'modularity': 3, 'emissivity': 3,\n        'wearability': 3, 'morphology': 3, 'aesthetics': 3, 'gestures': 3};\n\n      let impMetric = [];\n\n      for(let i = 0; i < data.length; i++) {\n\n          let fabScore = 0;\n          let funcScore = 0;\n\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\n            fabScore += fabricationChart[data[i][\"Fabrication 1\"]];\n          }\n\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\n            fabScore += fabricationChart[data[i][\"Fabrication 2\"]];\n          }\n\n          if(data[i][\"Function 1\"].toLowerCase() in functionChart) {\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 1\"]]);\n          }\n\n          if(data[i][\"Function 2\"].toLowerCase() in functionChart) {\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 2\"]]);\n          }\n\n          if(data[i][\"Function 3\"].toLowerCase() in functionChart) {\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 3\"]]);\n          }\n\n          let temp = fabScore * funcScore;\n\n          let ans = 1;\n          if(temp <= 12)\n            ans = 1;\n          else if(temp > 12 && temp < 54)\n            ans = 2;\n          else {\n            ans = 3;\n          }\n\n          impMetric[i] = {\"impMetric\": ans};\n      }\n\n\n      return impMetric;\n\n\n  }\n\n    computeCostMetric = (data) => {\n\n      let fabricationChart =\n      {\"laser cutting\":\t9,\"3d printing\":\t9,\"layering\": 3,\"printing\": 3,\"painting\": 3,\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 3,\"soldering\":\t1,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\n       \"knit\": 1,\"embroidery and applique\":\t3,\n       \"patchwork and patterning\": 3,\"woven\": 9,\"non woven\":\t9,\n       \"machining\":\t9,\"cut and wew\":\t1, \"joining\": 3};\n\n\n      /*\n        INKS AND FINISHES\n      */\n      let materialChart =\n      {\n          \"conductive inks\": 3,\n          \"polymers\": 9,\n          \"molding materials\": 9,\n          \"threads\": 1,\n          \"conductive threads\":\t3,\n          \"adhesives\": 3,\n          \"paper and cardboard\": 1,\n          \"electronics\": 9,\n          \"textiles and composites\": 1,\n          \"hide\":\t1,\n          \"hardware\": 1,\n          \"organic materials\": 9,\n          \"inks & finishes\": 0,\n          \"metal\": 3,\n          \"shape memory alloy\": 9\n      };\n\n      let costMetric = [];\n\n      for(let i = 0; i < data.length; i++) {\n\n          let fabScore = 0;\n          let matScore = 0;\n\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 1\"]]);\n          }\n\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 2\"]]);\n          }\n\n          if(data[i][\"Material 1\"].toLowerCase() in materialChart) {\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 1\"]]);\n          }\n\n          if(data[i][\"Material 2\"].toLowerCase() in materialChart) {\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 2\"]]);\n          }\n\n          if(data[i][\"Material 3\"].toLowerCase() in materialChart) {\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 3\"]]);\n          }\n\n          costMetric[i] = {\"costMetric\": fabScore + matScore};\n      }\n      return costMetric;\n    }\n\n    computeWearability = (wearability) => {\n\n      wearability = wearability.map((item) => {\n\n        let count = 0\n        let totalCount = 50\n\n        let attachScore = item[\"Attachment to the Body\"];\n\n        switch (attachScore) {\n\n            case \"Threads\":\n              attachScore = 5;\n              break;\n            case \"Velcro\":\n              attachScore = 3;\n              break;\n            case \"Adhesives\":\n               attachScore = 4;\n              break;\n            case \"Embedded\":\n              attachScore = 2;\n              break;\n            case \"Straps\":\n              attachScore = 1;\n              break;\n            case \"Clips\":\n              attachScore = 4;\n              break;\n            default:\n              attachScore = 0;\n              totalCount = totalCount - 5;\n\n        }\n\n        let mainScore = item[\"Maintenance required\"];\n\n        if(isNaN(mainScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n\n          count += parseInt(mainScore);\n        }\n\n        let actScore = item[\"activity obstruction\"];\n\n        if(isNaN(actScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(actScore);\n        }\n\n        let intScore = item[\"Integration (form and size)\"];\n\n        if(isNaN(intScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(intScore);\n        }\n\n        let conScore = item[\"Context\"];\n\n        if(isNaN(conScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(conScore);\n        }\n\n        let aesScore = item[\"Aesthetics\"];\n\n        if(isNaN(aesScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(aesScore);\n        }\n\n        return {\"Wearability\": ((count / totalCount) * 100).toFixed(2)}\n      })\n\n      return wearability;\n    }\n\n  displayMatrix = () => {\n    this.setState({\n      displayHome: false,\n    });\n  }\n\n    render() {\n\n        return (\n          <BrowserRouter>\n          {(this.state.displayHome) ? (<HomePage toggle={this.toggleToSearch} />) : ((!this.props.searchDisplay) ? (<div className=\"layout\">\n             <LeftPane />\n             <LeftPaneModal />\n             <Matrix />\n             <BodyZones />\n             <FilterPane move={false} showLoop={true}/>\n          </div>) : (<div className=\"layout\"><SearchDisplay backToSearch={this.props.updateSearchDisplay}/>\n          <FilterPane move={true} showLoop={true}/></div>)\n        )}\n        </BrowserRouter>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchDisplay: state.searchDisplay,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateSearchData: (value) => dispatch({type: actionTypes.UPDATE_DATA, value: value}),\n        updateSearchDisplay: () => dispatch({type: actionTypes.REMOVE_SEARCH_DISPLAY})\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducers/index'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = reducer;\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}