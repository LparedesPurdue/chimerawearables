{"version":3,"sources":["store/reducers/index.js","store/actions.js","components/LeftPanePopoverTab.js","components/LeftPaneTab.js","components/LeftPane.js","components/Matrix.js","components/LeftPaneModalTab.js","components/LeftPaneModal.js","components/SearchDisplayTab.js","components/SearchDisplay.js","components/ListDisplayTab.js","components/ColCharts.js","components/BodyChart.js","components/FilterBody.js","components/FilterPane.js","components/ContributePage.js","components/BodyZones.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","searchDisplay","searchData","names","params","listDisplay","viewCount","searchTermDisplay","searchTermQuery","currentFilteredArray","filter","minYear","maxYear","venueFilter","sourceFilter","categories","functions","bodyZones","fabrication","material","arrFunc","arrBod","arrFab","arrMat","selFunction","selBodyZones","selFabrication","selMaterial","showFunc","showBod","showFab","showMat","bookMarks","viewBookmarks","isLoggedIn","reducer","state","action","type","val","value","listView","temp","index","indexOf","splice","push","jsonToSend","JSON","stringify","username","password","bookmarks","request","Request","method","headers","body","fetch","then","response","status","toString","text","parse","message","console","log","valName","valPassword","LeftPanePopoverTab","props","onClick","subtype","tempArr","listArr","includes","setState","onSelect","onSelectSubType","onSelFunction","onSelBodyZones","onSelFabrication","onSelMaterial","input","curInp","onSelectFunction","onSelectBodyZones","onSelectFabrication","onSelectMaterial","selArr","inp","this","subtypes","sort","unshift","map","key","className","name","id","label","style","width","color","backgroundColor","Component","connect","dispatch","LeftPaneTab","toggle","popoverOpen","popoverFunc","popoverBod","popoverFab","popoverMat","arr","myVal","src","alt","UncontrolledPopover","hideArrow","modifiers","offset","trigger","target","PopoverBody","padding","transform","LeftPane","onShowFunction","onShowBodyZones","onShowFabrication","onShowMaterial","listItems","i","tempList","item","listItem","clicked","Matrix","name_array","bool_param","query_param_array","updateQuery","toggleDisplay","filterYear","filterVenue","venue","toLowerCase","filterSource","source","filterArr","bool_array","funcCount","length","trim","fabCount","matCount","bodCount","funcBodCount","matBodCount","fabBodCount","fabFuncCount","matFuncCount","matFabCount","matFabFuncCount","curMatFabFuncCount","matFabBodCount","curMatFabBodCount","funcFabBodCount","curFuncFabBodCount","funcMatBodCount","curFuncMatBodCount","allCount","curAllCount","w_f","window","innerWidth","h_f","innerHeight","height","viewBox","size","x","y","flat","spacing","origin","q","r","s","textAnchor","dy","fill","cellStyle","stroke","strokeWidth","transition","query_param","LeftPaneModalTab","curInput","LeftPaneModal","SearchDisplayTab","toggleCost","tooltipOpenCost","toggleImp","tooltipOpenImp","toggleWear","tooltipOpenWear","updateBookmark","substring","bind","item1","document","getElementById","item2","item3","item4","item5","addEventListener","e","deltaX","getBoundingClientRect","bottom","scrollLeft","deltaY","check","parseInt","href","onError","error","objectFit","loggedIn","Input","checked","count","display","flexWrap","SearchDisplay","filterFunc","filterBod","filterFab","filterMat","shuffleArray","array","j","Math","floor","random","seed","sin","filterData","research","tutorials","aesthetics","concepts","allData","searchQuery","filteredArrayUpdate","researchArr","tutorialsArr","aestheticsArr","conceptsArr","patentsArr","listContents","scope","corLabel","Table","striped","backToSearch","fontSize","ColCharts","data","function","subType","Results","fillColor","w","h","fontWeight","margin","top","right","left","dataKey","cursor","BodyChart","out","position","Range","Slider","createSliderWithTooltip","FilterBody","toggleStats","prevState","modal","filterToggle","toggleMetrics","metricsModal","onChange","onVenueClick","split","onSourceClick","toggleBookmarks","dropdownOpen","showLabels","sourceInit","venueArr","mainPage","curSearchData","myData","filterEngineering","filterFashion","engLength","fashLength","Set","DropdownItem","yearData","Projects","closeBtn","Button","closeBtnMetrics","marginTop","hide","handleStyle","trackStyle","allowCross","railStyle","min","max","defaultValue","float","ButtonDropdown","isOpen","DropdownToggle","caret","DropdownMenu","overflowY","textAlign","marginLeft","zIndex","Modal","maxWidth","maxHeight","ModalHeader","close","ModalBody","FilterPane","toggleVisibility","visibility","handleChange","event","handleSubmit","searchTermDisplayUpdate","searchTermQueryUpdate","preventDefault","toggleHome","toggleBack","move","toggleMainDisplay","logout","popVal","placement","PopoverHeader","showLoop","showView","ContributePage","onAChange","wearability","onBChange","electronicIntegration","onCChange","maintainence","onDChange","context","onEChange","activity","onFChange","aesthetic","onTitleChange","title","onLinkChange","link","onMainpageChange","mainpage","handleResCatChange","res","resourceCategorization","handleSourceChange","onYearChange","year","onVenueChange","onFabChange","fab","onMatChange","mat","onFuncChange","func","handleClicks2","area","clickTimeout","doubleClicked","clearTimeout","setTimeout","zone","Object","assign","tempResat","toggleFab","toggleMat","toggleFunc","dropdownOpenFab","dropdownOpenMat","dropdownOpenFunc","img","myMap2","areas","shape","coords","fabList","fabricationList","matList","materialList","funcList","functionList","borderRadius","borderTop","paddingTop","borderWidth","Dropdown","minHeight","placeholder","fluid","multiple","selection","options","borderLeft","BodyZones","toggle2","modal2","componentWillMount","handleClicks","myMap","closeBtn2","strokeColor","HomePage","onSignUpWarningChange","signUpWarning","onLoginWarningChange","loginWarning","onSignUpUsernameChange","signUpUsername","onLoginUsernameChange","loginUsername","onSignUpEmailChange","signUpEmail","onSignUpPasswordChange","signUpPassword","onLoginPasswordChange","loginPassword","onGoogleLoginSubmit","email","authSuccess","toggleDisp","onGoogleSignUpSubmit","pwd","objReceived","onLoginSubmit","responseGoogle","profileObj","responseGoogleError","onSignUpSubmit","backgroundSize","Form","clientId","buttonText","onSuccess","onFailure","cookiePolicy","valuename","valuepass","App","toggleToSearch","displayHome","computeImplementationMetric","fabricationChart","functionChart","impMetric","fabScore","funcScore","ans","computeCostMetric","materialChart","costMetric","matScore","computeWearability","totalCount","attachScore","mainScore","isNaN","actScore","intScore","conScore","aesScore","toFixed","displayMatrix","Tabletop","init","callback","googleData","elements","costmetric","Wearability","updateSearchData","simpleSheet","updateViewCount","counter","updateSearchDisplay","views","Boolean","location","hostname","match","rootReducer","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba1f06c9.chunk.js","sourcesContent":["import * as actionTypes from '../actions';\n\nconst initialState = {\n\n    searchDisplay: false,\n    searchData: [],\n    names: [],\n    params: [],\n\n    listDisplay: false,\n\n    viewCount: 0,\n\n    searchTermDisplay: false,\n    searchTermQuery: '',\n\n    currentFilteredArray: [],\n\n    filter: true,\n    minYear: 1990,\n    maxYear: 2019,\n    venueFilter: 'All',\n    sourceFilter: 'Both',\n\n    categories: ['Function', 'BodyZones', 'Fabrication', 'Material'],\n    functions: ['Storage', 'Breathability', 'Energy Harvesting', 'Feedback',\n     'Display', 'Electronic Connections', 'Wireless Communication', 'Control', 'Movement',\n      'Sensing', 'Protective', 'Cognitive', 'Modularity', 'Emissivity',\n       'Morphology', 'Aesthetics', 'Gestures', 'Studies', 'Interfaces', 'Skins', 'Interactions'],\n    bodyZones: ['Head', 'Chest', 'Pelvic Region', 'Arms', 'Legs',\n    'Wrist and Hand', 'Back', 'Full Body', 'Feet'],\n    fabrication: ['Stiching/Sewing', 'Laser Cutting', '3D Printing',\n     'Layering', 'Printing', 'Sticking', 'Heat Transfer',\n      'Soldering', 'Origami', 'Molding and Casting', 'Pleating and Folding',\n      'Knit', 'Embroidery and Applique', 'Quilting',\n      'Patchwork and Pattering', 'Woven', 'Machining', 'Painting'],\n    material: ['Illumination', 'Conductive Inks', 'Polymers', 'Molding Materials',\n    'Threads', 'Conductive Threads','Adhesives', 'Paper and Cardboard', 'Electronics',\n    'Textile and Composites', 'Hardware', 'Organic Materials',\n    'Regular Inks', 'Metal', 'Shape Memory Alloy'],\n\n    arrFunc: [],\n    arrBod: [],\n    arrFab: [],\n    arrMat: [],\n\n    selFunction: '',\n    selBodyZones: '',\n    selFabrication: '',\n    selMaterial: '',\n\n    showFunc: false,\n    showBod: false,\n    showFab: false,\n    showMat: false,\n\n    bookMarks: [],\n    viewBookmarks: false,\n\n    isLoggedIn: false,\n};\n\nconst reducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case actionTypes.SELECT_FUNCTION:\n            return {\n                ...state,\n                selFunction: action.val\n            }\n        case actionTypes.SELECT_BODYZONES:\n            return {\n                ...state,\n                selBodyZones: action.val\n            }\n        case actionTypes.SELECT_FABRICATION:\n            return {\n                ...state,\n                selFabrication: action.val\n            }\n        case actionTypes.SELECT_MATERIAL:\n             return {\n                 ...state,\n                 selMaterial: action.val\n             }\n        case actionTypes.SHOW_FUNC:\n            return {\n              ...state,\n              showFunc: !(state.showFunc)\n            }\n        case actionTypes.SHOW_BOD:\n            return {\n                ...state,\n                showBod: !(state.showBod)\n            }\n        case actionTypes.SHOW_FAB:\n           return {\n               ...state,\n               showFab: !(state.showFab)\n           }\n        case actionTypes.SHOW_MAT:\n           return {\n               ...state,\n               showMat: !(state.showMat)\n           }\n\n        case actionTypes.PRE_SELECT_FUNC:\n           return {\n                ...state,\n                arrFunc: [...action.value]\n           }\n\n        case actionTypes.PRE_SELECT_BOD:\n\n           return {\n                ...state,\n                arrBod: [...action.value]\n           }\n\n        case actionTypes.PRE_SELECT_FAB:\n           return {\n                ...state,\n                arrFab: [...action.value]\n           }\n\n        case actionTypes.PRE_SELECT_MAT:\n           return {\n                ...state,\n                arrMat: [...action.value]\n           }\n        case actionTypes.UPDATE_DATA:\n          return {\n            ...state,\n            searchData: [...action.value]\n          }\n          case actionTypes.SEARCH_DISPLAY:\n            return {\n              ...state,\n              searchDisplay: true,\n            }\n\n          case actionTypes.REMOVE_SEARCH_DISPLAY:\n          return {\n            ...state,\n            searchDisplay: false,\n            searchTermDisplay: false,\n          }\n\n          case actionTypes.UPDATE_QUERY:\n            return {\n              ...state,\n              names: [...action.names],\n              params: [...action.params]\n            }\n          case actionTypes.FILTER_DATA:\n            return {\n              ...state,\n              filter: true,\n            }\n          case actionTypes.FILTER_YEAR:\n            return {\n              ...state,\n              minYear: action.minYear,\n              maxYear: action.maxYear,\n            }\n          case actionTypes.FILTER_VENUE:\n            return {\n              ...state,\n              venueFilter: action.val,\n            }\n          case actionTypes.FILTER_SOURCE:\n            return {\n              ...state,\n              sourceFilter: action.val,\n            }\n          case actionTypes.TOGGLE_DISPLAY:\n            return {\n              ...state,\n              listView: (!state.listView),\n            }\n          case actionTypes.SEARCH_TERM_DISPLAY:\n            return  {\n              ...state,\n              searchTermDisplay: true,\n            }\n          case actionTypes.SEARCH_TERM_QUERY:\n            return {\n              ...state,\n              searchTermQuery: action.val,\n            }\n          case actionTypes.UPDATE_BOOKMARKS:\n\n              let temp = [...state.bookMarks];\n\n              var index = temp.indexOf(action.val);\n\n              if (index > -1) {\n                 temp.splice(index, 1);\n              }\n\n              else {\n                temp.push(action.val);\n              }\n\n              let jsonToSend = JSON.stringify({\n                   username: state.username,\n                   password: state.password,\n                   bookmarks: temp\n               })\n\n              var request = new Request('https://chimerabackend.herokuapp.com/api/editPreferences/', {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                    body: jsonToSend\n                  });\n                  fetch(request).then(function(response){\n\n                     if(response.status.toString() === '200') {\n                        response.text().then(function(text) {\n\n                            var objReceived = JSON.parse(text);\n                            if (objReceived.message === 'SUCCESS') {\n\n                               console.log(\"Updated\");\n                            }\n\n                        })\n                      }\n                  })\n\n              return {\n                ...state,\n                bookMarks: temp,\n              }\n\n          case actionTypes.VIEW_BOOKMARKS: {\n\n            return {\n              ...state,\n              viewBookmarks: (!state.viewBookmarks),\n            }\n\n          }\n\n          case actionTypes.AUTH_SUCCESS: {\n\n            console.log(action);\n            return {\n              ...state,\n              isLoggedIn: true,\n              username: action.valName,\n              password: action.valPassword,\n              bookMarks: action.val\n            }\n          }\n\n          case actionTypes.AUTH_FAILURE: {\n\n            return {\n              ...state,\n              isLoggedIn: false,\n              arrFunc: [],\n              arrBod: [],\n              arrFab: [],\n              arrMat: [],\n\n              selFunction: '',\n              selBodyZones: '',\n              selFabrication: '',\n              selMaterial: '',\n\n              showFunc: false,\n              showBod: false,\n              showFab: false,\n              showMat: false,\n\n              bookMarks: [],\n              viewBookmarks: false,\n            }\n          }\n\n          case actionTypes.STORE_FILTERED_ARRAY: {\n\n            return {\n              ...state,\n              currentFilteredArray: action.val,\n            }\n          }\n\n          case actionTypes.VIEW_COUNTER: {\n\n            return {\n              ...state,\n              viewCount: action.val,\n            }\n          }\n    }\n    return state;\n};\n\nexport default reducer;\n","export const SELECT_FUNCTION = 'SELECT_FUNCTION';\nexport const SELECT_BODYZONES = 'SELECT_BODYZONES';\nexport const SELECT_FABRICATION = 'SELECT_FABRICATION';\nexport const SELECT_MATERIAL = 'SELECT_MATERIAL';\n\nexport const SHOW_FUNC = 'SHOW_FUNC';\nexport const SHOW_BOD = 'SHOW_BOD';\nexport const SHOW_FAB = 'SHOW_FAB';\nexport const SHOW_MAT = 'SHOW_MAT';\n\nexport const PRE_SELECT_FUNC = 'PRE_SELECT_FUNC';\nexport const PRE_SELECT_BOD = 'PRE_SELECT_BOD';\nexport const PRE_SELECT_FAB = 'PRE_SELECT_FAB';\nexport const PRE_SELECT_MAT = 'PRE_SELECT_MAT';\n\nexport const UPDATE_DATA = 'UPDATE_DATA';\nexport const SEARCH_DISPLAY = 'SEARCH_DISPLAY';\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\n\nexport const FILTER_DATA = 'FILTER_DATA';\nexport const FILTER_YEAR = 'FILTER_YEAR';\nexport const FILTER_VENUE = 'FILTER_VENUE';\nexport const FILTER_SOURCE = 'FILTER_SOURCE';\n\nexport const TOGGLE_DISPLAY = 'TOGGLE_DISPLAY';\n\nexport const SEARCH_TERM_DISPLAY = 'SEARCH_TERM_DISPLAY';\nexport const SEARCH_TERM_QUERY = 'SEARCH_TERM_QUERY';\n\nexport const UPDATE_BOOKMARKS = 'UPDATE_BOOKMARKS';\nexport const VIEW_BOOKMARKS = 'VIEW_BOOKMARKS';\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\n\nexport const REMOVE_SEARCH_DISPLAY = 'REMOVE_SEARCH_DISPLAY';\n\nexport const STORE_FILTERED_ARRAY = 'STORE_FILTERED_ARRAY';\n\nexport const VIEW_COUNTER = 'VIEW_COUNTER';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './leftPanePopoverTab.css';\nimport { Button, CustomInput, Form, FormGroup, Label } from 'reactstrap';\nimport { PopoverHeader } from 'reactstrap';\nimport * as actionTypes from '../store/actions';\n\n\nclass LeftPanePopoverTab extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n         listArr: this.props.selArr,\n         curInp: this.props.selArr[0],\n        };\n    }\n\n    onClick = (subtype) => {\n\n\n        let tempArr = [];\n\n        if(this.state.listArr.includes(subtype)) {\n\n            tempArr = [];\n        }\n\n        else {\n            tempArr.push(subtype);\n        }\n\n        this.setState({\n\n            listArr: tempArr,\n        });\n\n        this.onSelect(tempArr);\n        this.onSelectSubType(subtype, this.props.type);\n\n\n    }\n\n\n    onSelect = (tempArr) => {\n\n            //this.props.types and this.state.listArr\n            let type = this.props.type;\n\n             if(type === 'Function') {\n\n                 this.props.onSelFunction(tempArr);\n             }\n             else if(type === 'BodyZones') {\n                 this.props.onSelBodyZones(this.state.listArr);\n             }\n             else if(type === 'Fabrication') {\n                 this.props.onSelFabrication(tempArr);\n             }\n             else {\n                 this.props.onSelMaterial(tempArr);\n             }\n\n             //this.props.toggle();\n    }\n\n    onSelectSubType = (input, type) => {\n\n        if(input === this.state.curInp)\n          input = '';\n        if(type == 'Function') {\n\n            this.setState({\n               curInp: input,\n            });\n\n          console.log(input);\n        this.props.onSelectFunction(input);\n        }\n        else if(type == 'BodyZones') {\n\n            this.props.onSelectBodyZones(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n        else if(type == 'Fabrication') {\n\n            this.props.onSelectFabrication(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n        else {\n            this.props.onSelectMaterial(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n    };\n\n\n    render() {\n\n            let inp = this.props.subtypes;\n\n            inp = inp.sort();\n\n            let index = inp.indexOf(\"All \" + this.props.type + \"s\");\n            if (index > -1) {\n               inp.splice(index, 1);\n            }\n            inp.unshift(\"All \" + this.props.type + \"s\");\n\n            let selArr = this.state.listArr;\n            inp = inp.map((input) => {\n\n                return (\n\n                    <div key={this.props.key}>\n                     {(selArr.includes(input)) ? (\n                       <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBodySelected'\n                          name=\"customRadio\"\n\n                          id={input}\n                          label={input}>{input}</div>\n                        ) : (\n                          <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBody'\n                          name=\"customRadio\" key={input} id={input}\n                                    label={input}>{input}</div>\n                        )}\n                     </div>\n\n\n                );\n            }\n            )\n            return (\n                <div>\n                        <div style={{width: '100%', color: \"white\", backgroundColor: \"black\"}}>\n                          {inp}\n                        </div>\n              </div>\n\n\n            );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSelFunction: (value) => dispatch({type: actionTypes.PRE_SELECT_FUNC, value: value}),\n        onSelBodyZones: (value) => dispatch({type: actionTypes.PRE_SELECT_BOD, value: value}),\n        onSelFabrication: (value) => dispatch({type: actionTypes.PRE_SELECT_FAB, value: value}),\n        onSelMaterial: (value) => dispatch({type: actionTypes.PRE_SELECT_MAT, value: value}),\n\n        onSelectFunction: (value) => dispatch({type: actionTypes.SELECT_FUNCTION, val: value}),\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\n        onSelectFabrication: (value) => dispatch({type: actionTypes.SELECT_FABRICATION, val: value}),\n        onSelectMaterial: (value) => dispatch({type: actionTypes.SELECT_MATERIAL, val: value}),\n\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(LeftPanePopoverTab);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './leftPaneTab.css'\n\nimport LeftPanePopoverTab from './LeftPanePopoverTab';\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nclass LeftPaneTab extends Component {\n\n    constructor(props) {\n       super(props);\n\n\n\n       this.state = {\n         popoverFunc: false,\n         popoverBod: false,\n         popoverFab: false,\n         popoverMat: false,\n         popoverOpen: false,\n       };\n\n    }\n\n     toggle = (name) => {\n       this.setState({\n         popoverOpen: !this.state.popoverOpen\n       });\n     }\n\n\n   render() {\n\n\n            let type = this.props.name;\n\n            let arr = [];\n            let selArr = [];\n\n            if(type === 'Function') {\n                arr = this.props.functions;\n                selArr = this.props.arrFunc;\n            }\n            else if(type === 'BodyZones') {\n                arr = this.props.bodyZones;\n                selArr = this.props.arrBod;\n            }\n            else if(type === 'Fabrication') {\n                arr = this.props.fabrication;\n                selArr = this.props.arrFab;\n            }\n            else {\n                arr = this.props.material;\n                selArr = this.props.arrMat;\n            }\n\n            let backgroundCol = \"rgb(172, 216, 206)\";\n            let borderCol = \"rgb(110, 169, 155)\";\n            let myVal = \"funcColor\";\n\n            if(this.props.name === \"Material\") {\n                backgroundCol = \"rgb(254, 205, 102)\";\n                borderCol = \"rgb(254, 172, 0)\";\n                myVal = \"matColor\";\n            }\n\n            else if(this.props.name === \"Fabrication\") {\n              backgroundCol = \"rgb(133, 194, 219)\";\n              borderCol = \"rgb(0, 181, 254)\";\n              myVal = \"fabColor\";\n            }\n\n\n\n            //console.log(store.getState());\n            return (\n\n             <div id={'Popover-'+this.props.name} className={myVal}>\n\n                 <div className=\"rotate5 move\">{this.props\n                 .name}\n                 </div>\n\n\n                 <img id=\"image\" src={\"ImageDatabase/Icons/\" + this.props.name + \".png\"}\n                  alt=\"\" className=\"imgStyle\"/>\n\n                         <UncontrolledPopover style={{ backgroundColor: \"black\"}} hideArrow={true} modifiers={{offset: '-5vw'}} trigger=\"legacy\" target={'Popover-'\n                         +\n\n                         this\n                         .props\n                         .name}>\n\n            \n                               <PopoverBody style={{padding: '0', color: \"#A7AFBA\", backgroundColor: \"black\", transform: \"translateX(-4.8%)\"}}><LeftPanePopoverTab\n                                                        type={this.props.name}\n                                                        subtypes={arr}\n                                                         selArr={selArr}\n                                                         toggle={this.toggle}\n                                                         key={this.props.key}/>\n                          </PopoverBody>\n\n                         </UncontrolledPopover>\n\n            </div>\n\n        );\n   }\n}\n\nconst mapStateToProps = state => {\n    return {\n        functions: state.functions,\n        bodyZones: state.bodyZones,\n        fabrication: state.fabrication,\n        material: state.material,\n\n        showFunc: state.showFunc,\n        showBod: state.showBod,\n        showFab: state.showFab,\n        showMat: state.showMat,\n\n        arrFunc: state.arrFunc,\n        arrBod: state.arrBod,\n        arrFab: state.arrFab,\n        arrMat: state.arrMat,\n    }\n};\n\nexport default connect(mapStateToProps)(LeftPaneTab);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './leftPane.css'\nimport LeftPaneTab from './LeftPaneTab';\n\nimport * as actionTypes from '../store/actions';\n\nclass LeftPane extends Component {\n\n    onClick = (type) => {\n\n\n\n         if(type === 'Function') {\n\n             this.props.onShowFunction();\n         }\n         else if(type === 'BodyZones') {\n             this.props.onShowBodyZones();\n         }\n         else if(type === 'Fabrication') {\n             this.props.onShowFabrication();\n         }\n         else {\n             this.props.onShowMaterial();\n         }\n    };\n\n    render() {\n\n           let listItems = '';\n           let i = 0;\n\n           let tempList = this.props.categories;\n           tempList = tempList.filter((item) => {\n             return item !== 'BodyZones'\n           })\n           listItems = tempList.map((listItem) => {\n                return (\n                    <LeftPaneTab key={i++} name={listItem} clicked={this.onClick} />\n                )\n            });\n\n            return (\n\n             <div className=\"leftPaneBody\">\n                {listItems}\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        categories: state.categories,\n        searchData: state.searchData\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onShowFunction: () => dispatch({type: actionTypes.SHOW_FUNC}),\n        onShowBodyZones: () => dispatch({type: actionTypes.SHOW_BOD}),\n        onShowFabrication: () => dispatch({type: actionTypes.SHOW_FAB}),\n        onShowMaterial: () => dispatch({type: actionTypes.SHOW_MAT}),\n\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftPane);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './matrix.css'\nimport './matrixSVG.css'\nimport { GridGenerator, HexGrid, Layout, Path, Hexagon, Text, Pattern, Hex } from 'react-hexgrid';\n\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\n\nimport * as actionTypes from '.././store/actions';\n\nclass Matrix extends Component {\n\n    onClick = (name_array, bool_param, query_param_array) => {\n\n        if(bool_param) {\n\n          this.props.updateQuery(name_array, query_param_array);\n          this.props.toggleDisplay();\n        }\n    };\n\n    /*\n\n      For every hexagon:\n\n        1) When clickable:\n\n            For that specific query, determine how many entries are there in the database.\n\n            For the 4 base types\n\n\n        2) When not clickable:\n\n              For all fifteen hexagons I need to calculate number of corresponding inputs.\n              Basically like for function, check if entry has X in any of func1-3. look over every entry and maintain\n              a boolean for all 4 parameters. and then increae counts depending on either of the 15 cases\n              For function + material, check both similars\n    */\n\n    render() {\n\n            let filterArr = this.props.searchData;\n\n            if(this.props.filter) {\n\n              filterArr = filterArr.filter(this.filterYear);\n              filterArr = filterArr.filter(this.filterVenue);\n              filterArr = filterArr.filter(this.filterSource);\n            }\n\n            let name_array = [];\n            name_array[0] = 'Function';\n            name_array[1] = 'BodyZones';\n            name_array[2] = 'Fabrication';\n            name_array[3] = 'Material'\n\n            let bool_array = [];\n            bool_array.push(false);\n            bool_array.push(false);\n            bool_array.push(false);\n            bool_array.push(false);\n\n            if(this.props.selFunction !== '') {\n                bool_array[0] = true;\n                name_array[0] = this.props.selFunction;\n              }\n\n            if(this.props.selBodyZones !== '') {\n                bool_array[1] = true;\n                name_array[1] = this.props.selBodyZones;\n            }\n\n            if(this.props.selFabrication !== '') {\n                bool_array[2] = true;\n                name_array[2] = this.props.selFabrication;\n            }\n\n            if(this.props.selMaterial !== '') {\n                bool_array[3] = true;\n                name_array[3] = this.props.selMaterial;\n            }\n\n            let funcCount = filterArr.filter((item) => {\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n            });\n            funcCount = funcCount.length;\n\n            if(bool_array[0] && !name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              let curFuncCount = filterArr.filter((item) => {\n                return item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n              });\n              funcCount = curFuncCount.length;\n            }\n\n            let fabCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n            });\n            fabCount = fabCount.length;\n\n            if(bool_array[2] && !name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              let curFabCount = filterArr.filter((item) => {\n                return item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n              });\n              fabCount = curFabCount.length;\n            }\n\n            let matCount = filterArr.filter((item) => {\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n            });\n            matCount = matCount.length;\n\n            if(bool_array[3]  && !name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              let curMatCount = filterArr.filter((item) => {\n                return item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n              });\n              matCount = curMatCount.length;\n            }\n\n            let bodCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n            });\n            bodCount = bodCount.length;\n\n            if(bool_array[1]) {\n\n              let curBodCount = filterArr.filter((item) => {\n                return item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n              });\n              bodCount = curBodCount.length;\n            }\n\n            /*\n              For twos, take 2 bool arrays\n            */\n\n            let funcBodCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n            });\n            funcBodCount = funcBodCount.length;\n\n            if(bool_array[0] && bool_array[1] && !name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              let curFuncBodCount = filterArr.filter((item) => {\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n              });\n              funcBodCount = curFuncBodCount.length;\n            }\n\n\n\n            let matBodCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n            });\n            matBodCount = matBodCount.length;\n\n            if(bool_array[1] && bool_array[3] && !name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              let curMatBodCount = filterArr.filter((item) => {\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n              });\n              matBodCount = curMatBodCount.length;\n            }\n\n            let fabBodCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n            });\n            fabBodCount = fabBodCount.length;\n\n            if(bool_array[1] && bool_array[2] && !name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              let curFabBodCount = filterArr.filter((item) => {\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\n              });\n              fabBodCount = curFabBodCount.length;\n            }\n\n\n\n            let fabFuncCount = filterArr.filter((item) => {\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n            });\n            fabFuncCount = fabFuncCount.length;\n\n            if(name_array[0].toLowerCase().trim().includes('all functions') && !name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[0] && bool_array[2]) {\n                let curFabFuncCount = filterArr.filter((item) => {\n                  return (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) &&\n                  (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                });\n                fabFuncCount = curFabFuncCount.length;\n              }\n            }\n\n            else if(!name_array[0].toLowerCase().trim().includes('all functions') && name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[0] && bool_array[2]) {\n                let curFabFuncCount = filterArr.filter((item) => {\n                  return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\") &&\n                  (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n                });\n                fabFuncCount = curFabFuncCount.length;\n              }\n            }\n\n            else {\n\n              if(bool_array[0] && bool_array[2]) {\n                let curFabFuncCount = filterArr.filter((item) => {\n                  return (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) &&\n                  (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n              \n                });\n                fabFuncCount = curFabFuncCount.length;\n              }\n            }\n\n\n\n            let matFuncCount = filterArr.filter((item) => {\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n            });\n            matFuncCount = matFuncCount.length;\n\n            if(name_array[0].toLowerCase().trim().includes('all functions') && !name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[0] && bool_array[3]) {\n                let curMatFuncCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\n                  (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                });\n                matFuncCount = curMatFuncCount.length;\n              }\n            }\n\n            else if(!name_array[0].toLowerCase().trim().includes('all functions') && name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[0] && bool_array[3]) {\n                let curMatFuncCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\") &&\n                  (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n                });\n                matFuncCount = curMatFuncCount.length;\n              }\n            }\n\n            else {\n\n              if(bool_array[0] && bool_array[3]) {\n                let curMatFuncCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\n                  (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\n                });\n                matFuncCount = curMatFuncCount.length;\n              }\n            }\n\n\n\n\n\n            let matFabCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n            });\n            matFabCount = matFabCount.length;\n\n            if(name_array[2].toLowerCase().trim().includes('all fabrications') && !name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[2] && bool_array[3]) {\n                let curMatFabCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\n                  (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                });\n                matFabCount = curMatFabCount.length;\n              }\n            }\n\n            else if(!name_array[2].toLowerCase().trim().includes('all fabrications') && name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[2] && bool_array[3]) {\n                let curMatFabCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\") &&\n                  (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\n                });\n                matFabCount = curMatFabCount.length;\n              }\n            }\n\n            else {\n              if(bool_array[2] && bool_array[3]) {\n                let curMatFabCount = filterArr.filter((item) => {\n                  return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\n                  (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\n                });\n                matFabCount = curMatFabCount.length;\n              }\n            }\n\n\n\n\n            let matFabFuncCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n            });\n            matFabFuncCount = matFabFuncCount.length;\n\n            let curMatFabFuncCount = filterArr;\n            if(!name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[0]) {\n                  curMatFabFuncCount = curMatFabFuncCount.filter((item) => {\n                  return (\n                    item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  )\n                });\n                matFabFuncCount = curMatFabFuncCount.length;\n              }\n            }\n\n            if(!name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[0]) {\n                curMatFabFuncCount = curMatFabFuncCount.filter((item) => {\n                  return (\n                    item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                    || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  )\n                });\n                matFabFuncCount = curMatFabFuncCount.length;\n              }\n            }\n            console.log(matFabFuncCount);\n\n            if(!name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[0]) {\n                curMatFabFuncCount = curMatFabFuncCount.filter((item) => {\n                  return  (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n                });\n                matFabFuncCount = curMatFabFuncCount.length;\n              }\n            }\n            console.log(matFabFuncCount);\n\n\n\n\n\n            let matFabBodCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n            });\n            matFabBodCount = matFabBodCount.length;\n\n            let curMatFabBodCount = filterArr;\n\n            if(!name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[1]) {\n                 curMatFabBodCount = curMatFabBodCount.filter((item) => {\n                  return (\n                    item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                    || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  )\n                });\n                matFabBodCount = curMatFabBodCount.length;\n              }\n            }\n\n            if(!name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[2] && bool_array[3] && bool_array[1]) {\n                  curMatFabBodCount = curMatFabBodCount.filter((item) => {\n                  return  (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n                });\n                matFabBodCount = curMatFabBodCount.length;\n              }\n            }\n\n            if(bool_array[2] && bool_array[3] && bool_array[1]) {\n              curMatFabBodCount = curMatFabBodCount.filter((item) => {\n                return (\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\n\n              });\n              matFabBodCount = curMatFabBodCount.length;\n            }\n\n\n\n            let funcFabBodCount = filterArr.filter((item) => {\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n            });\n            funcFabBodCount = funcFabBodCount.length;\n              let curFuncFabBodCount = filterArr;\n            if(!name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[2] && bool_array[0] && bool_array[1]) {\n                 curFuncFabBodCount = curFuncFabBodCount.filter((item) => {\n                  return (\n                    item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                    || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  )\n                });\n                funcFabBodCount = curFuncFabBodCount.length;\n              }\n            }\n\n            if(!name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              if(bool_array[2] && bool_array[0] && bool_array[1]) {\n                curFuncFabBodCount = curFuncFabBodCount.filter((item) => {\n                  return (\n                    item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  )\n                });\n                funcFabBodCount = curFuncFabBodCount.length;\n              }\n            }\n\n\n            if(bool_array[2] && bool_array[0] && bool_array[1]) {\n                curFuncFabBodCount = curFuncFabBodCount.filter((item) => {\n                return (\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\n              });\n\n              funcFabBodCount = curFuncFabBodCount.length;\n            }\n\n\n\n\n            let funcMatBodCount = filterArr.filter((item) => {\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n            });\n            funcMatBodCount = funcMatBodCount.length;\n\n            let curFuncMatBodCount = filterArr;\n\n            if(!name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              if(bool_array[3] && bool_array[0] && bool_array[1]) {\n                 curFuncMatBodCount = curFuncMatBodCount.filter((item) => {\n                  return (\n                    item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  )\n                });\n                funcMatBodCount = curFuncMatBodCount.length;\n              }\n            }\n\n            if(!name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[0] && bool_array[3] && bool_array[1]) {\n                  curFuncMatBodCount = curFuncMatBodCount.filter((item) => {\n                  return  (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n                });\n                funcMatBodCount = curFuncMatBodCount.length;\n              }\n            }\n\n            if(bool_array[3] && bool_array[0] && bool_array[1]) {\n                curFuncMatBodCount = curFuncMatBodCount.filter((item) => {\n                return (\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\n\n              });\n              funcMatBodCount = curFuncMatBodCount.length;\n            }\n\n            let allCount = filterArr.filter((item) => {\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\n            });\n            allCount = allCount.length;\n            let curAllCount = filterArr;\n\n            if(!name_array[0].toLowerCase().trim().includes('all functions')) {\n\n              if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\n                  curAllCount = curAllCount.filter((item) => {\n                  return (\n                    item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                    || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\n                  )\n                });\n                  allCount = curAllCount.length;\n              }\n            }\n\n            if(!name_array[2].toLowerCase().trim().includes('all fabrications')) {\n\n              if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\n                  curAllCount = curAllCount.filter((item) => {\n                  return (\n                    item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                    || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\n                  )\n                });\n                allCount = curAllCount.length;\n              }\n            }\n\n            if(!name_array[3].toLowerCase().trim().includes('all materials')) {\n\n              if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\n                  curAllCount = curAllCount.filter((item) => {\n                  return  (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\n                  || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\n                });\n                allCount = curAllCount.length;\n              }\n            }\n\n            if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\n              curAllCount = curAllCount.filter((item) => {\n                return (\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\n              });\n              allCount = curAllCount.length;\n            }\n\n            let w_f = window.innerWidth / 1280;\n\n            if(w_f < 0.7)\n              w_f = 0.7\n            else if(w_f > 1.3)\n              w_f = 1.3\n\n            let h_f = window.innerHeight / 1280;\n\n\n            if(h_f < 0.9)\n              h_f = 0.9\n            else if(h_f > 1.1)\n              h_f = 1.1\n\n\n            let w = window.innerWidth * 0.6 * w_f\n            let h = window.innerHeight * 0.85 * h_f\n\n\n            const hexagonSize = { x: 12.5, y:  12.5};\n\n            return (\n\n             <div className=\"matrixBody\">\n             {\n               console.log()\n             }\n             <div className=\"matrixSVG\">\n                        <HexGrid width={775 * w_f} height={window.innerHeight * 0.98} viewBox={\"-49 -56 100 100\"}>\n                        <Layout size={hexagonSize} flat={true} spacing={1.05} origin={{ x: 0, y: 0 }}>\n\n                                    {(bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3]) ? ((allCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Fabrication', 'Material', 'Function'])} q={0} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + allCount + \")\"}</tspan></text></Hexagon>) : (<Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={0} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>)) :\n                                     (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Fabrication', 'Material', 'Function'])} q={0} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-2em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">\n                                    Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan></text></Hexagon>)}\n\n                                   {(bool_array[1] && bool_array[2]) ? ((fabBodCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2], ['BodyZones', 'Fabrication'])} q={0} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                     <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={0} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                   )) :\n                                    (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2], ['BodyZones', 'Fabrication'])} q={0} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan></text></Hexagon>)}\n\n                                  {(bool_array[0] && bool_array[3]) ? ((matFuncCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[3], ['Function', 'Material'])} q={0} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text></Hexagon>) : (\n                                    <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={0} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                  )) :\n                                   (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[3], ['Function', 'Material'])} q={0} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan></text></Hexagon>)}\n\n                                   {(bool_array[2] && bool_array[3]) ? ((matFabCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[2] && bool_array[3], ['Material', 'Fabrication'])} q={1} r={-2} s={0}> <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text></Hexagon>) : (\n                                     <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={1} r={-2} s={0}> <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                   )) :\n                                    (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[2] && bool_array[3], ['Material', 'Fabrication'])} q={1} r={-2} s={0}> <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan></text></Hexagon>)}\n\n\n                                    {(bool_array[0] && bool_array[1]) ? ((funcBodCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1], ['Function', 'BodyZones'])} q={-1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                      <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={-1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                    )) :\n                                     (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1], ['Function', 'BodyZones'])} q={-1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan></text></Hexagon>)}\n\n\n                                    {(bool_array[1] && bool_array[3]) ? ((matBodCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[3], ['BodyZones', 'Material'])} q={2} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                      <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={2} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                    )) :\n                                     (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[1] && bool_array[3], ['BodyZones', 'Material'])} q={2} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan></text></Hexagon>)}\n\n                                     {(bool_array[0] && bool_array[2]) ? ((fabFuncCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2], ['Function', 'Fabrication'])} q={-2} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text></Hexagon>) : (\n                                       <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={-2} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                     )) :\n                                      (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2], ['Function', 'Fabrication'])} q={-2} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.6em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan></text></Hexagon>)}\n\n\n\n                                   {(bool_array[0] && bool_array[1] && bool_array[3]) ? ((funcMatBodCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[3], ['Function', 'BodyZones', 'Material'])} q={-1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>  </Hexagon>) : (\n                                     <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={-1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>  </Hexagon>\n                                   )) :\n                                    (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[3], ['Function', 'BodyZones', 'Material'])} q={-1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.8em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan></text>  </Hexagon>)}\n\n\n                                      {(bool_array[1] && bool_array[2] && bool_array[3]) ? ((matFabBodCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Material', 'Fabrication'])} q={1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                        <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                      )) :\n                                       (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Material', 'Fabrication'])} q={1} r={0} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.8em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan></text></Hexagon>)}\n\n\n\n                                     {(bool_array[0] && bool_array[1] && bool_array[2]) ? ((funcFabBodCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2], ['Function', 'BodyZones', 'Fabrication'])} q={-1} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text></Hexagon>) : (\n                                       <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={-1} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                     )) :\n                                      (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2], ['Function', 'BodyZones', 'Fabrication'])} q={-1} r={1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.8em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan></text></Hexagon>)}\n\n\n\n\n                                    {(bool_array[0] && bool_array[2] && bool_array[3]) ? ((matFabFuncCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2] && bool_array[3],  ['Function', 'Material', 'Fabrication'])} q={1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text></Hexagon>) : (\n                                      <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text></Hexagon>\n                                    )) :\n                                     (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2] && bool_array[3],  ['Function', 'Material', 'Fabrication'])} q={1} r={-1} s={0}><text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.8em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan></text></Hexagon>)}\n\n\n                                {(bool_array[2])? ((fabCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[2], ['Fabrication'])} q={-2} r={2} s={0}>\n                                    <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabCount + \")\"}</tspan></text>\n                               </Hexagon>) : (\n                                 <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}}q={-2} r={2} s={0}>\n                                     <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>\n                                </Hexagon>\n                               )) : (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[2], ['Fabrication'])} q={-2} r={2} s={0}>\n                                   <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.0em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan></text>\n                              </Hexagon>)}\n\n\n                              {(bool_array[3]) ? ((matCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[3], ['Material'])} q={2} r={-2} s={0}>\n                                <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(254, 205, 102)\">{name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matCount + \")\"}</tspan></text>\n                               </Hexagon>) : (\n                                 <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={2} r={-2} s={0}>\n                                   <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(254, 205, 102)\">{name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>\n                                  </Hexagon>\n                               )) : (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[3], ['Material'])} q={2} r={-2} s={0}>\n                                 <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.0em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">{name_array[3]}</tspan></text>\n\n                                </Hexagon>)}\n\n\n\n\n                            {(bool_array[0]) ? ((funcCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[0], ['Function'])} q={-2} r={0} s={0}>\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcCount + \")\"}</tspan></text>\n                           </Hexagon>) : (\n                             <Hexagon className=\"noHover\" cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={-2} r={0} s={0}>\n                               <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>\n                            </Hexagon>\n                           )) : (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[0], ['Function'])} q={-2} r={0} s={0}>\n                             <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.0em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan></text>\n                          </Hexagon>)}\n\n\n\n\n                          {(bool_array[1]) ? ((bodCount !== 0) ? (<Hexagon onClick={() => this.onClick(name_array, bool_array[1], ['BodyZones'])} q={2} r={0} s={0}>\n                          <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + bodCount + \")\"}</tspan></text>\n                         </Hexagon>) : (\n                           <Hexagon className=\"noHover\"cellStyle={{stroke: \"rgb(90, 90, 90)\"}} q={2} r={0} s={0}>\n                           <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(No Results)\"}</tspan></text>\n                          </Hexagon>\n                         )) : (<Hexagon cellStyle={{stroke: \"rgb(90, 90, 90)\", strokeWidth: \"0.4\", transition: \"fill-opacity .5s\"}} className=\"noHover\" onClick={() => this.onClick(name_array, bool_array[1], ['BodyZones'])} q={2} r={0} s={0}>\n                         <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan fill=\"red\" x=\"0\" dy=\"-1.0em\">{\"Select\"}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan></text>\n                        </Hexagon>)}\n\n\n                                {/*<Hexagon q={0} r={2} s={0} stroke=\"green\" fill=\"purple\"/>\n                               <Hexagon q={0} r={-2} s={0} stroke=\"green\" fill=\"purple\"/>\n\n\n                               <Hexagon q={1} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\n                               <Hexagon q={1} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                               <Hexagon q={-1} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\n                               <Hexagon q={-1} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\n\n\n                               <Hexagon q={-2} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\n                               <Hexagon q={-2} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                               <Hexagon q={2} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\n                               <Hexagon q={2} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                              <Hexagon q={-3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-3} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                              <Hexagon q={3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={3} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\n\n\n                              <Hexagon q={-4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-4} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-4} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-4} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={-4} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\n\n                              <Hexagon q={4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={4} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={4} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={4} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\n                              <Hexagon q={4} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\n                              */}\n\n\n          </Layout>\n        </HexGrid>\n                </div>\n            </div>\n        );\n    }\n\n    filterYear = (item) => {\n\n      if(item[\"Year\"] === \"\")\n        return true\n\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\n    }\n\n    filterVenue = (item) => {\n\n      return (this.props.venue === 'All' || item[\"Conference (VENUE)\"].toLowerCase() === this.props.venue.toLowerCase())\n    }\n\n    filterSource = (item) => {\n\n      if(item[\"Source\"] === \"\" || item[\"Source\"] === \"Both\")\n        return true\n\n      return (this.props.source === 'Both' || item[\"Source\"].toLowerCase() === this.props.source.toLowerCase())\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        selFunction: state.selFunction,\n        selBodyZones: state.selBodyZones,\n        selFabrication: state.selFabrication,\n        selMaterial: state.selMaterial,\n        searchData: state.searchData,\n\n        filter: state.filter,\n        minYear: state.minYear,\n        maxYear: state.maxYear,\n        venue: state.venueFilter,\n        source: state.sourceFilter,\n\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\n        updateQuery: (name_array, query_param) => dispatch({type: actionTypes.UPDATE_QUERY, names: name_array, params: query_param})\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Matrix);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './leftPaneModalTab.css';\nimport { CustomInput, Form, FormGroup, Label } from 'reactstrap';\nimport * as actionTypes from '../store/actions';\n\n\nclass LeftPaneModalTab extends Component {\n\n\n    constructor(props) {\n       super(props);\n\n       this.state = {\n         curInput: '',\n       };\n    }\n\n    onSelect = (input, type) => {\n        if(type == 'Function') {\n\n            this.setState({\n               curInp: input,\n            });\n\n\n\n            this.props.onSelectFunction(input);\n        }\n        else if(type == 'BodyZones') {\n\n            this.props.onSelectBodyZones(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n        else if(type == 'Fabrication') {\n            this.props.onSelectFabrication(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n        else {\n            this.props.onSelectMaterial(input);\n             this.setState({\n               curInp: input,\n            });\n\n        }\n    };\n\n    /*\n        Use state to save current input.\n        Use conditional rendering to render the selected input differently\n    */\n\n    render() {\n            let inp = '';\n            let curInp = this.state.curInp;\n\n            inp = this.props.subtypes.map((input) => {\n\n                return (          \n                    <div className=\"rotate13\">\n                        {input}\n                    </div>\n\n                );\n            }\n\n            )\n            return (\n\n            <div className='leftPaneModalTabBody'>\n                  {inp}\n            </div>\n            );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSelectFunction: (value) => dispatch({type: actionTypes.SELECT_FUNCTION, val: value}),\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\n        onSelectFabrication: (value) => dispatch({type: actionTypes.SELECT_FABRICATION, val: value}),\n        onSelectMaterial: (value) => dispatch({type: actionTypes.SELECT_MATERIAL, val: value}),\n\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(LeftPaneModalTab);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './leftPane.css'\nimport LeftPaneModalTab from './LeftPaneModalTab';\n\nimport { Button, Fade } from 'reactstrap';\n\nclass LeftPaneModal extends Component {\n\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n         listArr: this.props.selArr,\n        };\n    }\n\n    render() {\n\n            let funcModal = <LeftPaneModalTab style={{height: '25%'}}\n                                        type='Function'\n                                        subtypes={this.props.functions} />;\n\n            let bodyModal = <LeftPaneModalTab style={{height: '25%'}}\n             type='BodyZones'\n            subtypes={this.props.bodyZones} />;\n\n            let fabModal =  <LeftPaneModalTab style={{height: '25%'}}\n            type='Fabrication'\n            subtypes={this.props.fabrication} />;\n\n            let matModal = <LeftPaneModalTab style={{height: '25%'}}\n            type='Material'\n            subtypes={this.props.material} />;\n\n            return (\n\n\n            <div className=\"leftPaneModal\">\n\n                   {/*funcModal*/}\n                   {/*fabModal*/}\n                   {/*matModal*/}\n            </div>\n\n            );\n    }\n}\n\nconst mapStateToProps = state => {\n\n    console.log(state.arrFunc);\n    return {\n        functions: state.arrFunc,\n        bodyZones: state.arrBod,\n        fabrication: state.arrFab,\n        material: state.arrMat,\n\n    }\n};\n\nexport default connect(mapStateToProps)(LeftPaneModal);\n","import React, { Component } from 'react';\n\nimport { CardImg, CardBody,\n CardSubtitle } from 'reactstrap';\n\n import HorizontalScroll from 'react-scroll-horizontal'\n\n import * as actionTypes from '.././store/actions';\n import { connect } from 'react-redux';\n\nimport './searchDisplay.css'\n\nimport { Card, Button, CardTitle, CardText, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Tooltip } from 'reactstrap';\n\nclass SearchDisplayTab extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tooltipOpenCost: false,\n      tooltipOpenImp: false,\n      tooltipOpenWear: false,\n    };\n\n    this.toggleImp = this.toggleImp.bind(this);\n    this.toggleCost = this.toggleCost.bind(this);\n    this.toggleWear = this.toggleWear.bind(this);\n\n  }\n\n  toggleCost = () => {\n    this.setState({\n      tooltipOpenCost: !this.state.tooltipOpenCost\n    });\n  }\n\n  toggleImp = () => {\n    this.setState({\n      tooltipOpenImp: !this.state.tooltipOpenImp\n    });\n  }\n\n  toggleWear = () => {\n    this.setState({\n      tooltipOpenWear: !this.state.tooltipOpenWear\n    });\n  }\n\n  updateBookmark = (name) => {\n\n    let temp = name.substring(10);\n    console.log(temp);\n    this.props.updateBookmark(temp);\n\n  }\n\n  componentDidMount() {\n\n  let item1 = document.getElementById(\"scroller0\");\n  let item2 = document.getElementById(\"scroller1\");\n  let item3 = document.getElementById(\"scroller2\");\n  let item4 = document.getElementById(\"scroller3\");\n  let item5 = document.getElementById(\"scroller4\");\n\n  window.addEventListener('wheel', function(e) {\n\n      if(e.deltaX !== 0) {\n\n          if(e.y < item1.getBoundingClientRect().bottom) {\n            item1.scrollLeft += e.deltaX;\n\n          }\n\n          else if(e.y < item2.getBoundingClientRect().bottom) {\n     item2.scrollLeft += e.deltaX;\n\n          }\n\n          else if(e.y < item3.getBoundingClientRect().bottom) {\n          item3.scrollLeft += e.deltaX;;\n\n          }\n\n          else if(e.y < item4.getBoundingClientRect().bottom) {\n            item4.scrollLeft += e.deltaX;\n\n          }\n\n          else if(e.y < item5.getBoundingClientRect().bottom) {\n            item5.scrollLeft += e.deltaX;\n\n          }\n\n      }\n\n      else if(e.y < item1.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item1.scrollLeft += 100;\n        else item1.scrollLeft -= 100;\n      }\n\n      else if(e.y < item2.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item2.scrollLeft += 100;\n        else item2.scrollLeft -= 100;\n      }\n\n      else if(e.y < item3.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item3.scrollLeft += 100;\n        else item3.scrollLeft -= 100;\n      }\n\n      else if(e.y < item4.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item4.scrollLeft += 100;\n        else item4.scrollLeft -= 100;\n      }\n\n      else if(e.y < item5.getBoundingClientRect().bottom) {\n        if (e.deltaY > 0) item5.scrollLeft += 100;\n        else item5.scrollLeft -= 100;\n      }\n\n    });\n\n  }\n\n  render() {\n\n    let inp = '';\n\n    let i = 0;\n    let j = 0;\n\n    if(this.props.type === 'Research')\n      j = 1;\n    else if(this.props.type === 'Tutorial')\n      j = 2;\n    else if(this.props.type === 'Aesthetic Approach')\n      j = 3;\n    else if(this.props.type === 'Design Concepts')\n      j = 4\n\n    inp = this.props.arr.map((input) => {\n\n      i++;\n      let check = this.props.bookMarks.includes(input[\"Reference Link\"].substring(10));\n\n\n      let wearToken = \"nwear1\";\n      if(parseInt(input[\"Wearability\"]) <= 10)\n        wearToken = \"nwear1\";\n      else if(parseInt(input[\"Wearability\"]) <= 20)\n        wearToken = \"nwear2\";\n      else if(parseInt(input[\"Wearability\"]) <= 50)\n        wearToken = \"nwear3\";\n      else if(parseInt(input[\"Wearability\"]) <= 70)\n        wearToken = \"nwear4\";\n      else if(parseInt(input[\"Wearability\"]) <= 100)\n        wearToken = \"nwear5\";\n\n      let costToken = \"$$\"\n\n      if(parseInt(input[\"costMetric\"]) > 17)\n        costToken = \"$$$\";\n      else if(parseInt(input[\"costMetric\"]) >= 6)\n        costToken = \"$$\";\n      else\n        costToken = \"$\";\n\n\n      let col = \"green\";\n\n      if(parseInt(input[\"impMetric\"]) === 3)\n        col = \"red\";\n      else if(parseInt(input[\"impMetric\"]) === 2)\n        col = \"yellow\";\n\n\n      return (\n\n        <div className=\"itemStyle\">\n\n          <div className=\"bgimg\">\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\n\n            <img id=\"image\" src={\"ImageDatabase/\" + input[\"PIC ID\"] + \".jpg\"}  onError={(e) => {e.target.error = null; e.target.src = \"ImageDatabase/\" + input[\"PIC ID\"] + \".png\"}} alt=\"\" style={{height: '20vh', width: '100%', objectFit: 'cover'}}/>\n            </a>\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\n            <div id=\"title\" className=\"centered\">{(input[\"Reference Name\"].length < 40) ? (input[\"Reference Name\"]) : (input[\"Reference Name\"].substring(0, 40) + \"...\")}</div>\n            </a>\n\n            {(this.props.loggedIn) ? (<div id=\"title\" className=\"ticker\"><Input checked={check} onClick={() => this.updateBookmark(input[\"Reference Link\"])} type=\"checkbox\" />{' '}</div>) : (<div/>)}\n\n\n           {/* <div className=\"cost\"><div style={{backgroundColor: \"#f7f7f7\", borderRadius: \"4px\", opacity: \"0.75\", height: '30%', width: '80%'}}><div style={{ height: \"100%\", fontSize: \"100%\"}}>{costToken}</div></div>\n            <div class=\"tooltipCost\">\n                        COST LEVEl:\n                        Relationship between materials and the\n                        fabrication technique implemented in\n                        each work.\n            </div>\n\n      </div>*/}\n\n           {/* <div className=\"imp\">\n                  <div style={{height: '30%', width: '75%', backgroundColor: col }}>\n            </div>\n            <div class=\"tooltipImp\">\n                  IMPLEMENTATION LEVEL:\n                  This metric takes into consideration\n                  the time taken to implement the functionalities\n                  mentioned in each resource (i.e. function,\n                  coding requirements, etc.).\n                  It is scaled on a red, yellow, green ranking\n                  system from longest to shortest implementation\n                  time respectively.\"\n            </div>\n\n                  </div>*/}\n\n           {/* <div className=\"wear\">\n                             <img src={\"ImageDatabase/Icons/\" + wearToken + \".png\"}\n                              alt=\"\" style={{width: '85%', objectFit: \"cover\", transform: \"translate(-50%, 5%)\", position: \"absolute\"}} />\n                  <div class=\"tooltipWear\">\n                    WEARABILITY LEVEL:\n                    Five levels of wearability were defined using\n                    principles such as:\n                    Attachment to the Body, Maintainance required\n                    Activity obstruction, System integration\n                    Context application, Aesthetics consideration\n                  </div>\n                </div>*/}\n\n\n          </div>\n        </div>\n\n      )\n\n    });\n\n\n    return (\n      <div className=\"searchStore\">\n\n        <div className=\"leftPaneSearch\">\n            <div className=\"rotate1\">{this.props.type}</div>\n        </div>\n\n        <div className=\"searchTabContent\">\n\n          <div id={\"scroller\" + this.props.count} className=\"scrollStyle\" style={{display: 'flex', height: \"100%\", flexWrap: \"nowrap\"}}>\n            {inp}\n          </div>\n\n        </div>\n\n    </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateBookmark: (value) => dispatch({type: actionTypes.UPDATE_BOOKMARKS, val: value.toString(0,20)}),\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        bookMarks: state.bookMarks,\n\n        loggedIn: state.isLoggedIn,\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplayTab);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './searchDisplay.css'\nimport SearchDisplayTab from './SearchDisplayTab'\nimport ListDisplayTab from './ListDisplayTab'\n\nimport { Table } from 'reactstrap';\n\nimport * as actionTypes from '../store/actions';\n\nclass SearchDisplay extends Component {\n\n\n  /*\n    Have a list view control variable in state\n  */\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n          filterData: [],\n          research: [],\n          tutorials: [],\n          aesthetics: [],\n          concepts: [],\n          listView: false,\n        };\n    }\n\n    filterFunc = (item) => {\n\n      if(this.props.names[0].toLowerCase().trim().includes(\"all functions\"))\n        return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\");\n\n      return (item[\"Function 1\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 2\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 3\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()))\n    }\n\n    filterBod = (item) => {\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 2\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 3\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()))\n    }\n\n    filterFab = (item) => {\n\n      if(this.props.names[2].toLowerCase().trim().includes(\"all fabrications\"))\n        return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\");\n\n      return (item[\"Fabrication 1\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()) || item[\"Fabrication 2\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()))\n    }\n\n    filterMat = (item) => {\n\n      if(this.props.names[3].toLowerCase().trim().includes(\"all material\"))\n        return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\");\n\n      return (item[\"Material 1\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 2\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 3\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()))\n    }\n\n    filterYear = (item) => {\n\n      if(item[\"Year\"] === \"\")\n        return true\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\n    }\n\n    filterVenue = (item) => {\n\n      return (this.props.venue === 'All' || item[\"Conference (VENUE)\"].toLowerCase() === this.props.venue.toLowerCase())\n    }\n\n    filterSource = (item) => {\n\n            if(item[\"Source\"] === \"\" || item[\"Source\"] === \"Both\")\n              return true\n\n            return (this.props.source === 'Both' || item[\"Source\"].toLowerCase() === this.props.source.toLowerCase())\n    }\n\n    shuffleArray = (array) => {\n      for (let i = array.length - 1; i > 0; i--) {\n          const j = Math.floor(this.random(i) * (i + 1));\n          [array[i], array[j]] = [array[j], array[i]];\n      }\n\n      return array;\n    }\n\n    random = (seed) => {\n      var x = Math.sin(seed++) * 10000;\n      return x - Math.floor(x);\n    }\n\n    render() {\n\n            let filterArr = this.props.allData;\n\n            if(!this.props.viewBookmarks) {\n                  if(!this.props.searchDisplay) {\n\n\n                          if(this.props.filter) {\n\n                            filterArr = filterArr.filter(this.filterYear);\n                            filterArr = filterArr.filter(this.filterVenue);\n                            filterArr = filterArr.filter(this.filterSource);\n                          }\n                            console.log(filterArr);\n\n                          if(this.props.params.includes('Function')) {\n                             filterArr = filterArr.filter(this.filterFunc);\n                          }\n\n                          if(this.props.params.includes('BodyZones')) {\n                             filterArr = filterArr.filter(this.filterBod);\n                          }\n                          if(this.props.params.includes('Fabrication')) {\n                             filterArr = filterArr.filter(this.filterFab);\n                          }\n                          if(this.props.params.includes('Material')) {\n                             filterArr = filterArr.filter(this.filterMat);\n                          }\n                }\n\n                else {\n\n                    filterArr = filterArr.filter((item) => {\n                      return item[\"Reference Name\"].toLowerCase().includes(this.props.searchQuery.toLowerCase());\n                  });\n                }\n\n\n          }\n\n\n          else {\n\n            filterArr = filterArr.filter((item) => {\n\n              return this.props.bookMarks.includes(item[\"Reference Link\"].substring(10));\n            });\n\n          }\n\n          this.props.filteredArrayUpdate(filterArr);\n\n          let researchArr = [];\n          let tutorialsArr = [];\n          let aestheticsArr = [];\n          let conceptsArr = [];\n          let patentsArr = [];\n\n          researchArr = filterArr.filter((item) => {\n            return item[\"Research\"].trim() === 'x'\n          });\n\n          tutorialsArr = filterArr.filter((item) => {\n            return item[\"Tutorial\"].trim() === 'x'\n          });\n\n          aestheticsArr = filterArr.filter((item) => {\n            return item[\"Aesthetic Approach\"].trim() === 'x'\n          });\n\n          conceptsArr = filterArr.filter((item) => {\n\n            return item[\"Design Concepts\"].trim() === 'x'\n          });\n\n          patentsArr = filterArr.filter((item) => {\n            return item[\"Patents\"].trim() === 'x'\n          });\n\n\n          let listView = this.props.listView;\n          let i = 1;\n          let listContents = filterArr.map((item) => {\n            return (\n              <tr>\n                <th scope=\"row\">{i++}</th>\n                <td>{item[\"Reference Name\"]}</td>\n                <td>{item[\"Reference Link\"]}</td>\n              </tr>\n            )\n          })\n\n          let corLabel = \"Pinned/Bookmarks\";\n\n          if(!this.props.viewBookmarks) {\n\n            corLabel = \"\";\n            if(this.props.params.includes('Function'))\n              if(corLabel === \"\")\n                corLabel = corLabel + this.props.names[0];\n              else {\n                corLabel = corLabel + ' + ' + this.props.names[0];\n              }\n\n            if(this.props.params.includes('BodyZones'))\n              if(corLabel === \"\")\n                corLabel = corLabel + this.props.names[1];\n              else {\n                corLabel = corLabel + ' + ' + this.props.names[1];\n              }\n\n            if(this.props.params.includes('Fabrication'))\n              if(corLabel === \"\")\n                corLabel = corLabel + this.props.names[2];\n              else {\n                corLabel = corLabel + ' + '  + this.props.names[2];\n              }\n\n            if(this.props.params.includes('Material'))\n              if(corLabel === \"\")\n                corLabel = corLabel + this.props.names[3];\n              else {\n                corLabel = corLabel + ' + ' + this.props.names[3];\n              }\n          }\n\n\n          return (\n\n            <div style={{width: \"92.5%\"}}>\n              {(listView) ? (<div className=\"listSearch\">\n                    <Table striped>\n                    <thead>\n                      <th>#</th>\n                      <th>Reference Name</th>\n                      <th>Link</th>\n                    </thead>\n                    <tbody>\n                      {listContents}\n                    </tbody>\n                  </Table>\n              </div>\n             ) : (\n               <div className=\"layoutSearch\">\n                     <div className=\"bottomBar\">\n                       <div onClick={this.props.backToSearch} className=\"backLabel\">\n                           <div style={{height: \"50%\",fontSize: \"120%\", padding: \"1% 0\"}}>{\"<---- Go Back to Search\"}</div>\n                       </div>\n                       <div className=\"corLabel\">\n                           <div style={{height: \"50%\", fontSize: \"120%\", padding: \"1% 0\"}}>{corLabel}</div>\n                       </div>\n                     </div>\n                     <SearchDisplayTab count=\"0\" type='Research' arr={this.shuffleArray(researchArr)}/>\n                     <SearchDisplayTab count=\"1\" type='Tutorials' arr={this.shuffleArray(tutorialsArr)}/>\n                     <SearchDisplayTab count=\"2\" type='Aesthetics' arr={this.shuffleArray(aestheticsArr)}/>\n                     <SearchDisplayTab count=\"3\" type='Concepts' arr={this.shuffleArray(conceptsArr)}/>\n                    <SearchDisplayTab count=\"4\" type='Patents' arr={this.shuffleArray(patentsArr)}/>\n\n             </div>)}\n             </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        allData: state.searchData,\n        names: state.names,\n        params: state.params,\n\n        filter: state.filter,\n        minYear: state.minYear,\n        maxYear: state.maxYear,\n        venue: state.venueFilter,\n        source: state.sourceFilter,\n\n        listView: state.listView,\n\n        searchDisplay: state.searchTermDisplay,\n        searchQuery: state.searchTermQuery,\n\n        viewBookmarks: state.viewBookmarks,\n        bookMarks: state.bookMarks,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        filteredArrayUpdate: (value) => dispatch({type: actionTypes.STORE_FILTERED_ARRAY, val: value}),\n\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplay);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CardImg, CardBody,\n CardSubtitle } from 'reactstrap';\n\nimport './searchDisplay.css'\n\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\nimport { Table } from 'reactstrap';\n\nclass ListDisplayTab extends Component {\n\n  render() {\n\n    let inp = '';\n    let i = 1;\n    inp = this.props.arr.map((input) => {\n\n      return (\n        <tr>\n          <th scope=\"row\">{i++}</th>\n          <td>{input[\"Reference Name\"]}</td>\n          <td><a  href={input[\"Reference Link\"]}>{input[\"Reference Link\"]}</a></td>\n        </tr>\n    )});\n\n    return (\n      <div>\n      <h3>{this.props.type}</h3>\n      <Table dark>\n      <thead>\n        <tr>\n          <th>Number</th>\n          <th>Title</th>\n          <th>Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        {inp}\n      </tbody>\n    </Table>\n    </div>\n    )\n  }\n}\n\n\nexport default ListDisplayTab;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './bodyZones.css'\nimport * as actionTypes from '../store/actions';\nimport ImageMapper from 'react-image-mapper';\n\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\nclass ColCharts extends Component {\n\n  constructor(props) {\n\n      super(props);\n\n        this.state = {\n\n        };\n  }\n\n  render() {\n\n    const label = this.props.label;\n\n    /*\n      I have search data and I have a label\n    */\n\n    let curList = [];\n    let data = [];\n    if(this.props.label === 'Function') {\n          curList = this.props.function;\n\n\n          curList = curList.map((subType) => {\n\n          let temp = this.props.searchData.filter((item) => {\n\n            return (item[\"Function 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n            || item[\"Function 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n            || item[\"Function 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\n          });\n\n          return {name: subType, Results: temp.length}\n        });\n\n\n    data = curList;\n    }\n\n    else if(this.props.label === 'Fabrication') {\n\n      curList = this.props.fabrication;\n\n\n      curList = curList.map((subType) => {\n\n      let temp = this.props.searchData.filter((item) => {\n\n        return item[\"Fabrication 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n        || item[\"Fabrication 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n      });\n\n      return {name: subType, Results: temp.length}\n      });\n      data = curList;\n    }\n\n    else {\n\n      curList = this.props.material;\n\n\n      curList = curList.map((subType) => {\n\n      let temp = this.props.searchData.filter((item) => {\n\n        return (item[\"Material 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n        || item[\"Material 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n        || item[\"Material 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\n      });\n\n      return {name: subType, Results: temp.length}\n    });\n\n\n      data = curList;\n    }\n\n\n    let fillColor = \"rgb(172, 216, 206)\";\n\n    if(this.props.label === \"Fabrication\")\n      fillColor = \"rgb(133, 194, 219)\";\n\n    if(this.props.label === \"Material\")\n      fillColor = \"rgb(254, 205, 102)\";\n\n    let w = window.innerWidth / 1280;\n    let h = window.innerHeight / 610;\n    return (\n      <div style={{width: \"50%\", display: \"flex\"}}>\n\n      <div style={{color: fillColor, fontWeight: \"bold\"}}>{this.props.label}</div>\n      <div style={{transform: \"translateX(-30px)\"}}>\n            <BarChart width={550 * w} height={240 * h} data={data}\n                margin={{top: 5 * h, right: 30 * w, left: 20 * w, bottom: 5 * h}}>\n\n           <XAxis dataKey=\"name\"/>\n           <YAxis/>\n           <Tooltip cursor={false}/>\n           <Bar style={{fill: fillColor}} dataKey=\"Results\" fill=\"black\" />\n          </BarChart>\n    </div>\n\n      </div>\n    )\n\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchData: state.searchData,\n        function: state.functions,\n        material: state.material,\n        fabrication: state.fabrication,\n    }\n};\n\nexport default connect(mapStateToProps)(ColCharts);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './bodyZones.css'\nimport * as actionTypes from '../store/actions';\nimport ImageMapper from 'react-image-mapper';\n\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\nclass BodyChart extends Component {\n\n  constructor(props) {\n\n      super(props);\n\n        this.state = {\n\n        };\n  }\n\n  render() {\n\n\n    let curList = [];\n    let data = [];\n\n    curList = this.props.bodyZones;\n\n    curList = curList.map((subType) => {\n\n    let temp = this.props.searchData.filter((item) => {\n\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n      || item[\"Body Zone 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\n      || item[\"Body Zone 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\n    });\n\n    return {name: subType, value: temp.length}\n  });\n\n    data = curList;\n    let out = {};\n    for(let i = 0; i < data.length; i++) {\n      out[data[i].name] = data[i].value;\n    }\n\n    console.log(out);\n\n\n    let w = window.innerWidth / 1280;\n    let h = window.innerHeight / 610;\n\n    let val = \"translate(\" + 20 * w + \"px, -\" + 30 * h + \"px)\"\n\n    return (\n      <div style={{width: \"50%\", display: \"flex\"}}>\n          <div style={{color:\"rgb(239,122,134)\", fontWeight: \"bold\"}}>Body Zones</div>\n          <div style={{transform: val, position: \"relative\"}}>\n              <img src={\"ImageDatabase/Icons/BodyStats.jpg\"}\n               alt=\"\" style={{height: '100%', width: \"55%\", objectFit: \"cover\"}}/>\n               <div style={{position: \"absolute\", top: \"16%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Head\"]}</div>\n               <div style={{position: \"absolute\", top: \"25%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Back\"]}</div>\n               <div style={{position: \"absolute\", top: \"35%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Chest\"]}</div>\n               <div style={{position: \"absolute\", top: \"49%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Pelvic Region\"]}</div>\n               <div style={{position: \"absolute\", bottom: \"2.5%\", left: \"10%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Feet\"]}</div>\n\n               <div style={{position: \"absolute\", top: \"35%\", left: \"43%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Arms\"]}</div>\n               <div style={{position: \"absolute\", top: \"48%\", left: \"43%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Wrist and Hand\"]}</div>\n               <div style={{position: \"absolute\", top: \"72%\", left: \"43%\", color: \"rgb(239,122,134)\", fontSize: 12 * w + 'px'}}>{out[\"Legs\"]}</div>\n\n               <div style={{position: \"absolute\", top: \"50%\", left: \"55%\", color: \"rgb(239,122,134)\", fontSize: 12 * w * h + 'px'}}>{out[\"Full Body\"]}</div>\n\n           </div>\n      </div>\n    )\n\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchData: state.searchData,\n        bodyZones: state.bodyZones,\n    }\n};\n\nexport default connect(mapStateToProps)(BodyChart);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport 'rc-slider/assets/index.css';\nimport './filterBody.css'\nimport Slider from 'rc-slider';\nimport * as actionTypes from '.././store/actions';\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\nimport { ButtonDropdown, Progress, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\nimport ColCharts from './ColCharts'\nimport BodyChart from './BodyChart'\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport { Label } from 'semantic-ui-react'\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = Slider.Range;\n\nclass FilterBody extends Component {\n\n  /*\n    Make the UI changes using reactstrap\n  */\n\n    constructor(props) {\n          super(props);\n\n\n\n        this.toggle = this.toggle.bind(this);\n          this.state = {\n            dropdownOpen: false,\n            venue: 'All',\n            modal: false,\n            showLabels: true,\n\n            sourceInit: 0,\n\n            metricsModal: 0,\n          };\n    }\n\n    toggleStats = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n\n      this.props.filterToggle();\n\n    }\n\n    toggleMetrics = () => {\n      this.setState(prevState => ({\n        metricsModal: !prevState.metricsModal\n      }));\n    }\n\n    toggle() {\n\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen,\n        showLabels: !prevState.showLabels\n      }));\n   }\n\n     onChange = (value) => {\n\n       console.log(value[1]);\n\n      this.props.filterData();\n      this.props.filterYear(value[0], value[1]);\n    }\n\n    onVenueClick = (value) => {\n\n      let val = value.split(\" (\");\n\n      console.log(val[0]);\n      this.setState({\n        venue: val[0],\n      });\n\n      this.props.filterVenue(val[0]);\n    }\n\n    onSourceClick = (value) => {\n\n      let temp = value;\n\n      if(value === 'Engineering') {\n\n        if(this.props.source === 'Engineering')\n          temp = \"Both\"\n        else {\n          temp = \"Engineering\"\n        }\n\n      }\n      else if(value === 'Fashion') {\n\n        if(this.props.source === 'Fashion')\n          temp = \"Both\"\n        else {\n          temp = \"Fashion\"\n        }\n      }\n\n\n\n\n    this.props.filterSource(temp);\n    }\n\n    render() {\n\n      let w = window.innerWidth / 1280;\n      let h = window.innerHeight / 610;\n\n      let venueArr = this.props.searchData;\n\n      if(!this.props.mainPage) {\n\n        venueArr = this.props.curSearchData\n      }\n      venueArr = venueArr.map((venue) => venue[\"Conference (VENUE)\"]);\n      venueArr.unshift('All')\n\n      venueArr = venueArr.map((venue) => {\n\n        if(this.props.mainPage) {\n              if(venue === 'All')\n                  return venue + \" (\" + this.props.searchData.length + \")\";\n\n              let temp = this.props.searchData.filter((item) => item[\"Conference (VENUE)\"].toLowerCase() === venue.toLowerCase());\n\n\n              return venue + \" (\" + temp.length + \")\";\n          }\n          else {\n\n            if(venue === 'All')\n              return venue + \" (\" + this.props.curSearchData.length + \")\";\n            let temp = this.props.curSearchData.filter((item) => item[\"Conference (VENUE)\"].toLowerCase() === venue.toLowerCase());\n\n            return venue + \" (\" + temp.length + \")\";\n          }\n          return venue;\n\n      });\n\n\n      let myData = this.props.searchData;\n\n      if(!this.props.mainPage) {\n        myData = this.props.curSearchData\n      }\n      let filterEngineering = myData.filter((item) => {\n        return (item[\"Source\"] === \"Engineering\" || item[\"Source\"] === \"Both\")\n      });\n\n      let filterFashion = myData.filter((item) => {\n        return (item[\"Source\"] === \"Fashion\" || item[\"Source\"] === \"Both\")\n      });\n\n      let engLength = filterEngineering.length;\n      let fashLength = filterFashion.length;\n\n      engLength = engLength * 100 / (engLength + fashLength);\n      fashLength = 100 - engLength;\n\n      venueArr = [...new Set(venueArr)];\n\n      venueArr = venueArr.map((venue) => {\n        return (\n          <DropdownItem onClick={() => this.onVenueClick(venue)}>{venue}</DropdownItem>\n        )\n      });\n\n      const style = { width: 400 * w, margin: 50 * w};\n\n      const dataPie = [\n          {value: 25, color: \"black\", title: \"Function\"},\n          {value: 50, color: \"red\", title: \"BodyZones\"},\n          {value: 30, color: \"green\", title: \"Material\"},\n          {value: 20, color: \"blue\", title: \"Fabrication\"},\n      ]\n\n\n      let yearData = [];\n\n      for(let i = 1990; i <= 2019; i++) {\n\n        let temp = myData.filter((item) => {\n\n          return item[\"Year\"] === i.toString();\n        })\n\n        yearData = [\n            ...yearData,\n            {\n              name: i.toString(),\n              Projects: temp.length,\n            }\n        ];\n      }\n\n        const closeBtn = <Button onClick={this.toggleStats} color=\"secondary\">{\"Close (X)\"}</Button>\n        const closeBtnMetrics = <Button onClick={this.toggleMetrics} color=\"secondary\">{\"Close (X)\"}</Button>\n      return (\n          <div>\n              <div style={{ marginTop: \"1%\", fontSize: \"120%\"}}>Time Frame</div>\n              <BarChart width={260 * w} height={150 * h} data={yearData}\n                  margin={{top: 5 * h, left: 0, bottom: 0}}>\n                  <XAxis dataKey=\"name\" hide={true}/>\n                  <Tooltip cursor={false}/>\n                  <Bar dataKey=\"Projects\" />\n             </BarChart>\n\n              <Range handleStyle={[{ backgroundColor: 'black'}, {backgroundColor: 'black' }]} trackStyle={[{ backgroundColor: 'grey', height: 6 * h + \"px\"}]}\n              allowCross={false}  railStyle={{ backgroundColor: 'black' }} min={1990} max={2019} defaultValue={[this.props.minYear, this.props.maxYear]} onChange={(value) => this.onChange(value)} />\n              <div>{this.props.minYear}<span style={{float: \"right\"}}>{this.props.maxYear}</span></div>\n\n              <div style={{ marginTop: \"1%\", fontSize: \"120%\"}}>Publication Venue</div>\n              <ButtonDropdown style={{width:\"100%\", height: 20 * h + 'px'}} isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                      <DropdownToggle style={{backgroundColor: \"white\", color: \"black\"}} caret>\n                        <div style={{ transform: \"translateY(-25%)\"}}>{this.state.venue}</div>\n                      </DropdownToggle>\n                      <DropdownMenu className=\"dropdownStyle\" style={{width:\"100%\", overflowY:\"scroll\", height: window.innerHeight * 0.4}}>\n                        {venueArr}\n                      </DropdownMenu>\n              </ButtonDropdown>\n\n              <div style={{ marginTop: \"4%\", fontSize: \"120%\"}}>Filter by:</div>\n              <div style={{marginTop: \"2%\"}}>\n              {(this.props.source === 'HCI') ? (<Button style={{width: \"40%\", transform: \"translateX(20%)\"}} className=\"btnSelector\" onClick={() => this.onSourceClick(\"HCI\")}>HCI</Button>)\n                  : (<Button style={{width: \"40%\", transform: \"translateX(20%)\"}} className=\"btnSelectorClicked\" onClick={() => this.onSourceClick(\"HCI\")}>HCI</Button>)}\n             \n                {(this.props.source === 'Fashion') ? (<Button className=\"btnSelector\" style={{float: \"right\", width: \"40%\", transform: \"translateX(-20%)\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)\n                 : (<Button className=\"btnSelectorClicked\" style={{float: \"right\", width: \"40%\", transform: \"translateX(-20%)\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)}\n              </div>\n              <div style={{marginTop: \"2%\"}}>\n             \n                {(this.props.source === 'Technology') ? (<Button style={{width: \"40%\", transform: \"translateX(20%)\"}} className=\"btnSelector\" onClick={() => this.onSourceClick(\"Technology\")}>Technology</Button>)\n                  : (<Button style={{width: \"40%\", transform: \"translateX(20%)\"}} className=\"btnSelectorClicked\" onClick={() => this.onSourceClick(\"Engineering\")}>Technology</Button>)}\n              </div>\n              <div style={{textAlign: \"center\"}}>\n                  {(this.props.source === 'HCI') ? (<div>HCI</div>) : (this.props.source === 'Technology') ? (<div>Technology</div>)\n                   : ((this.props.source === \"Fashion\") ? (<div>Fashion</div>) : (<div>HCI + Fashion + Technology</div>))}\n              </div>\n              {/*<div style={{ marginTop: \"3%\", fontSize: \"120%\"}}>\n                % Contribution\n      </div>*/}\n              {/*<div style={{marginTop: '3%'}}>\n                {(this.state.showLabels) ? (<><Label style={{transform: \"translateY(4px)\", backgroundColor: \"#f98686\"}} key=\"Orange\" />{' '}<span>Engineering</span>{' '}\n                <Label style={{transform: \"translateY(4px)\"}} color=\"red\" key=\"red\" />{' '}<span>Fashion</span>{' '}</>) : (<div style={{height: \"2vh\"}}>Placeholder</div>)}\n\n                  <br />\n                  <div>\n                  <br />\n                  <Progress multi>\n                    <Progress className=\"engStyle\" bar value={engLength} />\n                    <Progress bar color=\"danger\" value={fashLength} />\n                  </Progress>\n    </div>\n    </div>*/}\n\n              <div style={{marginTop: \"8%\", marginLeft: \"20%\"}}>\n                <Button className=\"btnSelectorEnd\" style={{width: \"75%\"}} onClick={this.toggleDisplay}>{(this.props.listView) ? (\"View Results in Original Form\") : (\"View Results in List Form\")}</Button>{' '}\n              </div>\n\n              {(this.props.loggedIn) ? (<div style={{marginTop: \"5%\", marginLeft: \"20%\"}}>\n                <Button className=\"btnSelectorEnd\" style={{width: \"75%\"}} onClick={this.toggleBookmarks}>{(this.props.viewBookmarks) ? (\"View all Results\") : (\"View Pinned/Bookmarks\")}</Button>{' '}\n              </div>) : (<div/>)}\n\n              <div style={{marginTop: \"5%\", marginLeft: \"20%\", zIndex: \"2500 !important\"}}>\n\n\n                      <Button className=\"btnSelectorEnd\" style={{width: \"75%\"}} onClick={this.toggleStats}>Database Statistics</Button>\n\n                      <Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.modal} toggle={this.toggle}>\n                        <ModalHeader close={closeBtn} style={{backgroundColor: \"black\", color: \"white\"}} toggle={this.toggleStats}>Database Statistics</ModalHeader>\n\n                        <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\"}}>\n\n                            <div style={{display: \"flex\", height: \"49%\"}}>\n                               <ColCharts label=\"Function\" />\n                               <ColCharts label=\"Material\" />\n                            </div>\n\n                            <div style={{display: \"flex\",height: \"49%\", marginTop: \"2%\"}}>\n                               <ColCharts label=\"Fabrication\" />\n                               <BodyChart />\n                            </div>\n\n                        </ModalBody>\n\n                      </Modal>\n           </div>\n\n           <div style={{marginTop: \"5%\", marginLeft: \"20%\"}}>\n\n\n                  {/*} <Button className=\"btnSelectorEnd\" style={{width: \"75%\"}} onClick={this.toggleMetrics}>Metrics Description</Button>*/}\n\n                   <Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.metricsModal}>\n                     <ModalHeader close={closeBtnMetrics} style={{backgroundColor: \"black\", color: \"white\"}}>Metrics Description</ModalHeader>\n\n                     <ModalBody style={{backgroundColor: \"black\", overflowY: \"scroll\"}}>\n\n                        <div>\n\n\n                              <div style={{marginTop: \"2.5%\"}}>\n                                <div style={{ textAlign: \"center\", color: \"white\", padding: \"1% 20% 1% 20%\"}}>\n                                    <h5 style={{}}>Cost Metric</h5>\n                                    <p>To generate the cost rating system of the CHIMERA resources, we made classify the categories Fabrication and Material according to the cost of each one using USA costs as references. This analysis generates a 3 level ranking expressed by symbols on the interface ($ - $$ - $$$). This provides the user a matric that allow to compare between resources in terms of cost of implementation.</p>\n\n                                    <p>\n\n                                    The elements of each main category were classified from low to high cost, and then grouped in three common groups of price level. We applied a scale of 1-3-9 being 1 the lowest cost representation and 9 the highest. Then we grade each of the resources on the database according to what elements in Fabrication and materials uses. Then these values are combined when the user makes the correlations on the interface. This correlation generates another three level ranking of the cost that results in the selection of the corresponding symbol of $, $$, or $$$ presented on the low right corner of each work included in CHIMERA’s results page. In case a project presents multiple fabrication steps or multiple materials, the system selects the one with the highest value in the list and proceeds to generate the comparisons.\n                                    </p>\n\n                                    <div>\n                                          COST LEVEL: Highest Fabrication Value + Highest Material value\n                                    </div>\n\n\n                                    </div>\n\n                                <img src={\"ImageDatabase/Icons/Metrics2.jpg\"}\n                                 alt=\"\" style={{width: '90%', height: \"60%\", marginLeft: \"5%\", objectFit: \"cover\"}}/>\n                               </div>\n\n                               <div style={{marginTop: \"-25%\", color: \"white\", textAlign: \"center\", padding: \"1% 20% 1% 20%\"}}>\n                                     <div style={{marginTop: \"5%\", color: \"white\"}}><h4>Wearability Metric</h4></div>\n\n                                     <div>\n                                       <p>The metrics used to evaluate the physical wearability of the current work in wearable devices was developed by a combination of criteria. Six principles categories for grading were evaluated for each one of the works included in the interface, which represent basic components and principles of what conforms a wearable device. This principle answer questions of How does the wearable attaches to the body? What is the maintenance level required? What is the impact in body movement and in regular activities? What is the level of integration of the elements in the garment/device? In which contexts the wearable is useful? and What is the level of Aesthetics considered (Aesthetics vs Functionality)?\n                                       </p>\n\n                                     <p>By analyzing each work, we generate the evaluation ranking for wearability. This ranking will add all the points given in each one of the six categories and categorize in five defined groups described in Figure 1.</p>\n                                     </div>\n                                     <img src={\"ImageDatabase/Icons/Metrics4.jpg\"}\n                                      alt=\"\" style={{width: '60%', height: \"60%\", marginTop: \"2%\", objectFit: \"cover\"}}/>\n\n                                      <div style={{marginTop: \"-7.5%\"}}>\n                                      <p>Each principle considered grading is shown in the tables below.\n                                       This grading system helps to differentiate between selections, generate groups, and avoid the tendency to grade most of the elements around a\n                                        mean point. This type of scale is used in design process to define priorities of the elements in a particular design.</p>\n\n                                        <p>This ranking will help the user analyze the presented work before accessing the information. The Higher in the scale the more optimal to wear it is. Depending on the users’ needs this information can help filter and identify desired requirements.</p>\n\n                                        <div>The following table shows an example on how the metric is calculated for each resource.</div>\n                                      </div>\n                                     <img src={\"ImageDatabase/Icons/Metrics1.jpg\"}\n                                      alt=\"\" style={{width: '80%', height: \"60%\",  marginTop: \"2.5%\", marginLeft: '5%', objectFit: \"cover\"}}/>\n\n                                      <div style={{marginTop: \"-7.5%\"}}>Points assigned for each category to calculate Wearability: </div>\n                                       <img src={\"ImageDatabase/Icons/Metrics3.jpg\"}\n                                        alt=\"\" style={{width: '80%', height: \"60%\", marginTop: \"0%\", marginLeft: '5%', objectFit: \"cover\"}}/>\n\n                              </div>\n\n                              <div style={{ textAlign: \"center\", color: \"white\", padding: \"1% 20% 1% 20%\"}}>\n                                  <h5 style={{}}>Implementation Metric</h5>\n                                  <p>This metric compares resources in terms of how complex and time-consuming their Fabrication and Functionality are. Each resource is allocated two main Fabrication methods, and three main Function methods. Both category elements were ranked from lower to\n                                   higher complexity and grouped using the 1-3-9 scale (similar to the Cost metric) [18]. Using this scale, the Fabrication values were added together and the result multiplied by the highest-ranked value in the Function category. The resulting Implementation\n                                    Complexity level is displayed using a traffic light metaphor with the colors green, yellow, and red, where green means a short or relatively straightforward predicted implementation, and red a high predicted implementation in terms of complexity and time.\n                                     There are a number of exceptions to this metric where the rating of the implementation time cannot be calculated due to the nature of the source. Examples include design patents (i.e. drawings of a design with no material, fabrication or function specification), design concepts that have not yet been implemented and behavioral research (i.e. studies on how people use or interact with wearables). These exceptions are displayed as white blocks with an X in the center.</p>\n\n                             </div>\n\n\n                        </div>\n\n                     </ModalBody>\n\n                   </Modal>\n        </div>\n\n           <div>\n               <img className=\"homeButton\" src={\"ImageDatabase/Icons/Home.png\"}\n                alt=\"\" style={{width: '50%', marginLeft: \"25%\", marginTop: \"5%\", objectFit: \"cover\"}}/>\n           </div>\n\n          </div>\n        );\n    }\n\n\n    toggleDisplay = () => {\n\n      this.props.toggleDisplay();\n    }\n\n    toggleBookmarks = () => {\n\n      this.props.toggleBookmarks();\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        filterData: () => dispatch({type: actionTypes.FILTER_DATA}),\n        filterYear: (minYear, maxYear) => dispatch({type: actionTypes.FILTER_YEAR, minYear: minYear, maxYear: maxYear}),\n        filterVenue: (venue) => dispatch({type: actionTypes.FILTER_VENUE, val: venue}),\n        filterSource: (source) => dispatch({type: actionTypes.FILTER_SOURCE, val: source}),\n        toggleDisplay: () => dispatch({type: actionTypes.TOGGLE_DISPLAY}),\n        toggleBookmarks: () =>  dispatch({type: actionTypes.VIEW_BOOKMARKS}),\n\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n\n        filter: state.filter,\n        minYear: state.minYear,\n        maxYear: state.maxYear,\n        venue: state.venueFilter,\n        source: state.sourceFilter,\n        searchData: state.searchData,\n        listView: state.listView,\n        viewBookmarks: state.viewBookmarks,\n\n        loggedIn: state.isLoggedIn,\n\n        curSearchData: state.currentFilteredArray,\n\n    }\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBody);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './filterBody.css'\n\nimport { Button, UncontrolledPopover, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nimport FilterBody from './FilterBody';\nimport * as actionTypes from '../store/actions';\n\nclass FilterPane extends Component {\n\n  /*\n    Make a boolean in store, whether results to be displayed are from searchQuery\n    Store the search query itself\n\n    Define an action to store search query\n  */\n\n\n  constructor(props) {\n      super(props);\n\n      this.toggle = this.toggle.bind(this);\n      this.state = {\n        value: '',\n        popoverOpen: false,\n        visibility: 'visible',\n      };\n    }\n\n    toggleVisibility = () => {\n      if(this.state.visibility === 'visible') {\n        this.setState({\n          visibility: 'hidden',\n        });\n      }\n      else {\n        this.setState({\n          visibility: 'visible',\n        });\n      }\n\n      console.log(this.state.visibility);\n    }\n\n    toggle() {\n      this.setState({\n        popoverOpen: !this.state.popoverOpen\n      });\n    }\n\n    handleChange = (event) => {\n       this.setState({value: event.target.value});\n     }\n\n   handleSubmit = (event) => {\n\n     this.props.toggleDisplay();\n     this.props.searchTermDisplayUpdate();\n     this.props.searchTermQueryUpdate(this.state.value);\n\n     this.setState({value: ''});\n     event.preventDefault();\n\n   }\n\n   toggleHome = () => {\n\n     this.props.toggleBack();\n\n     if(this.props.move)\n      this.props.toggleMainDisplay();\n     this.props.logout();\n  }\n\n    render() {\n\n      let val = 'translate(0, 100%)';\n      let popVal = 'translate(0%, 0%)'\n\n\n      if(this.state.popoverOpen){\n        popVal = 'translate(-1275%, 0%)';\n      }\n      let w = window.innerWidth * 0.22\n      let h = window.innerHeight * 0.98;\n\n      return (\n\n      <div className={(this.props.move) ? ((!this.props.listView) ? (\"filterTabMove\") : (\"filterTabExtra\")) : (\"filterTab\")}>\n\n          <div style={{display: \"flex\"}}>\n\n              {/*<div className=\"searchBar\">\n              <form onSubmit={this.handleSubmit} id=\"demo-2\">\n                <input type=\"search\" placeholder=\"Search\" value={this.state.value} onChange={this.handleChange} />\n              </form>\n      </div>*/}\n\n              <div>\n                  <img onClick={this.toggleHome} className=\"homeButton\" src={\"ImageDatabase/Icons/MiniHome.png\"}\n                   alt=\"\" style={{width: '2vw', transform: \"translate(20%, 40%)\", objectFit: \"cover\"}}/>\n              </div>\n            </div>\n\n          <div style={{height: \"25%\"}}>\n                  <div style={{transform: val, height: \"100%\", zIndex: \"999\"}}>\n                      <div className=\"rotate6\" style={{ transform:  popVal}} id={'PopoverFilter'}>\n\n                          <div className=\"rotate9\">\n                          <div style={{width: \"450%\", transform: \"translateX(-57.5%)\"}}>\n                              DATA<text className=\"hackText\"> _</text>FILTER\n                          </div>\n                          </div>\n                      </div>\n                  </div>\n\n\n                   <UncontrolledPopover hideArrow={true} trigger=\"legacy\" style={{width: w, maxWidth: w, height: h, maxHeight: h + \" !important\", color: \"black\", overflowY: \"scroll\", backgroundColor: \"black\", zIndex: \"10\"}} placement=\"right\" isOpen={this.state.popoverOpen} target={'PopoverFilter'} toggle={this.toggle}>\n                     <PopoverHeader style={{fontSize: \"150%\", width: \"100%\", height: \"5%\", backgroundColor: \"black\", padding: \"0 0\", color: \"white\"}}><div style={{marginLeft: \"3%\", marginTop: \"2%\"}}>Data Filter</div></PopoverHeader>\n                     <PopoverBody style={{color: \"black\", width: \"100%\", height: \"95%\", fontWeight: \"500\", padding: \"0 .6rem\", backgroundColor: \"black\", color: \"white\"}}><FilterBody filterToggle={this.toggleVisibility} showLoop={this.props.showLoop} mainPage={this.props.mainPage}/></PopoverBody>\n                   </UncontrolledPopover>\n            </div>\n\n            {(this.props.showView) ? (<div style={{ marginTop: \"380%\", color: \"white\"}}>\n                Views: {this.props.viewCount}\n            </div>) : (<></>)}\n\n        </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        searchTermDisplayUpdate: () => dispatch({type: actionTypes.SEARCH_TERM_DISPLAY}),\n        searchTermQueryUpdate: (value) => dispatch({type: actionTypes.SEARCH_TERM_QUERY, val: value}),\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\n\n        logout: () => dispatch({type: actionTypes.AUTH_FAILURE}),\n    }\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        listView: state.listView,\n        viewCount: state.viewCount,\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPane);\n","/* global gapi */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../store/actions';\nimport { Form, FormGroup, Label, Input, FormText, Button } from 'reactstrap';\nimport { Dropdown } from 'semantic-ui-react'\nimport ImageMapper from 'react-image-mapper';\nimport './contributePage.css';\n\n//import gapi from 'gapi-client';\n\nclass ContributePage extends Component {\n\n/*  componentDidMount() {\n\n  gapi.load('client:auth2', () => {\n    gapi.client.init({\n      discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"],\n      apiKey: 'AIzaSyBOoFBxxw4w3hphPBGb_P4nKriNBPFf_n4',\n      clientId: '1030014197436-1oftnoda9j1qk7qgv0cpjbc625q1qr2k.apps.googleusercontent.com',\n      scope: 'https://www.googleapis.com/auth/spreadsheets'\n    }).then(function () {\n      console.log('it worked');\n    },function(error) {\n    console.log(error);\n    console.log(\"ERROR\")\n  });\n  });\n}*/\n\n  constructor(props) {\n\n      super(props);\n\n        this.toggleFab = this.toggleFab.bind(this);\n        this.toggleMat = this.toggleMat.bind(this);\n        this.toggleFunc = this.toggleFunc.bind(this);\n\n        this.state = {\n\n                dropdownOpenFab: false,\n                dropdownOpenMat: false,\n                dropdownOpenFunc: false,\n                zone: 'none',\n                title: '',\n                link: '',\n                mainpage: '',\n                year: '',\n                venue: '',\n                fab: '',\n                mat: '',\n                func: '',\n                wearability: '',\n                electronicIntegration: '',\n                maintainence: '',\n                context: '',\n                activity: '',\n                aesthetic: '',\n                resourceCategorization: [],\n                source: '',\n        };\n  }\n\n  onAChange = (event, data) => {\n    this.setState({\n      wearability: data.value,\n    });\n  }\n\n  onBChange = (event, data) => {\n    this.setState({\n      electronicIntegration: data.value,\n    });\n  }\n\n  onCChange = (event, data) => {\n    this.setState({\n      maintainence: data.value,\n    });\n  }\n\n  onDChange = (event, data) => {\n    this.setState({\n      context: data.value,\n    });\n  }\n\n  onEChange = (event, data) => {\n    this.setState({\n      activity: data.value,\n    });\n  }\n\n  onFChange = (event, data) => {\n    this.setState({\n      aesthetic: data.value,\n    });\n  }\n\n  onTitleChange = (event) => {\n\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  onLinkChange = (event) => {\n\n    this.setState({\n      link: event.target.value,\n    });\n  }\n\n  onMainpageChange = (event) => {\n\n    this.setState({\n      mainpage: event.target.value,\n    });\n  }\n\n  handleResCatChange = (res) => {\n\n      let index = this.state.resourceCategorization.indexOf(res);\n      let temp = this.state.resourceCategorization;\n      if (index > -1) {\n         temp.splice(index, 1);\n      }\n\n      else {\n        temp.unshift(res);\n      }\n\n      this.setState({\n        resourceCategorization: temp,\n      });\n  }\n\n  handleSourceChange = (source) => {\n\n    if(this.state.source === '' || this.state.source === 'Both') {\n      this.setState({\n        source: source,\n      });\n    }\n\n    else if(this.state.source === source) {\n      this.setState({\n        source: 'Both',\n      });\n    }\n\n    else {\n\n      if(this.state.source !== source) {\n        this.setState({\n          source: source,\n        });\n      }\n\n      else {\n        this.setState({\n          source: 'Both',\n        });\n      }\n    }\n  }\n\n  onYearChange = (event) => {\n\n    this.setState({\n      year: event.target.value,\n    });\n  }\n\n  onVenueChange = (event) => {\n\n    this.setState({\n      venue: event.target.value,\n    });\n  }\n\n  onFabChange = (event, data) => {\n    this.setState({\n      fab: data.value.toString(),\n    });\n  }\n\n  onMatChange = (event, data) => {\n    this.setState({\n      mat: data.value.toString(),\n    });\n  }\n\n  onFuncChange = (event, data) => {\n    this.setState({\n      func: data.value.toString(),\n    });\n  }\n\n\n\n  handleClicks2 = (area) => {\n    if (this.clickTimeout !== null) {\n      this.doubleClicked(\"Full Body\")\n      clearTimeout(this.clickTimeout)\n      this.clickTimeout = null\n    } else {\n\n      this.clickTimeout = setTimeout(()=>{\n      this.clicked(area)\n      clearTimeout(this.clickTimeout)\n        this.clickTimeout = null\n      }, 225)\n    }\n  }\n\n  doubleClicked = (area) => {\n\n    this.setState({\n      zone: area\n    });\n\n  }\n\n  clicked = (area) => {\n\n    if(this.state.zone === 'none') {\n\n      this.setState({\n        zone: area.name\n      });\n\n    }\n\n    else {\n\n      if(area.name != this.state.zone) {\n\n        this.setState({\n          zone: area.name\n        });\n\n\n      }\n\n      else {\n        this.setState({\n          zone: 'none'\n        });\n\n      }\n    }\n  }\n\n  toggleFab() {\n\n    this.setState(prevState => ({\n      dropdownOpenFab: !prevState.dropdownOpenFab,\n    }));\n }\n\n toggleMat() {\n\n   this.setState(prevState => ({\n     dropdownOpenMat: !prevState.dropdownOpenMat,\n   }));\n }\n\n toggleFunc() {\n\n   this.setState(prevState => ({\n     dropdownOpenFunc: !prevState.dropdownOpenFunc,\n   }));\n}\n\nhandleSubmit = () => {\n\n      let temp = Object.assign({}, this.state.resourceCategorization);\n      let tempResCat = temp.toString();\n\n      let arr = [];\n\n      arr.push(this.state.title);\n      arr.push(this.state.link);\n      arr.push(this.state.mainpage);\n      arr.push(this.state.year);\n      arr.push(this.state.venue);\n      arr.push(this.state.fab);\n      arr.push(this.state.mat);\n      arr.push(this.state.func);\n      arr.push(this.state.zone);\n      arr.push(this.state.wearability);\n      arr.push(this.state.electronicIntegration);\n      arr.push(this.state.maintainence);\n      arr.push(this.state.context);\n      arr.push(this.state.activity);\n      arr.push(this.state.aesthetic);\n      arr.push(this.state.source);\n      arr.push(this.state.tempResat);\n\n      var body = {\n      values: arr\n      };\n\n    /*\n    gapi.client.sheets.spreadsheets.values.append({\n     spreadsheetId: '1yYtQWLapVdWpoLk7lQ1_dyMn-Nc2IXOHNvHJNna62Kc',\n     valueInputOption: 'USER_ENTERED',\n     range: \"Sheet1!A1:R1\",\n     resource: body\n  }).then((response) => {\n    var result = response.result;\n    console.log(`${result.updates.updatedCells} cells appended.`)\n  }, (error) => {\n    console.log(error);\n  });\n  */\n\n\n\n\n/*\n      gapi.client.sheets.spreadsheets.values.append({\n       spreadsheetId: '1yYtQWLapVdWpoLk7lQ1_dyMn-Nc2IXOHNvHJNna62Kc',\n       valueInputOption: 'USER_ENTERED',\n       resource: body\n    }).then((response) => {\n      var result = response.result;\n      console.log(`${result.updates.updatedCells} cells appended.`)\n    });\n\n\n    gapi.client.sheets.spreadsheets.values.append({\n   spreadsheetId: spreadsheetId,\n   range: range,\n   valueInputOption: valueInputOption,\n   resource: body\n}).then((response) => {\n  var result = response.result;\n  console.log(`${result.updates.updatedCells} cells appended.`)\n});\n*/\n\n\n  }\n\n  render() {\n\n    let img = \"ImageDatabase/HumanBody/Androgynous.png\";\n\n    if(this.state.zone === 'Full Body')\n      img = \"ImageDatabase/HumanBody/Androgynous_fullbody.png\";\n\n    else if(this.state.zone === 'Head')\n      img = \"ImageDatabase/HumanBody/Androgynous_head.png\";\n\n    else if(this.state.zone === 'Chest')\n      img = \"ImageDatabase/HumanBody/Androgynous_chest.png\";\n\n    else if(this.state.zone === 'Back')\n      img = \"ImageDatabase/HumanBody/Androgynous_back.png\";\n\n    else if(this.state.zone === 'Pelvic Region')\n      img = \"ImageDatabase/HumanBody/Androgynous_pelvicregion.png\";\n\n    else if(this.state.zone === 'Legs')\n      img = \"ImageDatabase/HumanBody/Androgynous_legs.png\";\n\n    else if(this.state.zone === 'Feet')\n      img = \"ImageDatabase/HumanBody/Androgynous_feet.png\";\n\n    else if(this.state.zone === 'Arms')\n      img = \"ImageDatabase/HumanBody/Androgynous_arm.png\";\n\n    else if(this.state.zone === 'Wrist and Hand')\n      img = \"ImageDatabase/HumanBody/Androgynous_handnwrist.png\";\n\n\n    let w = window.innerWidth / 1280;\n    let h = window.innerHeight / 610;\n\n    let myMap2 = {\n        name: \"my-map2\",\n        areas: [\n        {name: \"Head\", shape: \"rect\", coords: [93 * w, 0 * h, 133 * w, 57 * h], fillColor: \"transparent\"},\n        {name: \"Chest\", shape: \"rect\", coords: [83 * w, 60 * h, 113 * w, 180 * h], fillColor: \"transparent\"},\n        {name: \"Back\", shape: \"rect\", coords: [113 * w, 60 * h, 143 * w, 180 * h], fillColor: \"transparent\"},\n        {name: \"Pelvic Region\", shape: \"rect\", coords: [73 * w, 168 * h, 153 * w, 214 * h], fillColor: \"transparent\"},\n        {name: \"Legs\", shape: \"rect\", coords: [73 * w, 214 * h, 153 * w, 368 * h], fillColor: \"transparent\"},\n        {name: \"Feet\", shape: \"rect\", coords: [58 * w, 368 * h, 148 * w, 400 * h], fillColor: \"transparent\"},\n\n        {name: \"Arms\", shape: \"rect\", coords: [43 * w, 67 * h, 83 * w, 174 * h], fillColor: \"transparent\"},\n        {name: \"Arms\", shape: \"rect\", coords: [143 * w, 67 * h, 171 * w, 170 * h], fillColor: \"transparent\"},\n\n        {name: \"Wrist and Hand\", shape: \"rect\", coords: [28 * w, 174 * h, 63 * w, 215 * h], fillColor: \"transparent\"},\n        {name: \"Wrist and Hand\", shape: \"rect\", coords: [158 * w, 174 * h, 193 * w, 215 * h], fillColor: \"transparent\"}\n        ]\n    }\n\n\n\n    const fabList = this.props.fabricationList.map((item) => {\n\n        let temp = { key: item, text: item, value: item};\n        return temp;\n    });\n\n    const matList = this.props.materialList.map((item) => {\n\n        let temp = { key: item, text: item, value: item};\n        return temp;\n    });\n\n    const numList = [\n                        {key:1, text:1, value: 1},\n                        {key:3, text:3, value: 3},\n                        {key:9, text:9, value: 9}\n                    ]\n\n    const funcList = this.props.functionList.map((item) => {\n\n        let temp = { key: item, text: item, value: item};\n        return temp;\n    });\n\n    return (\n\n      <div className=\"contributeSplit\">\n\n          <div className=\"contributeForm\">\n\n                <div style={{height: \"29%\", marginTop: \"2%\"}}>\n                    <div style={{height: \"40%\"}}>\n                        <div>Resource Title</div>\n                        <Input value={this.state.title} onChange={(event) => this.onTitleChange(event)} style={{ borderRadius: \"0px\", padding: \"0\", height: \"40%\"}} type=\"text\"/>\n                    </div>\n\n                    <div style={{display: \"flex\", marginTop: \"1%\"}}>\n\n                        <div style={{width: \"49%\"}}>\n                            <div>Resource Link</div>\n                            <Input value={this.state.link} onChange={(event) => this.onLinkChange(event)} style={{ borderRadius: \"0px\", padding: \"0\", height: \"60%\"}} type=\"text\"/>\n                        </div>\n\n                        <div style={{width: \"49%\", marginLeft: \"2%\"}}>\n                            <div>Resource Main Page</div>\n                            <Input value={this.state.mainpage} onChange={(event) => this.onMainpageChange(event)} style={{ borderRadius: \"0px\",  padding: \"0\", height: \"60%\"}} type=\"text\"/>\n                        </div>\n\n                    </div>\n\n                    <div style={{display: \"flex\", marginTop: \"1%\"}}>\n\n                        <div style={{width: \"49%\"}}>\n                            <div>Year</div>\n                            <Input value={this.state.year} onChange={(event) => this.onYearChange(event)} style={{ borderRadius: \"0px\",  padding: \"0\", height: \"60%\"}} type=\"text\"/>\n                        </div>\n\n                        <div style={{width: \"49%\", marginLeft: \"2%\"}}>\n                            <div>Venue</div>\n                            <Input value={this.state.venue} onChange={(event) => this.onVenueChange(event)} style={{ borderRadius: \"0px\",  padding: \"0\", height: \"60%\"}} type=\"text\"/>\n                        </div>\n\n                    </div>\n                  </div>\n\n                  <div style={{height: \"45%\", borderTop: \"solid\", paddingTop: \"2%\", borderWidth: \"thick\", marginTop: \"5%\", display: \"flex\", textAlign: \"center\"}}>\n\n                    <div style={{width: \"45%\"}}>\n                              <div style={{height: \"30%\", marginTop: \"2%\"}}>\n                                  <div>Fabrication (Pick up to 2 that apply)</div>\n                                  <Dropdown onChange={this.onFabChange} style={{padding: \"0\", minHeight: \"1%\"}} placeholder='Fabrication' fluid multiple selection options={fabList} />\n                              </div>\n\n                              <div style={{height: \"30%\", marginTop: \"3%\"}}>\n                                  <div>Material (Pick up to 3 that apply)</div>\n                                  <Dropdown onChange={this.onMatChange} style={{padding: \"0\", minHeight: \"1%\"}} placeholder='Material' fluid multiple selection options={matList} />\n                              </div>\n\n                              <div style={{height: \"30%\", marginTop: \"3%\"}}>\n                                  <div>Function (Pick up to 3 that apply)</div>\n                                  <Dropdown onChange={this.onFuncChange} style={{padding: \"0\", minHeight: \"1%\"}} placeholder='Function' fluid multiple selection options={funcList} />\n                              </div>\n                    </div>\n                    <div style={{marginLeft: \"5%\", width: \"50%\", borderLeft: \"solid\", borderWidth: \"thick\"}}>\n\n\n                            <div style={{width: \"100%\", height: \"15%\", marginTop: \"1%\", marginLeft: \"3%\"}}>\n                                <div>Source (Select all that apply)</div>\n                                <div style={{display: \"flex\", height: \"100%\", fontSize: \"105%\"}}>\n                                    {(this.state.source === \"Engineering\") ? (<Button onClick={() => this.handleSourceChange('Engineering')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", fontSize: \"100%\", color: \"black\", width: \"47%\"}}>Engineering</Button>) : (<Button onClick={() => this.handleSourceChange('Engineering')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Engineering</Button>)}\n                                    {(this.state.source === \"Fashion\") ? (<Button onClick={() => this.handleSourceChange('Fashion')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", marginLeft: \"6%\", width: \"47%\",fontSize: \"100%\"}}>Fashion</Button>) : (<Button onClick={() => this.handleSourceChange('Fashion')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", marginLeft: \"6%\", width: \"47%\", fontSize: \"100%\"}}>Fashion</Button>)}\n                                </div>\n                            </div>\n\n                            <div style={{width: \"100%\", height: \"65%\", marginTop: \"12%\", marginLeft: \"3%\"}}>\n                                <div>Resource Categorization (Select all that apply)</div>\n                                <div style={{display: \"flex\",  height:\"25%\",fontSize: \"105%\"}}>\n                                      {(this.state.resourceCategorization.includes(\"Tutorials\")) ? (<Button onClick={() => this.handleResCatChange('Tutorials')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Tutorials</Button>) : (<Button onClick={() => this.handleResCatChange('Tutorials')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Tutorials</Button>)}\n                                      {(this.state.resourceCategorization.includes(\"Research\")) ? (<Button onClick={() => this.handleResCatChange('Research')} style={{backgroundColor: \"#5a6268\",  marginLeft: \"6%\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Research</Button>) : (<Button onClick={() => this.handleResCatChange('Research')} style={{backgroundColor: \"white\",  marginLeft: \"6%\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Research</Button>)}\n\n                                </div>\n                                <div style={{display: \"flex\", marginTop: \"1%\", height:\"25%\", fontSize: \"105%\"}}>\n                                    {(this.state.resourceCategorization.includes(\"Patent\")) ? (<Button onClick={() => this.handleResCatChange('Patent')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Patent</Button>) : (<Button onClick={() => this.handleResCatChange('Patent')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Patent</Button>)}\n                                    {(this.state.resourceCategorization.includes(\"Design Concept\")) ? (<Button onClick={() => this.handleResCatChange('Design Concept')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", marginLeft: \"6%\", width: \"47%\", fontSize: \"100%\"}}>Design Concept</Button>) : (<Button onClick={() => this.handleResCatChange('Design Concept')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", marginLeft: \"6%\", width: \"47%\", fontSize: \"100%\"}}>Design Concept</Button>)}\n                                </div>\n                                <div style={{display: \"flex\", marginTop: \"1%\", height:\"25%\", fontSize: \"105%\"}}>\n                                    {(this.state.resourceCategorization.includes(\"Aesthetics\")) ? (<Button onClick={() => this.handleResCatChange('Aesthetics')} style={{backgroundColor: \"#5a6268\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Aesthetic</Button>) : (<Button onClick={() => this.handleResCatChange('Aesthetics')} style={{backgroundColor: \"white\", textAlign: \"center\", color: \"black\", width: \"47%\", fontSize: \"100%\"}}>Aesthetic</Button>)}\n                                </div>\n                            </div>\n\n                    </div>\n\n                </div>\n\n                <img src={\"ImageDatabase/Icons/Home.png\"}\n                 alt=\"\" style={{width: '30%', objectFit: \"cover\", marginLeft: \"40%\", marginTop: \"2%\"}}/>\n\n\n\n                  {/*<div style={{display: \"flex\", borderTop: \"solid\", marginTop: \"0.75%\"}}>\n\n                      <div style={{width: \"49%\"}}>\n                          <div>Wearability Rating (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onAChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                      <div style={{width: \"49%\", marginLeft: \"2%\"}}>\n                          <div>Electronic Integration (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onBChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                  </div>\n\n                  <div style={{display: \"flex\"}}>\n\n                      <div style={{width: \"49%\", marginTop: \"1.5%\"}}>\n                          <div style={{fontSize: \"97.5%\"}}>Maintainence Requirement (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onCChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                      <div style={{width: \"49%\", marginLeft: \"2%\", marginTop: \"1.5%\"}}>\n                          <div>Context (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onDChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                  </div>\n\n                  <div style={{display: \"flex\"}}>\n\n                      <div style={{width: \"49%\", marginTop: \"1.5%\"}}>\n                          <div>Activity Obstruction (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onEChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                      <div style={{width: \"49%\", marginLeft: \"2%\", marginTop: \"1.5%\"}}>\n                          <div>Aesthetic Consideration (Select the most appropriate choice)</div>\n                          <Dropdown onChange={this.onFChange} style={{padding: \"0\", minHeight: \"1%\", height: \"75%\"}} placeholder='#' fluid selection options={numList} />\n                      </div>\n\n                  </div>*/}\n\n\n\n          </div>\n\n\n          <div className=\"contributeBody\">\n            <div  style={{transform: \"translate(40%, 15%)\", width: \"50%\"}}>\n            <ImageMapper src={img} map={myMap2} width={265 * w} height={400 * h}\n               onClick={area => this.handleClicks2(area)}\n             />\n             <div style={{ fontSize: \"smaller\", marginLeft: \"26%\"}}><b>(</b>DOUBLE CLICK FOR</div>\n             <div style={{ fontSize: \"smaller\", marginLeft: \"25%\"}}>FULL BODY SELECTION<b>)</b></div>\n            </div>\n\n             <Button size=\"lg\" onClick={() => this.handleSubmit()} style={{marginTop: \"14%\", marginLeft: \"34%\", textAlign: \"center\"}} color=\"secondary\">Submit</Button>{' '}\n          </div>\n\n      </div>\n    )\n\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n        fabricationList: state.fabrication,\n        materialList: state.material,\n        functionList: state.functions,\n    }\n};\n\nexport default connect(mapStateToProps)(ContributePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './bodyZones.css'\nimport * as actionTypes from '../store/actions';\nimport ImageMapper from 'react-image-mapper';\nimport ContributePage from './ContributePage';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass BodyZones extends Component {\n\n  constructor(props) {\n\n      super(props);\n\n        this.state = {\n          zone: 'none',\n          modal: false,\n          modal2: false,\n        };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  toggle2 = () => {\n    this.setState(prevState => ({\n      modal2: !prevState.modal2\n    }));\n  }\n\n  componentWillMount = props => {\n    this.clickTimeout = null\n  }\n\n  handleClicks = (area) => {\n    if (this.clickTimeout !== null) {\n      this.doubleClicked(\"Full Body\")\n      clearTimeout(this.clickTimeout)\n      this.clickTimeout = null\n    } else {\n\n      this.clickTimeout = setTimeout(()=>{\n      this.clicked(area)\n      clearTimeout(this.clickTimeout)\n        this.clickTimeout = null\n      }, 225)\n    }\n  }\n\n  doubleClicked = (area) => {\n\n    this.setState({\n      zone: area\n    });\n\n    this.props.onSelectBodyZones(area);\n  }\n\n  clicked = (area) => {\n\n    if(this.state.name === 'none') {\n\n      this.setState({\n        zone: area.name\n      });\n\n      this.props.onSelectBodyZones(area.name);\n    }\n\n    else {\n\n      if(area.name != this.state.zone) {\n\n        this.setState({\n          zone: area.name\n        });\n\n        this.props.onSelectBodyZones(area.name);\n      }\n\n      else {\n        this.setState({\n          zone: 'none'\n        });\n\n          this.props.onSelectBodyZones('');\n      }\n   }\n\t}\n\n    render() {\n\n      let img = \"ImageDatabase/HumanBody/Androgynous.png\";\n\n      if(this.state.zone === 'Full Body')\n        img = \"ImageDatabase/HumanBody/Androgynous_fullbody.png\";\n\n      else if(this.state.zone === 'Head')\n        img = \"ImageDatabase/HumanBody/Androgynous_head.png\";\n\n      else if(this.state.zone === 'Chest')\n        img = \"ImageDatabase/HumanBody/Androgynous_chest.png\";\n\n      else if(this.state.zone === 'Back')\n        img = \"ImageDatabase/HumanBody/Androgynous_back.png\";\n\n      else if(this.state.zone === 'Pelvic Region')\n        img = \"ImageDatabase/HumanBody/Androgynous_pelvicregion.png\";\n\n      else if(this.state.zone === 'Legs')\n        img = \"ImageDatabase/HumanBody/Androgynous_legs.png\";\n\n      else if(this.state.zone === 'Feet')\n        img = \"ImageDatabase/HumanBody/Androgynous_feet.png\";\n\n      else if(this.state.zone === 'Arms')\n        img = \"ImageDatabase/HumanBody/Androgynous_arm.png\";\n\n      else if(this.state.zone === 'Wrist and Hand')\n        img = \"ImageDatabase/HumanBody/Androgynous_handnwrist.png\";\n\n\n\n        let w = window.innerWidth / 1280\n        let h = window.innerHeight / 610\n\n\n      let myMap = {\n          name: \"my-map\",\n          areas: [\n          {name: \"Head\", shape: \"rect\", coords: [93 * w, 0 * h, 140 * w, 57 * h], fillColor: \"transparent\"},\n          {name: \"Chest\", shape: \"rect\", coords: [83 * w, 60 * h, 120 * w, 180 * h], fillColor: \"transparent\"},\n          {name: \"Back\", shape: \"rect\", coords: [120 * w, 60 * h, 152 * w, 180 * h], fillColor: \"transparent\"},\n          {name: \"Pelvic Region\", shape: \"rect\", coords: [73 * w, 168 * h, 153 * w, 214 * h], fillColor: \"transparent\"},\n          {name: \"Legs\", shape: \"rect\", coords: [73 * w, 214 * h, 153 * w, 368 * h], fillColor: \"transparent\"},\n          {name: \"Feet\", shape: \"rect\", coords: [58 * w, 368 * h, 165 * w, 400 * h], fillColor: \"transparent\"},\n\n          {name: \"Arms\", shape: \"rect\", coords: [43 * w, 67 * h, 83 * w, 174 * h], fillColor: \"transparent\"},\n          {name: \"Arms\", shape: \"rect\", coords: [152 * w, 67 * h, 185 * w, 170 * h], fillColor: \"transparent\"},\n\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [28 * w, 174 * h, 63 * w, 215 * h], fillColor: \"transparent\"},\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [165 * w, 174 * h, 206 * w, 215 * h], fillColor: \"transparent\"}\n          ]\n      }\n\n        const closeBtn = <Button size=\"sm\" onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\n        const closeBtn2 = <Button onClick={this.toggle2} color=\"secondary\">{\"Close (X)\"}</Button>\n            return (\n             <div className=\"container\">\n                <div style={{height: \"10%\", display: \"flex\", color: \"white\"}}>\n\n                    <div className=\"contribute\" style={{marginTop: \"7%\", marginLeft: \"20%\", width: \"35%\", fontSize: \"125%\"}} onClick={this.toggle}>CONTRIBUTE</div>\n                    <Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.modal} toggle={this.toggle}>\n                      <ModalHeader close={closeBtn} style={{backgroundColor: \"black\", color: \"white\", height: \"8%\", padding: \"0.5rem 0.5rem\"}} toggle={this.toggle}>CONTRIBUTE</ModalHeader>\n\n                      <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\", height: \"90%\", width: \"100%\"}}>\n\n                            <ContributePage />\n\n                      </ModalBody>\n                    </Modal>\n\n                    <div className=\"contact\" style={{marginTop: \"7%\", marginLeft: \"5%\", width: \"40%\", fontSize: \"125%\"}} onClick={this.toggle2}>CONTACT US</div>\n                    <Modal style={{maxWidth: '100%', margin: \"0%\", maxHeight: '100%', width: '100%', height: '100%'}} isOpen={this.state.modal2} toggle={this.toggle2}>\n                      <ModalHeader close={closeBtn2} style={{backgroundColor: \"black\", color: \"white\", height: \"10%\"}} toggle={this.toggle2}>Contact Us</ModalHeader>\n\n                      <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\", height: \"90%\", width: \"100%\"}}>\n\n                      <div style={{display: \"flex\"}}>\n                          <div style={{width: \"47%\", marginLeft: \"1%\", color: \"white\"}}>\n\n                            <h3>Contact Us</h3>\n                            <div>Name</div>\n                            <Input style={{ borderRadius: \"0px\",  padding: \"0\", height: \"10%\"}} type=\"text\"/>\n                            <div>Email Address</div>\n                            <Input style={{ borderRadius: \"0px\",  padding: \"0\", height: \"10%\"}} type=\"text\"/>\n                            <div>Subject</div>\n                            <Input style={{ borderRadius: \"0px\",  padding: \"0\", height: \"10%\"}} type=\"text\"/>\n                            <div>Message</div>\n                            <Input style={{ borderRadius: \"0px\",  padding: \"0\", height: \"50%\"}} type=\"text\"/>\n\n                          </div>\n\n                          <div style={{width: \"47%\", marginLeft: \"5%\", color: \"white\"}}>\n\n                          <h3>Project Contributors</h3>\n\n\n                          </div>\n                      </div>\n                      </ModalBody>\n                    </Modal>\n\n                </div>\n                 <div style={{transform: \"translate(0%, 8%)\"}}>\n                       <ImageMapper strokeColor=\"transparent\" src={img} map={myMap} width={265 * w} height={400 * h}\n                        \tonClick={area => this.handleClicks(area)}\n                        />\n                        <div style={{marginTop: \"10%\", transform: \"translateX(-3%)\", color: \"white\", fontWeight: \"600\", fontSize: \"small\"}}>\n                            <div>CLICK TO SELECT</div>\n                            <div>BODY ZONES</div>\n                            <div style={{ fontSize: \"smaller\"}}><b>(</b>DOUBLE CLICK FOR</div>\n                            <div style={{ fontSize: \"smaller\"}}>FULL BODY SELECTION<b>)</b></div>\n                        </div>\n                  </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(BodyZones);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './HomePage.css'\nimport * as actionTypes from '../store/actions';\nimport {Alert} from 'reactstrap';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport GoogleLogin from 'react-google-login';\n\nclass HomePage extends Component {\n\n  constructor(props) {\n\n      super(props);\n\n        this.state = {\n          zone: 'none',\n          signUpEmail: '',\n          signUpUsername: '',\n          signUpPassword: '',\n          signUpWarning: '',\n          loginUsername: '',\n          loginPassword: '',\n          loginWarning: '',\n          modal: false\n        };\n\n      this.onSignUpEmailChange = this.onSignUpEmailChange.bind(this);\n      this.onSignUpUsernameChange = this.onSignUpUsernameChange.bind(this);\n      this.onSignUpPasswordChange = this.onSignUpPasswordChange.bind(this);\n      this.onSignUpWarningChange = this.onSignUpWarningChange.bind(this);\n\n      this.onLoginUsernameChange = this.onLoginUsernameChange.bind(this);\n      this.onLoginPasswordChange = this.onLoginPasswordChange.bind(this);\n      this.onLoginWarningChange = this.onLoginWarningChange.bind(this);\n\n      this.onSignUpSubmit = this.onSignUpSubmit.bind(this);\n      this.onLoginSubmit = this.onLoginSubmit.bind(this);\n\n      this.onGoogleLoginSubmit = this.onGoogleLoginSubmit.bind(this);\n      this.onGoogleSignUpSubmit = this.onGoogleSignUpSubmit.bind(this);\n  }\n\n    toggle = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n    }\n\n    onSignUpWarningChange = (event) => {\n\n      this.setState({\n        signUpWarning: 'Invalid credentials',\n      });\n    }\n\n    onLoginWarningChange = (event) => {\n\n      this.setState({\n        loginWarning: 'Invalid credentials',\n      });\n    }\n\n    onSignUpUsernameChange = (event) => {\n\n      this.setState({\n        signUpUsername: event.target.value,\n      });\n    }\n\n    onLoginUsernameChange = (event) => {\n\n      this.setState({\n        loginUsername: event.target.value,\n      });\n    }\n\n\n    onSignUpEmailChange = (event) => {\n\n\n      this.setState({\n        signUpEmail: event.target.value,\n      });\n    }\n\n    onSignUpPasswordChange = (event) => {\n\n      this.setState({\n        signUpPassword: event.target.value,\n      });\n    }\n\n    onLoginPasswordChange = (event) => {\n\n      this.setState({\n        loginPassword: event.target.value,\n      });\n    }\n\n    onGoogleLoginSubmit = (username, password, email) => {\n\n      let success = true;\n      let bookMarks = [];\n\n      let authSuccess = this.props.authSuccess;\n      let toggleDisp = this.props.toggle;\n\n      let onLoginWarningChange = this.onLoginWarningChange;\n\n      let onGoogleSignUpSubmit = this.onGoogleSignUpSubmit;\n\n      let jsonToSend = JSON.stringify({\n           username: username,\n           password: password\n       })\n\n       let pwd = password;\n\n       var request = new Request('https://chimerabackend.herokuapp.com/api/login/', {\n             method: 'POST',\n             headers: {\n               'Content-Type': 'application/json',\n             },\n             body: jsonToSend\n           });\n       fetch(request).then(function(response){\n\n          if(response.status.toString() === '200') {\n             response.text().then(function(text) {\n\n                 var objReceived = JSON.parse(text);\n                 if (objReceived.message === 'SUCCESS') {\n\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\n                    toggleDisp();\n                 }\n                 else {\n\n                     onGoogleSignUpSubmit(username, email, password);\n\n\n                 }\n             })\n           }\n\n           else {\n             onGoogleSignUpSubmit(username, email, password);\n           }\n       })\n\n    }\n\n    onLoginSubmit = () => {\n\n      let success = true;\n      let bookMarks = [];\n\n      let authSuccess = this.props.authSuccess;\n      let toggleDisp = this.props.toggle;\n\n      let onLoginWarningChange = this.onLoginWarningChange;\n\n      let jsonToSend = JSON.stringify({\n           username: this.state.loginUsername,\n           password: this.state.loginPassword\n       })\n\n       let pwd = this.state.loginPassword;\n\n       var request = new Request('https://chimerabackend.herokuapp.com/api/login/', {\n             method: 'POST',\n             headers: {\n               'Content-Type': 'application/json',\n             },\n             body: jsonToSend\n           });\n       fetch(request).then(function(response){\n\n          if(response.status.toString() === '200') {\n             response.text().then(function(text) {\n\n                 var objReceived = JSON.parse(text);\n                 if (objReceived.message === 'SUCCESS') {\n\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\n                    toggleDisp();\n                 }\n                 else {\n\n                     onLoginWarningChange();\n\n                 }\n             })\n           }\n\n           else {\n             onLoginWarningChange();\n           }\n       })\n\n    }\n\n\n  responseGoogle = (response) => {\n   console.log(response);\n\n   this.onGoogleLoginSubmit(response.profileObj.name,response.profileObj.name,response.profileObj.email);\n\n   /*\n    If successful, use the username to login with same password, if login fails, try signup with that username password\n   */\n  }\n\n  responseGoogleError = (response) => {\n   console.log(\"error\");\n  }\n\n  onGoogleSignUpSubmit = (username, email, password) => {\n\n    let success = true;\n    let bookMarks = [];\n\n    let authSuccess = this.props.authSuccess;\n    let toggleDisp = this.props.toggle;\n\n    let onSignUpWarningChange = this.onSignUpWarningChange;\n\n    let pwd = password;\n\n    let jsonToSend = JSON.stringify({\n         username: username,\n         email: email,\n         password: password\n     })\n\n     var request = new Request('https://chimerabackend.herokuapp.com/api/signup/', {\n           method: 'POST',\n           headers: {\n             'Content-Type': 'application/json',\n           },\n           body: jsonToSend\n         });\n     fetch(request).then(function(response){\n\n        if(response.status.toString() === '200') {\n           response.text().then(function(text) {\n\n               var objReceived = JSON.parse(text);\n               if (objReceived.message === 'SUCCESS') {\n\n                  console.log(objReceived);\n                  authSuccess(objReceived.username, pwd, objReceived.bookmarks);\n                  toggleDisp();\n               }\n               else {\n\n                   onSignUpWarningChange();\n\n               }\n           })\n         }\n\n         else {\n           onSignUpWarningChange();\n         }\n     })\n  }\n\n    onSignUpSubmit = () => {\n\n      let success = true;\n      let bookMarks = [];\n\n      let authSuccess = this.props.authSuccess;\n      let toggleDisp = this.props.toggle;\n\n      let onSignUpWarningChange = this.onSignUpWarningChange;\n\n      let pwd = this.state.signUpPassword;\n\n      let jsonToSend = JSON.stringify({\n           username: this.state.signUpUsername,\n           email: this.state.signUpEmail,\n           password: this.state.signUpPassword\n       })\n\n       var request = new Request('https://chimerabackend.herokuapp.com/api/signup/', {\n             method: 'POST',\n             headers: {\n               'Content-Type': 'application/json',\n             },\n             body: jsonToSend\n           });\n       fetch(request).then(function(response){\n\n          if(response.status.toString() === '200') {\n             response.text().then(function(text) {\n\n                 var objReceived = JSON.parse(text);\n                 if (objReceived.message === 'SUCCESS') {\n\n                    console.log(objReceived);\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\n                    toggleDisp();\n                 }\n                 else {\n\n                     onSignUpWarningChange();\n\n                 }\n             })\n           }\n\n           else {\n             onSignUpWarningChange();\n           }\n       })\n    }\n\n    render() {\n\n      const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\n\n      /*\n        Make sign up warning and login warning in store and if success, call searchDisplay or toggleSearchDisplay.\n        Whateva\n      */\n\n\n\n      return (\n\n      <div style={{height: \"100vh\", width:\"100vw\", backgroundSize: \"cover\", backgroundColor: \"black\"}}>\n\n      <div style={{height: '50%', width: '50%'}}>\n      <img src={\"ImageDatabase/Icons/Home.png\"}\n       alt=\"\" style={{width: '50vw', transform: \"translate(26vw, 18vh)\", objectFit: \"cover\"}}/>\n      </div>\n\n         <div className=\"containerHome\">\n\n         <div style={{color: \"white\", textAlign: \"center\", margin: \"5% 25%\"}}>\n         Welcome to Chimera, an interactive database for wearables development & information awareness.\n         It includes Research - Tutorials - Patents - Concepts and Aesthetic approaches used by the wearables\n         community to inspire & boost the wearables development from different field perspectives.\n         </div>\n\n         <div style={{display: \"flex\", marginTop: \"3%\"}}>\n             {/*<div style={{marginLeft: \"38%\"}}>\n               <GoogleLogin\n                clientId=\"1030014197436-1oftnoda9j1qk7qgv0cpjbc625q1qr2k.apps.googleusercontent.com\"\n                render={renderProps => (\n                    <Button color=\"secondary\" onClick={renderProps.onClick}>Google Login</Button>\n                  )}\n                buttonText=\"Google Login\"\n                onSuccess={this.responseGoogle}\n                onFailure={this.responseGoogleError}\n                cookiePolicy={'single_host_origin'}\n\n              />\n                </div>*/}\n\n             <Button onClick={this.props.toggle} style={{ margin: \"0 auto\" }} color=\"secondary\">Enter</Button>\n         </div>\n\n         <Modal size=\"lg\" style={{backgroundColor: \"black\", maxWidth: '90vw',  maxHeight: '90vh', width: '90vw', height: '90vh'}} isOpen={this.state.modal} toggle={this.toggle}>\n\n           <ModalBody style={{backgroundColor: \"black\", color: \"white\"}}>\n           <div style={{display: \"flex\"}}>\n            <div style={{width: \"30%\", marginTop: \"1.25%\"}}>\n               <Form>\n                      {(this.state.loginWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.loginWarning}</div>) : (<div></div>)}\n                       <div>Username</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onLoginUsernameChange} value={this.state.loginUsername}/>\n\n                       <div style={{marginTop: \"4.83%\"}}>Password</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onLoginPasswordChange} value={this.state.loginPassword} />\n\n                     <Button onClick={this.onLoginSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Login</Button>\n\n                </Form>\n                <div style={{marginTop: \"10%\", marginLeft: \"25%\"}}>\n                  <GoogleLogin\n                   clientId=\"1030014197436-1oftnoda9j1qk7qgv0cpjbc625q1qr2k.apps.googleusercontent.com\"\n                   buttonText=\"Google Login\"\n                   onSuccess={this.responseGoogle}\n                   onFailure={this.responseGoogleError}\n                   cookiePolicy={'single_host_origin'}\n                 />\n               </div>\n            </div>\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\n               <Form>\n                        {(this.state.signUpWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.signUpWarning}</div>) : (<div></div>)}\n                       <div style={{marginTop: \"10px\"}}>Username</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onSignUpUsernameChange} value={this.state.signUpUsername}/>\n\n                       <div style={{marginTop: \"10px\"}}>Email</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\" onChange={this.onSignUpEmailChange} value={this.state.signUpEmail}/>\n\n                       <div style={{marginTop: \"10px\"}}>Password</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onSignUpPasswordChange} value={this.state.signUpPassword} />\n\n                      <Button onClick={this.onSignUpSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Sign Up</Button>\n                </Form>\n            </div>\n\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\n               <Form>\n                       <div style={{marginTop: \"10px\"}}>Username</div>\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\"/>\n\n                      <Button onClick={this.props.toggle} style={{marginTop: \"10%\", marginLeft: \"35%\"}} color=\"secondary\">Guest Mode</Button>\n                </Form>\n            </div>\n\n            </div>\n            <img src={\"ImageDatabase/Icons/Home.png\"}\n             alt=\"\" style={{width: '25%', transform: \"translate(155%, 100%)\", objectFit: \"cover\"}}/>\n           </ModalBody>\n\n         </Modal>\n          </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchData: state.searchData,\n        function: state.functions,\n        material: state.material,\n        fabrication: state.fabrication,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authSuccess: (valuename, valuepass, value) => dispatch({type: actionTypes.AUTH_SUCCESS, valName: valuename, valPassword: valuepass, val: value}),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport \"react-awesome-popover/build/index.css\";\nimport { connect } from 'react-redux';\nimport LeftPane from './components/LeftPane';\nimport Matrix from './components/Matrix';\nimport LeftPaneModal from './components/LeftPaneModal';\nimport SearchDisplay from './components/SearchDisplay';\nimport FilterPane from './components/FilterPane';\nimport BodyZones from './components/BodyZones';\nimport HomePage from './components/HomePage'\nimport { Button, Fade } from 'reactstrap';\nimport Tabletop from 'tabletop';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport * as actionTypes from './store/actions';\n\nclass App extends Component {\n\n    constructor() {\n      super()\n      this.state = {\n        data: [],\n        displayHome: true,\n        viewCount: 0,\n      }\n  }\n\n  toggleToSearch = () => {\n\n    this.setState({\n      displayHome: false,\n    })\n  }\n\n  toggleBack = () => {\n\n    this.setState({\n      displayHome: true,\n    })\n  }\n\n/*\n    1) Create a modal for login when start is clicked\n    2) Make a state variable, isLoggen in, only display bookmark related features if user is indeed logged in\n*/\n    componentDidMount() {\n\n        Tabletop.init({\n          key: '19SNEbgmJqzFkXajdTnCDN5S6-PHmqFIGoN_MCFeOMcc',\n          callback: googleData => {\n\n            let temp = googleData[\"Sheet1\"].elements;\n\n            let wearability = this.computeWearability(googleData[\"Wearability\"].elements);\n            let costmetric = this.computeCostMetric(googleData[\"Sheet1\"].elements);\n            let impMetric = this.computeImplementationMetric(googleData[\"Sheet1\"].elements);\n            for(let i = 0; i < temp.length; i++) {\n                  temp[i] = {\n                 ...temp[i],\n                 Wearability: wearability[i][\"Wearability\"],\n                 costMetric: costmetric[i][\"costMetric\"],\n                 impMetric: impMetric[i][\"impMetric\"],\n               };\n            }\n\n            console.log(temp);\n            this.props.updateSearchData(temp);\n          },\n          simpleSheet: false\n        })\n\n\n\n    }\n\n    componentWillMount() {\n\n      let updateViewCount = this.props.updateViewCount;\n      let temp = 0;\n\n\n              var request = new Request('https://chimerabackend.herokuapp.com/api/viewCounter/', {\n                    method: 'GET',\n                    headers: {\n                      'Content-Type': 'application/json',\n                    },\n                  });\n              fetch(request).then(function(response){\n                 if(response.status.toString() === '200') {\n                    response.text().then(function(text) {\n                        var objReceived = JSON.parse(text);\n                        if (objReceived.message === 'SUCCESS') {\n                          temp = 1;\n                          updateViewCount(objReceived.counter)\n                        }\n                    })\n                  }\n              })\n\n              if(temp = 0) {\n\n                request = new Request('https://chimerabackend.herokuapp.com/api/viewCounter/', {\n                      method: 'GET',\n                      headers: {\n                        'Content-Type': 'application/json',\n                      },\n                    });\n                fetch(request).then(function(response){\n                   if(response.status.toString() === '200') {\n                      response.text().then(function(text) {\n                          var objReceived = JSON.parse(text);\n                          if (objReceived.message === 'SUCCESS') {\n                            temp = 1;\n                            updateViewCount(objReceived.counter)\n                          }\n                      })\n                    }\n                })\n              }\n\n    }\n\n    computeImplementationMetric = (data) => {\n\n      let fabricationChart =\n      {\"laser cutting\":\t3,\"3d printing\":\t9,\"layering\": 1,\"printing\": 3,\"painting\": 3,\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 9,\"soldering\":\t3,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\n       \"knit\": 9,\"embroidery and applique\":\t9,\n       \"patchwork and patterning\": 3,\"woven\": 3,\"non woven\":\t3,\n      \"machining\":\t3,\"cut and sew\":\t1, \"joining\": 1};\n\n      let functionChart =\n        {'storage': 1, 'breathability': 3, 'energy harvesting': 9, 'feedback': 9,\n         'display': 3, 'electronic connections': 3, 'wireless communication': 9, 'control': 9, 'movement': 3,\n          'sensing': 3, 'protective': 1, 'magnetic': 1, 'cognitive': 9, 'modularity': 3, 'emissivity': 3,\n        'wearability': 3, 'morphology': 3, 'aesthetics': 3, 'gestures': 3, 'studies': 3, 'interfaces':3, 'skins':3, 'interactions':3};\n\n      let impMetric = [];\n\n      for(let i = 0; i < data.length; i++) {\n\n          let fabScore = 0;\n          let funcScore = 0;\n\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\n            fabScore += fabricationChart[data[i][\"Fabrication 1\"].toLowerCase()];\n          }\n\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\n            fabScore += fabricationChart[data[i][\"Fabrication 2\"].toLowerCase()];\n          }\n\n          if(data[i][\"Function 1\"].toLowerCase() in functionChart) {\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 1\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Function 2\"].toLowerCase() in functionChart) {\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 2\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Function 3\"].toLowerCase() in functionChart) {\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 3\"].toLowerCase()]);\n          }\n\n          let temp = fabScore * funcScore;\n\n          let ans = 1;\n          if(temp <= 12)\n            ans = 1;\n          else if(temp > 12 && temp < 54)\n            ans = 2;\n          else {\n            ans = 3;\n          }\n\n          impMetric[i] = {\"impMetric\": ans};\n      }\n\n\n      return impMetric;\n\n\n  }\n\n    computeCostMetric = (data) => {\n\n      let fabricationChart =\n      {\"laser cutting\":\t9,\"3d printing\":\t9,\"layering\": 3,\"printing\": 3,\"painting\": 3,\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 3,\"soldering\":\t1,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\n       \"knit\": 1,\"embroidery and applique\":\t3,\n       \"patchwork and patterning\": 3,\"woven\": 9,\"non woven\":\t9,\n       \"machining\":\t9,\"cut and wew\":\t1, \"joining\": 3};\n\n\n      /*\n        INKS AND FINISHES\n      */\n      let materialChart =\n      {\n          \"conductive inks\": 3,\n          \"polymers\": 9,\n          \"molding materials\": 9,\n          \"threads\": 1,\n          \"conductive threads\":\t3,\n          \"adhesives\": 3,\n          \"paper and cardboard\": 1,\n          \"electronics\": 9,\n          \"textiles and composites\": 1,\n          \"hide\":\t1,\n          \"hardware\": 1,\n          \"organic materials\": 9,\n          \"inks & finishes\": 0,\n          \"metal\": 3,\n          \"shape memory alloy\": 9\n      };\n\n      let costMetric = [];\n\n      for(let i = 0; i < data.length; i++) {\n\n          let fabScore = 0;\n          let matScore = 0;\n\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 1\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 2\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Material 1\"].toLowerCase() in materialChart) {\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 1\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Material 2\"].toLowerCase() in materialChart) {\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 2\"].toLowerCase()]);\n          }\n\n          if(data[i][\"Material 3\"].toLowerCase() in materialChart) {\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 3\"].toLowerCase()]);\n          }\n\n          costMetric[i] = {\"costMetric\": fabScore + matScore};\n      }\n      return costMetric;\n    }\n\n    computeWearability = (wearability) => {\n\n      wearability = wearability.map((item) => {\n\n        let count = 0\n        let totalCount = 50\n\n        let attachScore = item[\"Attachment to the Body\"];\n\n        switch (attachScore) {\n\n            case \"Threads\":\n              attachScore = 5;\n              break;\n            case \"Velcro\":\n              attachScore = 3;\n              break;\n            case \"Adhesives\":\n               attachScore = 4;\n              break;\n            case \"Embedded\":\n              attachScore = 2;\n              break;\n            case \"Straps\":\n              attachScore = 1;\n              break;\n            case \"Clips\":\n              attachScore = 4;\n              break;\n            default:\n              attachScore = 0;\n              totalCount = totalCount - 5;\n\n        }\n\n        let mainScore = item[\"Maintenance required\"];\n\n        if(isNaN(mainScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n\n          count += parseInt(mainScore);\n        }\n\n        let actScore = item[\"activity obstruction\"];\n\n        if(isNaN(actScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(actScore);\n        }\n\n        let intScore = item[\"Integration (form and size)\"];\n\n        if(isNaN(intScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(intScore);\n        }\n\n        let conScore = item[\"Context\"];\n\n        if(isNaN(conScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(conScore);\n        }\n\n        let aesScore = item[\"Aesthetics\"];\n\n        if(isNaN(aesScore)) {\n          totalCount = totalCount - 9;\n        }\n\n        else {\n          count += parseInt(aesScore);\n        }\n\n        return {\"Wearability\": ((count / totalCount) * 100).toFixed(2)}\n      })\n\n      return wearability;\n    }\n\n  displayMatrix = () => {\n    this.setState({\n      displayHome: false,\n    });\n  }\n\n    render() {\n\n        return (\n          <BrowserRouter>\n          {(this.state.displayHome) ? (<HomePage toggle={this.toggleToSearch} />) : ((!this.props.searchDisplay) ? (<div className=\"layout\" style={{\n            width: window.innerWidth\n          }}>\n             <LeftPane />\n             <LeftPaneModal />\n             <Matrix />\n             <BodyZones />\n            <FilterPane toggleBack={this.toggleBack} move={false} showLoop={true} showView={true} views={this.state.viewCount} mainPage={true}/>\n          </div>) : (<div className=\"layoutBlack\"><SearchDisplay backToSearch={this.props.updateSearchDisplay}/>\n          <FilterPane toggleMainDisplay={this.props.updateSearchDisplay} move={true} toggleBack={this.toggleBack} showView={false} views={this.state.viewCount} showLoop={true} mainPage={false}/>\n        </div>)\n        )}\n        </BrowserRouter>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchDisplay: state.searchDisplay,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateSearchData: (value) => dispatch({type: actionTypes.UPDATE_DATA, value: value}),\n        updateSearchDisplay: () => dispatch({type: actionTypes.REMOVE_SEARCH_DISPLAY}),\n        updateViewCount:  (value) => dispatch({type: actionTypes.VIEW_COUNTER, val: value}),\n        toggleMainDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducers/index'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = reducer;\nconst store = createStore(rootReducer);\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}