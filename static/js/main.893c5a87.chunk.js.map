{"version":3,"sources":["store/reducers/index.js","store/actions.js","components/LeftPanePopoverTab.js","components/LeftPaneTab.js","components/LeftPane.js","components/Matrix.js","components/LeftPaneModalTab.js","components/LeftPaneModal.js","components/SearchDisplayTab.js","components/SearchDisplay.js","components/ListDisplayTab.js","components/ColCharts.js","components/BodyChart.js","components/FilterBody.js","components/FilterPane.js","components/BodyZones.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","searchDisplay","searchData","names","params","listDisplay","searchTermDisplay","searchTermQuery","filter","minYear","maxYear","venueFilter","sourceFilter","categories","functions","bodyZones","fabrication","material","arrFunc","arrBod","arrFab","arrMat","selFunction","selBodyZones","selFabrication","selMaterial","showFunc","showBod","showFab","showMat","bookMarks","viewBookmarks","isLoggedIn","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","val","toConsumableArray","value","listView","temp","index","indexOf","splice","push","jsonToSend","JSON","stringify","username","password","bookmarks","request","Request","method","headers","Content-Type","body","fetch","then","response","status","toString","text","parse","message","console","log","valName","valPassword","LeftPanePopoverTab","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","subtype","tempArr","listArr","includes","setState","onSelect","onSelFunction","onSelBodyZones","onSelFabrication","onSelMaterial","selArr","inp","_this2","subtypes","sort","map","input","react_default","a","createElement","key","className","name","id","label","style","width","color","backgroundColor","Component","connect","dispatch","LeftPaneTab","toggle","popoverOpen","popoverFunc","popoverBod","popoverFab","popoverMat","arr","backgroundCol","borderCol","borderColor","src","alt","UncontrolledPopover","hideArrow","modifiers","offset","trigger","target","PopoverHeader","transform","PopoverBody","padding","components_LeftPanePopoverTab","LeftPane","onShowFunction","onShowBodyZones","onShowFabrication","onShowMaterial","listItems","i","tempList","item","listItem","components_LeftPaneTab","clicked","Matrix","name_array","bool_param","query_param_array","updateQuery","toggleDisplay","filterYear","filterVenue","venue","filterSource","source","filterArr","hexagonSize","x","window","innerWidth","y","innerHeight","bool_array","funcCount","toLowerCase","trim","fabCount","matCount","bodCount","funcBodCount","matBodCount","fabBodCount","fabFuncCount","matFuncCount","matFabCount","matFabFuncCount","matFabBodCount","funcFabBodCount","curFuncFabBodCount","funcMatBodCount","allCount","lib","document","getElementById","offsetWidth","height","offsetHeight","viewBox","size","flat","spacing","origin","q","r","s","textAnchor","dy","fill","query_param","LeftPaneModalTab","curInp","onSelectFunction","onSelectBodyZones","onSelectFabrication","onSelectMaterial","curInput","background","fontWeight","LeftPaneModal","funcModal","components_LeftPaneModalTab","fabModal","matModal","SearchDisplayTab","toggleCost","tooltipOpenCost","toggleImp","tooltipOpenImp","toggleWear","tooltipOpenWear","updateBookmark","substring","bind","assertThisInitialized","check","wearToken","parseInt","costToken","col","marginLeft","borderWidth","borderStyle","href","onerror","objectFit","loggedIn","Input","checked","borderRadius","opacity","class","display","overflowX","overflowY","SearchDisplay","filterFunc","filterBod","filterFab","filterMat","shuffleArray","array","j","Math","floor","random","_ref","seed","sin","filterData","research","tutorials","aesthetics","concepts","allData","searchQuery","researchArr","tutorialsArr","aestheticsArr","conceptsArr","patentsArr","listContents","scope","corLabel","Table","striped","components_SearchDisplayTab","backToSearch","ColCharts","data","function","subType","Results","es6","margin","top","right","left","bottom","dataKey","cursor","BodyChart","out","position","fontSize","Range","Slider","createSliderWithTooltip","FilterBody","toggleStats","prevState","modal","filterToggle","onChange","onVenueClick","onSourceClick","sourceInit","toggleBookmarks","dropdownOpen","showLabels","venueArr","unshift","filterEngineering","filterFashion","engLength","fashLength","Set","DropdownItem","yearData","_loop","concat","Projects","closeBtn","Button","hide","handleStyle","trackStyle","allowCross","railStyle","min","max","defaultValue","float","ButtonDropdown","isOpen","DropdownToggle","marginBottom","caret","DropdownMenu","marginTop","marginRight","Fragment","Label","Progress","multi","bar","outline","zIndex","Modal","maxWidth","maxHeight","ModalHeader","close","ModalBody","components_ColCharts","components_BodyChart","FilterPane","toggleVisibility","visibility","handleChange","event","handleSubmit","searchTermDisplayUpdate","searchTermQueryUpdate","preventDefault","move","onSubmit","placeholder","borderTopStyle","Popover","placement","defineProperty","components_FilterBody","showLoop","BodyZones","area","zone","img","ImageMapper_default","areas","shape","coords","fillColor","HomePage","onSignUpWarningChange","signUpWarning","onLoginWarningChange","loginWarning","onSignUpUsernameChange","signUpUsername","onLoginUsernameChange","loginUsername","onSignUpEmailChange","signUpEmail","onSignUpPasswordChange","signUpPassword","onLoginPasswordChange","loginPassword","onLoginSubmit","authSuccess","toggleDisp","pwd","objReceived","onSignUpSubmit","email","backgroundSize","textAlign","Form","valuename","valuepass","App","toggleToSearch","displayHome","toggleBack","computeImplementationMetric","fabricationChart","laser cutting","3d printing","layering","printing","painting","sticking","heat pressing","heat transfer","soldering","origami","molding and casting","pleating and folding","knit","embroidery and applique","patchwork and patterning","woven","non woven","machining","cut and sew","joining","functionChart","storage","breathability","energy harvesting","feedback","electronic elements connections","wireless communication","control","movement","sensing","protective","magnetic","cognitive","modularity","emissivity","wearability","morphology","gestures","impMetric","fabScore","funcScore","ans","computeCostMetric","cut and wew","materialChart","conductive inks","polymers","molding materials","threads","conductive threads","adhesives","paper and cardboard","electronics","textiles and composites","hardware","organic materials","inks & finishes","metal","shape memory alloy","costMetric","matScore","computeWearability","count","totalCount","attachScore","mainScore","isNaN","actScore","intScore","conScore","aesScore","Wearability","toFixed","displayMatrix","Tabletop","init","callback","googleData","elements","costmetric","updateSearchData","simpleSheet","react_router_dom","src_components_HomePage","components_SearchDisplay","updateSearchDisplay","components_FilterPane","components_LeftPane","components_LeftPaneModal","components_Matrix","components_BodyZones","Boolean","location","hostname","match","rootReducer","store","createStore","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.893c5a87.chunk.js","sourcesContent":["import * as actionTypes from '../actions';\r\n\r\nconst initialState = {\r\n\r\n    searchDisplay: false,\r\n    searchData: [],\r\n    names: [],\r\n    params: [],\r\n\r\n    listDisplay: false,\r\n\r\n    searchTermDisplay: false,\r\n    searchTermQuery: '',\r\n\r\n    filter: true,\r\n    minYear: 1990,\r\n    maxYear: 2018,\r\n    venueFilter: 'All',\r\n    sourceFilter: 'Both',\r\n\r\n    categories: ['Function', 'BodyZones', 'Fabrication', 'Material'],\r\n    functions: ['Storage', 'Breathability', 'Energy Harvesting', 'Feedback',\r\n     'Display', 'Electronic Elements Connections', 'Wireless Communication', 'Control', 'Movement',\r\n      'Sensing', 'Protective', 'Magnetic', 'Cognitive', 'Modularity', 'Emissivity',\r\n    'Wearability', 'Morphology', 'Aesthetics', 'Gestures'],\r\n    bodyZones: ['Head', 'Chest', 'Pelvic Region', 'Arms', 'Legs',\r\n    'Wrist and Hand', 'Back', 'Full Body', 'Feet'],\r\n    fabrication: ['Stiching/Sewing', 'Laser Cutting', 'Weaving', '3D Printing',\r\n     'Layering', 'Printing', 'Sticking', 'Head Pressing', 'Heat Transfer',\r\n      'Soldering', 'Origami', 'Molding and Casting', 'Pleating and Folding',\r\n      'Knit', 'Embroidery and Applique', 'Beading', 'Quilting',\r\n      'Patchwork and Pattering', 'Woven', 'Non Woven', 'Machining', 'Painting'],\r\n    material: ['Illumination', 'Conductive Inks', 'Polymers', 'Molding Materials',\r\n    'Threads', 'Conductive Threads','Adhesives', 'Paper and Cardboard', 'Electronics',\r\n    'Textile and Composites', 'Bonded', 'Jaquard', 'Hide', 'Hardware', 'Organic Materials',\r\n    'Inks & Finishes', 'Metal', 'Shape Memory Alloy', 'Fabrics'],\r\n\r\n    arrFunc: [],\r\n    arrBod: [],\r\n    arrFab: [],\r\n    arrMat: [],\r\n\r\n    selFunction: '',\r\n    selBodyZones: '',\r\n    selFabrication: '',\r\n    selMaterial: '',\r\n\r\n    showFunc: false,\r\n    showBod: false,\r\n    showFab: false,\r\n    showMat: false,\r\n\r\n    bookMarks: [],\r\n    viewBookmarks: false,\r\n\r\n    isLoggedIn: false,\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case actionTypes.SELECT_FUNCTION:\r\n            return {\r\n                ...state,\r\n                selFunction: action.val\r\n            }\r\n        case actionTypes.SELECT_BODYZONES:\r\n            return {\r\n                ...state,\r\n                selBodyZones: action.val\r\n            }\r\n        case actionTypes.SELECT_FABRICATION:\r\n            return {\r\n                ...state,\r\n                selFabrication: action.val\r\n            }\r\n        case actionTypes.SELECT_MATERIAL:\r\n             return {\r\n                 ...state,\r\n                 selMaterial: action.val\r\n             }\r\n        case actionTypes.SHOW_FUNC:\r\n            return {\r\n              ...state,\r\n              showFunc: !(state.showFunc)\r\n            }\r\n        case actionTypes.SHOW_BOD:\r\n            return {\r\n                ...state,\r\n                showBod: !(state.showBod)\r\n            }\r\n        case actionTypes.SHOW_FAB:\r\n           return {\r\n               ...state,\r\n               showFab: !(state.showFab)\r\n           }\r\n        case actionTypes.SHOW_MAT:\r\n           return {\r\n               ...state,\r\n               showMat: !(state.showMat)\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_FUNC:\r\n           return {\r\n                ...state,\r\n                arrFunc: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_BOD:\r\n\r\n           return {\r\n                ...state,\r\n                arrBod: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_FAB:\r\n           return {\r\n                ...state,\r\n                arrFab: [...action.value]\r\n           }\r\n\r\n        case actionTypes.PRE_SELECT_MAT:\r\n           return {\r\n                ...state,\r\n                arrMat: [...action.value]\r\n           }\r\n        case actionTypes.UPDATE_DATA:\r\n          return {\r\n            ...state,\r\n            searchData: [...action.value]\r\n          }\r\n          case actionTypes.SEARCH_DISPLAY:\r\n            return {\r\n              ...state,\r\n              searchDisplay: true,\r\n            }\r\n\r\n          case actionTypes.REMOVE_SEARCH_DISPLAY:\r\n          return {\r\n            ...state,\r\n            searchDisplay: false,\r\n            searchTermDisplay: false,\r\n          }\r\n\r\n          case actionTypes.UPDATE_QUERY:\r\n            return {\r\n              ...state,\r\n              names: [...action.names],\r\n              params: [...action.params]\r\n            }\r\n          case actionTypes.FILTER_DATA:\r\n            return {\r\n              ...state,\r\n              filter: true,\r\n            }\r\n          case actionTypes.FILTER_YEAR:\r\n            return {\r\n              ...state,\r\n              minYear: action.minYear,\r\n              maxYear: action.maxYear,\r\n            }\r\n          case actionTypes.FILTER_VENUE:\r\n            return {\r\n              ...state,\r\n              venueFilter: action.val,\r\n            }\r\n          case actionTypes.FILTER_SOURCE:\r\n            return {\r\n              ...state,\r\n              sourceFilter: action.val,\r\n            }\r\n          case actionTypes.TOGGLE_DISPLAY:\r\n            return {\r\n              ...state,\r\n              listView: (!state.listView),\r\n            }\r\n          case actionTypes.SEARCH_TERM_DISPLAY:\r\n            return  {\r\n              ...state,\r\n              searchTermDisplay: true,\r\n            }\r\n          case actionTypes.SEARCH_TERM_QUERY:\r\n            return {\r\n              ...state,\r\n              searchTermQuery: action.val,\r\n            }\r\n          case actionTypes.UPDATE_BOOKMARKS:\r\n\r\n              let temp = [...state.bookMarks];\r\n\r\n              var index = temp.indexOf(action.val);\r\n\r\n              if (index > -1) {\r\n                 temp.splice(index, 1);\r\n              }\r\n\r\n              else {\r\n                temp.push(action.val);\r\n              }\r\n\r\n              let jsonToSend = JSON.stringify({\r\n                   username: state.username,\r\n                   password: state.password,\r\n                   bookmarks: temp\r\n               })\r\n\r\n              var request = new Request('https://chimerabackend.herokuapp.com/api/editPreferences/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                    },\r\n                    body: jsonToSend\r\n                  });\r\n                  fetch(request).then(function(response){\r\n\r\n                     if(response.status.toString() === '200') {\r\n                        response.text().then(function(text) {\r\n\r\n                            var objReceived = JSON.parse(text);\r\n                            if (objReceived.message === 'SUCCESS') {\r\n\r\n                               console.log(\"Updated\");\r\n                            }\r\n\r\n                        })\r\n                      }\r\n                  })\r\n\r\n              return {\r\n                ...state,\r\n                bookMarks: temp,\r\n              }\r\n\r\n          case actionTypes.VIEW_BOOKMARKS: {\r\n\r\n            return {\r\n              ...state,\r\n              viewBookmarks: (!state.viewBookmarks),\r\n            }\r\n\r\n          }\r\n\r\n          case actionTypes.AUTH_SUCCESS: {\r\n\r\n            console.log(action);\r\n            return {\r\n              ...state,\r\n              isLoggedIn: true,\r\n              username: action.valName,\r\n              password: action.valPassword,\r\n              bookMarks: action.val\r\n            }\r\n          }\r\n\r\n          case actionTypes.AUTH_FAILURE: {\r\n\r\n            return {\r\n              ...state,\r\n              isLoggedIn: false,\r\n            }\r\n          }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","export const SELECT_FUNCTION = 'SELECT_FUNCTION';\r\nexport const SELECT_BODYZONES = 'SELECT_BODYZONES';\r\nexport const SELECT_FABRICATION = 'SELECT_FABRICATION';\r\nexport const SELECT_MATERIAL = 'SELECT_MATERIAL';\r\n\r\nexport const SHOW_FUNC = 'SHOW_FUNC';\r\nexport const SHOW_BOD = 'SHOW_BOD';\r\nexport const SHOW_FAB = 'SHOW_FAB';\r\nexport const SHOW_MAT = 'SHOW_MAT';\r\n\r\nexport const PRE_SELECT_FUNC = 'PRE_SELECT_FUNC';\r\nexport const PRE_SELECT_BOD = 'PRE_SELECT_BOD';\r\nexport const PRE_SELECT_FAB = 'PRE_SELECT_FAB';\r\nexport const PRE_SELECT_MAT = 'PRE_SELECT_MAT';\r\n\r\nexport const UPDATE_DATA = 'UPDATE_DATA';\r\nexport const SEARCH_DISPLAY = 'SEARCH_DISPLAY';\r\nexport const UPDATE_QUERY = 'UPDATE_QUERY';\r\n\r\nexport const FILTER_DATA = 'FILTER_DATA';\r\nexport const FILTER_YEAR = 'FILTER_YEAR';\r\nexport const FILTER_VENUE = 'FILTER_VENUE';\r\nexport const FILTER_SOURCE = 'FILTER_SOURCE';\r\n\r\nexport const TOGGLE_DISPLAY = 'TOGGLE_DISPLAY';\r\n\r\nexport const SEARCH_TERM_DISPLAY = 'SEARCH_TERM_DISPLAY';\r\nexport const SEARCH_TERM_QUERY = 'SEARCH_TERM_QUERY';\r\n\r\nexport const UPDATE_BOOKMARKS = 'UPDATE_BOOKMARKS';\r\nexport const VIEW_BOOKMARKS = 'VIEW_BOOKMARKS';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\r\n\r\nexport const REMOVE_SEARCH_DISPLAY = 'REMOVE_SEARCH_DISPLAY';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPanePopoverTab.css';\r\nimport { Button, CustomInput, Form, FormGroup, Label } from 'reactstrap';\r\nimport * as actionTypes from '../store/actions';\r\n\r\n\r\nclass LeftPanePopoverTab extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n         listArr: this.props.selArr,\r\n        };\r\n    }\r\n\r\n    onClick = (subtype) => {\r\n\r\n\r\n        let tempArr = this.state.listArr;\r\n\r\n        if(this.state.listArr.includes(subtype)) {\r\n\r\n            tempArr.splice(tempArr.indexOf(subtype),1 );\r\n        }\r\n\r\n        else {\r\n            tempArr.push(subtype);\r\n        }\r\n\r\n        this.setState({\r\n\r\n            listArr: tempArr,\r\n        });\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        this.onSelect();\r\n    }\r\n\r\n    onSelect = () => {\r\n\r\n            //this.props.types and this.state.listArr\r\n            let type = this.props.type;\r\n\r\n\r\n             if(type === 'Function') {\r\n\r\n                 this.props.onSelFunction(this.state.listArr);\r\n             }\r\n             else if(type === 'BodyZones') {\r\n                 this.props.onSelBodyZones(this.state.listArr);\r\n             }\r\n             else if(type === 'Fabrication') {\r\n                 this.props.onSelFabrication(this.state.listArr);\r\n             }\r\n             else {\r\n                 this.props.onSelMaterial(this.state.listArr);\r\n             }\r\n\r\n             //this.props.toggle();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n            let inp = '';\r\n\r\n            let selArr = this.state.listArr;\r\n            inp = this.props.subtypes.sort().map((input) => {\r\n\r\n                return (\r\n\r\n                    <div key={this.props.key}>\r\n                     {(selArr.includes(input)) ? (\r\n                       <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBodySelected'\r\n                          name=\"customRadio\"\r\n\r\n                          id={input}\r\n                          label={input}>{input}</div>\r\n                        ) : (\r\n                          <div onClick={() => this.onClick(input)} className='leftPanePopoverTabBody'\r\n                          name=\"customRadio\" key={input} id={input}\r\n                                    label={input}>{input}</div>\r\n                        )}\r\n                     </div>\r\n\r\n\r\n                );\r\n            }\r\n            )\r\n            return (\r\n                        <div style={{width: '100%', color: \"white\", backgroundColor: \"black\"}}>\r\n                          {inp}\r\n                        </div>\r\n\r\n\r\n            );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelFunction: (value) => dispatch({type: actionTypes.PRE_SELECT_FUNC, value: value}),\r\n        onSelBodyZones: (value) => dispatch({type: actionTypes.PRE_SELECT_BOD, value: value}),\r\n        onSelFabrication: (value) => dispatch({type: actionTypes.PRE_SELECT_FAB, value: value}),\r\n        onSelMaterial: (value) => dispatch({type: actionTypes.PRE_SELECT_MAT, value: value}),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LeftPanePopoverTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPaneTab.css'\r\n\r\nimport LeftPanePopoverTab from './LeftPanePopoverTab';\r\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nclass LeftPaneTab extends Component {\r\n\r\n    constructor(props) {\r\n       super(props);\r\n\r\n\r\n\r\n       this.state = {\r\n         popoverFunc: false,\r\n         popoverBod: false,\r\n         popoverFab: false,\r\n         popoverMat: false,\r\n         popoverOpen: false,\r\n       };\r\n\r\n    }\r\n\r\n     toggle = (name) => {\r\n       this.setState({\r\n         popoverOpen: !this.state.popoverOpen\r\n       });\r\n     }\r\n\r\n\r\n   render() {\r\n\r\n\r\n            let type = this.props.name;\r\n\r\n            let arr = [];\r\n            let selArr = [];\r\n\r\n            if(type === 'Function') {\r\n                arr = this.props.functions;\r\n                selArr = this.props.arrFunc;\r\n            }\r\n            else if(type === 'BodyZones') {\r\n                arr = this.props.bodyZones;\r\n                selArr = this.props.arrBod;\r\n            }\r\n            else if(type === 'Fabrication') {\r\n                arr = this.props.fabrication;\r\n                selArr = this.props.arrFab;\r\n            }\r\n            else {\r\n                arr = this.props.material;\r\n                selArr = this.props.arrMat;\r\n            }\r\n\r\n            let backgroundCol = \"rgb(172, 216, 206)\";\r\n            let borderCol = \"rgb(110, 169, 155)\";\r\n\r\n            if(this.props.name === \"Material\") {\r\n                backgroundCol = \"rgb(254, 205, 102)\";\r\n                borderCol = \"rgb(254, 172, 0)\";\r\n            }\r\n\r\n            else if(this.props.name === \"Fabrication\") {\r\n              backgroundCol = \"rgb(133, 194, 219)\";\r\n              borderCol = \"rgb(0, 181, 254)\";\r\n            }\r\n\r\n            //console.log(store.getState());\r\n            return (\r\n\r\n             <div id={'Popover-'+this.props.name} style={{ backgroundColor: backgroundCol, borderColor: borderCol }} className=\"leftPaneTabBody\">\r\n\r\n                 <div className=\"rotate5 move\">{this.props\r\n                 .name}\r\n                 </div>\r\n\r\n\r\n                 <img id=\"image\" src={\"ImageDatabase/Icons/\" + this.props.name + \".png\"}\r\n                  alt=\"\" className=\"imgStyle\"/>\r\n\r\n\r\n\r\n\r\n                         <UncontrolledPopover style={{ backgroundColor: \"black\"}} hideArrow={true} modifiers={{offset: '-5vw'}} trigger=\"legacy\" target={'Popover-'\r\n                         +\r\n\r\n                         this\r\n                         .props\r\n                         .name}>\r\n\r\n                              <PopoverHeader style={{color: \"white\", backgroundColor: \"black\", transform: \"translateX(-4.8%)\"}}>{this.props.name}</PopoverHeader>\r\n                               <PopoverBody style={{padding: '0', color: \"#A7AFBA\", backgroundColor: \"black\", transform: \"translateX(-4.8%)\"}}><LeftPanePopoverTab\r\n                                                        type={this.props.name}\r\n                                                        subtypes={arr}\r\n                                                         selArr={selArr}\r\n                                                         toggle={this.toggle}\r\n                                                         key={this.props.key}/>\r\n                          </PopoverBody>\r\n\r\n                         </UncontrolledPopover>\r\n\r\n            </div>\r\n\r\n        );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        functions: state.functions,\r\n        bodyZones: state.bodyZones,\r\n        fabrication: state.fabrication,\r\n        material: state.material,\r\n\r\n        showFunc: state.showFunc,\r\n        showBod: state.showBod,\r\n        showFab: state.showFab,\r\n        showMat: state.showMat,\r\n\r\n        arrFunc: state.arrFunc,\r\n        arrBod: state.arrBod,\r\n        arrFab: state.arrFab,\r\n        arrMat: state.arrMat,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeftPaneTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './leftPane.css'\r\nimport LeftPaneTab from './LeftPaneTab';\r\n\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass LeftPane extends Component {\r\n\r\n    onClick = (type) => {\r\n\r\n\r\n\r\n         if(type === 'Function') {\r\n\r\n             this.props.onShowFunction();\r\n         }\r\n         else if(type === 'BodyZones') {\r\n             this.props.onShowBodyZones();\r\n         }\r\n         else if(type === 'Fabrication') {\r\n             this.props.onShowFabrication();\r\n         }\r\n         else {\r\n             this.props.onShowMaterial();\r\n         }\r\n    };\r\n\r\n    render() {\r\n\r\n           let listItems = '';\r\n           let i = 0;\r\n\r\n           let tempList = this.props.categories;\r\n           tempList = tempList.filter((item) => {\r\n             return item !== 'BodyZones'\r\n           })\r\n           listItems = tempList.map((listItem) => {\r\n                return (\r\n                    <LeftPaneTab key={i++} name={listItem} clicked={this.onClick} />\r\n                )\r\n            });\r\n\r\n            return (\r\n\r\n             <div className=\"leftPaneBody\">\r\n                {listItems}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        categories: state.categories,\r\n        searchData: state.searchData\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onShowFunction: () => dispatch({type: actionTypes.SHOW_FUNC}),\r\n        onShowBodyZones: () => dispatch({type: actionTypes.SHOW_BOD}),\r\n        onShowFabrication: () => dispatch({type: actionTypes.SHOW_FAB}),\r\n        onShowMaterial: () => dispatch({type: actionTypes.SHOW_MAT}),\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftPane);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './matrix.css'\r\nimport './matrixSVG.css'\r\nimport { GridGenerator, HexGrid, Layout, Path, Hexagon, Text, Pattern, Hex } from 'react-hexgrid';\r\n\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\n\r\nimport * as actionTypes from '.././store/actions';\r\n\r\nclass Matrix extends Component {\r\n\r\n    onClick = (name_array, bool_param, query_param_array) => {\r\n\r\n        if(bool_param) {\r\n\r\n          this.props.updateQuery(name_array, query_param_array);\r\n          this.props.toggleDisplay();\r\n        }\r\n    };\r\n\r\n    /*\r\n\r\n      For every hexagon:\r\n\r\n        1) When clickable:\r\n\r\n            For that specific query, determine how many entries are there in the database.\r\n\r\n            For the 4 base types\r\n\r\n\r\n        2) When not clickable:\r\n\r\n              For all fifteen hexagons I need to calculate number of corresponding inputs.\r\n              Basically like for function, check if entry has X in any of func1-3. look over every entry and maintain\r\n              a boolean for all 4 parameters. and then increae counts depending on either of the 15 cases\r\n              For function + material, check both similars\r\n    */\r\n\r\n    render() {\r\n\r\n            let filterArr = this.props.searchData;\r\n\r\n            if(this.props.filter) {\r\n\r\n              filterArr = filterArr.filter(this.filterYear);\r\n              filterArr = filterArr.filter(this.filterVenue);\r\n              filterArr = filterArr.filter(this.filterSource);\r\n            }\r\n\r\n            let w = window.innerWidth * 0.6\r\n            let h = window.innerHeight * 0.85\r\n\r\n\r\n            const hexagonSize = { x: w / 60, y:  h / 45};\r\n\r\n            let name_array = [];\r\n            name_array[0] = 'Function';\r\n            name_array[1] = 'BodyZones';\r\n            name_array[2] = 'Fabrication';\r\n            name_array[3] = 'Material'\r\n\r\n            let bool_array = [];\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n            bool_array.push(false);\r\n\r\n            if(this.props.selFunction !== '') {\r\n                bool_array[0] = true;\r\n                name_array[0] = this.props.selFunction;\r\n              }\r\n\r\n            if(this.props.selBodyZones !== '') {\r\n                bool_array[1] = true;\r\n                name_array[1] = this.props.selBodyZones;\r\n            }\r\n\r\n            if(this.props.selFabrication !== '') {\r\n                bool_array[2] = true;\r\n                name_array[2] = this.props.selFabrication;\r\n            }\r\n\r\n            if(this.props.selMaterial !== '') {\r\n                bool_array[3] = true;\r\n                name_array[3] = this.props.selMaterial;\r\n            }\r\n\r\n            let funcCount = filterArr.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            funcCount = funcCount.length;\r\n\r\n            if(bool_array[0]) {\r\n\r\n              let curFuncCount = filterArr.filter((item) => {\r\n                return item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n              });\r\n              funcCount = curFuncCount.length;\r\n            }\r\n\r\n            let fabCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabCount = fabCount.length;\r\n\r\n            if(bool_array[2]) {\r\n\r\n              let curFabCount = filterArr.filter((item) => {\r\n                return item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n              });\r\n              fabCount = curFabCount.length;\r\n            }\r\n\r\n            let matCount = filterArr.filter((item) => {\r\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matCount = matCount.length;\r\n\r\n            if(bool_array[3]) {\r\n\r\n              let curMatCount = filterArr.filter((item) => {\r\n                return item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n              });\r\n              matCount = curMatCount.length;\r\n            }\r\n\r\n            let bodCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            bodCount = bodCount.length;\r\n\r\n            if(bool_array[1]) {\r\n\r\n              let curBodCount = filterArr.filter((item) => {\r\n                return item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n              });\r\n              bodCount = curBodCount.length;\r\n            }\r\n\r\n            /*\r\n              For twos, take 2 bool arrays\r\n            */\r\n\r\n            let funcBodCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            funcBodCount = funcBodCount.length;\r\n\r\n            if(bool_array[0] && bool_array[1]) {\r\n\r\n              let curFuncBodCount = filterArr.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              funcBodCount = curFuncBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let matBodCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matBodCount = matBodCount.length;\r\n\r\n            if(bool_array[1] && bool_array[3]) {\r\n\r\n              let curMatBodCount = filterArr.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim()))\r\n              });\r\n              matBodCount = curMatBodCount.length;\r\n            }\r\n\r\n            let fabBodCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabBodCount = fabBodCount.length;\r\n\r\n            if(bool_array[1] && bool_array[2]) {\r\n\r\n              let curFabBodCount = filterArr.filter((item) => {\r\n                return (item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n              });\r\n              fabBodCount = curFabBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let fabFuncCount = filterArr.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            fabFuncCount = fabFuncCount.length;\r\n\r\n            if(bool_array[0] && bool_array[2]) {\r\n              let curFabFuncCount = filterArr.filter((item) => {\r\n                return (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              fabFuncCount = curFabFuncCount.length;\r\n            }\r\n\r\n            let matFuncCount = filterArr.filter((item) => {\r\n              return (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matFuncCount = matFuncCount.length;\r\n\r\n            if(bool_array[0] && bool_array[3]) {\r\n              let curMatFuncCount = filterArr.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim()))\r\n              });\r\n              matFuncCount = curMatFuncCount.length;\r\n            }\r\n\r\n\r\n\r\n            let matFabCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n            });\r\n            matFabCount = matFabCount.length;\r\n\r\n            if(bool_array[2] && bool_array[3]) {\r\n              let curMatFabCount = filterArr.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n              });\r\n              matFabCount = curMatFabCount.length;\r\n            }\r\n\r\n\r\n\r\n\r\n            let matFabFuncCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n            });\r\n            matFabFuncCount = matFabFuncCount.length;\r\n\r\n            if(bool_array[2] && bool_array[3] && bool_array[0]) {\r\n              let curMatFabFuncCount = filterArr.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                  || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                  || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                )\r\n              });\r\n              matFabFuncCount = curMatFabFuncCount.length;\r\n            }\r\n\r\n\r\n            let matFabBodCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            matFabBodCount = matFabBodCount.length;\r\n\r\n\r\n            if(bool_array[2] && bool_array[3] && bool_array[1]) {\r\n              let curMatFabBodCount = filterArr.filter((item) => {\r\n                return (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n              matFabBodCount = curMatFabBodCount.length;\r\n            }\r\n\r\n\r\n\r\n            let funcFabBodCount = filterArr.filter((item) => {\r\n              return (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            funcFabBodCount = funcFabBodCount.length;\r\n\r\n            if(bool_array[2] && bool_array[0] && bool_array[1]) {\r\n              let curFuncFabBodCount = filterArr.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n\r\n              console.log(curFuncFabBodCount);\r\n              funcFabBodCount = curFuncFabBodCount.length;\r\n            }\r\n\r\n            let funcMatBodCount = filterArr.filter((item) => {\r\n              return (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n            });\r\n            funcMatBodCount = funcMatBodCount.length;\r\n\r\n            if(bool_array[3] && bool_array[0] && bool_array[1]) {\r\n              let curFuncMatBodCount = filterArr.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim()))\r\n\r\n              });\r\n              funcMatBodCount = curFuncMatBodCount.length;\r\n            }\r\n\r\n            let allCount = filterArr.filter((item) => {\r\n              return (item[\"Body Zone 1\"] !== \"\" || item[\"Body Zone 2\"] !== \"\" || item[\"Body Zone 3\"] !== \"\")\r\n                      && (item[\"Material 1\"] !== \"\" || item[\"Material 2\"] !== \"\" || item[\"Material 3\"] !== \"\")\r\n                      && (item[\"Function 1\"] !== \"\" || item[\"Function 2\"] !== \"\" || item[\"Function 3\"] !== \"\")\r\n                      && (item[\"Fabrication 1\"] !== \"\" || item[\"Fabrication 2\"] !== \"\")\r\n            });\r\n            allCount = allCount.length;\r\n\r\n            if(bool_array[3] && bool_array[0] && bool_array[1] && bool_array[2]) {\r\n              let curAllCount = filterArr.filter((item) => {\r\n                return (item[\"Function 1\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 2\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())\r\n                || item[\"Function 3\"].toLowerCase().trim().includes(name_array[0].toLowerCase().trim())) &&\r\n                (item[\"Material 1\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 2\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())\r\n                || item[\"Material 3\"].toLowerCase().trim().includes(name_array[3].toLowerCase().trim())) && (\r\n                  item[\"Body Zone 1\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 2\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())\r\n                  || item[\"Body Zone 3\"].toLowerCase().trim().includes(name_array[1].toLowerCase().trim())) &&\r\n                  (item[\"Fabrication 1\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim())\r\n                  || item[\"Fabrication 2\"].toLowerCase().trim().includes(name_array[2].toLowerCase().trim()))\r\n\r\n              });\r\n              allCount = curAllCount.length;\r\n            }\r\n\r\n            return (\r\n\r\n             <div className=\"matrixBody\">\r\n             {\r\n               console.log()\r\n             }\r\n             <div className=\"matrixSVG\">\r\n                        <HexGrid width={document.getElementById(\"root\").offsetWidth * 0.6} height={document.getElementById(\"root\").offsetHeight*0.85} viewBox=\"-40 -45 90 90\">\r\n                        <Layout size={hexagonSize} flat={true} spacing={1.05} origin={{ x: 0, y: 0 }}>\r\n\r\n                                  <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Fabrication', 'Material', 'Function'])} q={0} r={0} s={0}>\r\n\r\n                                    {(bool_array[0] && bool_array[1] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + allCount + \")\"}</tspan></text>) :\r\n                                     (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + allCount + \")\"}</tspan></text>)}\r\n                                 </Hexagon>\r\n\r\n                                {/*\r\n                                 <Hexagon q={0} r={2} s={0} stroke=\"green\" fill=\"purple\"/>\r\n                                 <Hexagon q={0} r={-2} s={0} stroke=\"green\" fill=\"purple\"/>\r\n\r\n\r\n                                 <Hexagon q={1} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={1} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                 <Hexagon q={-1} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={-1} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n\r\n                                 <Hexagon q={-2} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={-2} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                 <Hexagon q={2} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                 <Hexagon q={2} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={-3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-3} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={3} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={3} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n\r\n                                <Hexagon q={-4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={-4} r={4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n\r\n                                <Hexagon q={4} r={0} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-1} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-2} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-3} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                <Hexagon q={4} r={-4} s={0} stroke=\"white\" fill=\"purple\"/>\r\n                                */}\r\n                                 <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2], ['BodyZones', 'Fabrication'])} q={0} r={1} s={0}>\r\n\r\n                                   {(bool_array[1] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text>) :\r\n                                    (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabBodCount + \")\"}</tspan></text>)}\r\n                                </Hexagon>\r\n\r\n                                <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[3], ['Function', 'Material'])} q={0} r={-1} s={0}>\r\n\r\n                                  {(bool_array[0] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text>) :\r\n                                   (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFuncCount + \")\"}</tspan></text>)}\r\n                               </Hexagon>\r\n\r\n                               <Hexagon onClick={() => this.onClick(name_array, bool_array[2], ['Fabrication'])} q={2} r={0} s={0}>\r\n                                   <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabCount + \")\"}</tspan></text>\r\n                              </Hexagon>\r\n                              <Hexagon onClick={() => this.onClick(name_array, bool_array[3], ['Material'])} q={2} r={-2} s={0}>\r\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(254, 205, 102)\">{name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matCount + \")\"}</tspan></text>\r\n\r\n                             </Hexagon>\r\n\r\n                             <Hexagon onClick={() => this.onClick(name_array, bool_array[2] && bool_array[3], ['Material', 'Fabrication'])} q={2} r={-1} s={0}>\r\n                               {(bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(133, 194, 219)\">{name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text>) :\r\n                                (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabCount + \")\"}</tspan></text>)}\r\n\r\n                            </Hexagon>\r\n\r\n                            <Hexagon onClick={() => this.onClick(name_array, bool_array[0], ['Function'])} q={-2} r={0} s={0}>\r\n\r\n                              <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcCount + \")\"}</tspan></text>\r\n                           </Hexagon>\r\n\r\n                           <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1], ['Function', 'BodyZones'])} q={-2} r={1} s={0}>\r\n\r\n                             {(bool_array[0] && bool_array[1]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text>) :\r\n                              (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcBodCount + \")\"}</tspan></text>)}\r\n                          </Hexagon>\r\n\r\n                          <Hexagon onClick={() => this.onClick(name_array, bool_array[1], ['BodyZones'])} q={-2} r={2} s={0}>\r\n                          <text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + bodCount + \")\"}</tspan></text>\r\n\r\n                         </Hexagon>\r\n\r\n                           <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[3], ['BodyZones', 'Material'])} q={1} r={-1} s={0}>\r\n\r\n                             {(bool_array[1] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text>) :\r\n                              (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matBodCount + \")\"}</tspan></text>)}\r\n                          </Hexagon>\r\n\r\n                          <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2], ['Function', 'Fabrication'])} q={-1} r={0} s={0}>\r\n\r\n                            {(bool_array[0] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text>) :\r\n                             (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"0em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + fabFuncCount + \")\"}</tspan></text>)}\r\n                         </Hexagon>\r\n\r\n                         <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[3], ['Function', 'BodyZones', 'Material'])} q={-1} r={-1} s={0}>\r\n\r\n                           {(bool_array[0] && bool_array[1] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>) :\r\n                            (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcMatBodCount + \")\"}</tspan></text>)}\r\n                        </Hexagon>\r\n\r\n                        <Hexagon q={-1} r={2} s={0}>\r\n                          <Text>Contact Us</Text>\r\n                       </Hexagon>\r\n\r\n                       <Hexagon  q={1} r={1} s={0}>\r\n                         <Text>Contribute</Text>\r\n                      </Hexagon>\r\n\r\n                      <Hexagon onClick={() => this.onClick(name_array, bool_array[1] && bool_array[2] && bool_array[3], ['BodyZones', 'Material', 'Fabrication'])} q={1} r={0} s={0}>\r\n\r\n                        {(bool_array[1] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(239,122,134)\">{name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text>) :\r\n                         (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabBodCount + \")\"}</tspan></text>)}\r\n                     </Hexagon>\r\n\r\n                   <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[1] && bool_array[2], ['Function', 'BodyZones', 'Fabrication'])} q={-1} r={1} s={0}>\r\n\r\n                       {(bool_array[0] && bool_array[1] && bool_array[2]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(239,122,134)\">+ {name_array[1]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text>) :\r\n                        (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ BodyZones</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + funcFabBodCount + \")\"}</tspan></text>)}\r\n                    </Hexagon>\r\n\r\n                    <Hexagon onClick={() => this.onClick(name_array, bool_array[0] && bool_array[2] && bool_array[3],  ['Function', 'Material', 'Fabrication'])} q={1} r={-2} s={0}>\r\n\r\n                      {(bool_array[0] && bool_array[2] && bool_array[3]) ? (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\" fill=\"rgb(172, 216, 206)\">{name_array[0]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(133, 194, 219)\">+ {name_array[2]}</tspan><tspan x=\"0\" dy=\"1.2em\" fill=\"rgb(254, 205, 102)\">+ {name_array[3]}</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text>) :\r\n                       (<text x=\"0\" y=\"0\" textAnchor=\"middle\"><tspan x=\"0\" dy=\"-1.2em\">Function</tspan><tspan x=\"0\" dy=\"1.2em\">+ Material</tspan><tspan x=\"0\" dy=\"1.2em\">+ Fabrication</tspan><tspan x=\"0\" dy=\"1.2em\">{\"(\" + matFabFuncCount + \")\"}</tspan></text>)}\r\n                    </Hexagon>\r\n          </Layout>\r\n        </HexGrid>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    filterYear = (item) => {\r\n\r\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\r\n    }\r\n\r\n    filterVenue = (item) => {\r\n      console.log(this.props.venue);\r\n      return (this.props.venue === 'All' || item[\"Conference (VENUE)\"] === this.props.venue)\r\n    }\r\n\r\n    filterSource = (item) => {\r\n      return (this.props.source === 'Both' || item[\"Source\"] === this.props.source)\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selFunction: state.selFunction,\r\n        selBodyZones: state.selBodyZones,\r\n        selFabrication: state.selFabrication,\r\n        selMaterial: state.selMaterial,\r\n        searchData: state.searchData,\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\r\n        updateQuery: (name_array, query_param) => dispatch({type: actionTypes.UPDATE_QUERY, names: name_array, params: query_param})\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matrix);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPaneModalTab.css';\r\nimport { CustomInput, Form, FormGroup, Label } from 'reactstrap';\r\nimport * as actionTypes from '../store/actions';\r\n\r\n\r\nclass LeftPaneModalTab extends Component {\r\n\r\n\r\n    constructor(props) {\r\n       super(props);\r\n\r\n       this.state = {\r\n         curInput: '',\r\n       };\r\n    }\r\n\r\n    onSelect = (input, type) => {\r\n        if(type == 'Function') {\r\n\r\n            this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n\r\n\r\n            this.props.onSelectFunction(input);\r\n        }\r\n        else if(type == 'BodyZones') {\r\n\r\n            this.props.onSelectBodyZones(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n        else if(type == 'Fabrication') {\r\n            this.props.onSelectFabrication(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n        else {\r\n            this.props.onSelectMaterial(input);\r\n             this.setState({\r\n               curInp: input,\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    /*\r\n        Use state to save current input.\r\n        Use conditional rendering to render the selected input differently\r\n    */\r\n\r\n    render() {\r\n            let inp = '';\r\n            let curInp = this.state.curInp;\r\n\r\n            inp = this.props.subtypes.map((input) => {\r\n\r\n                return (\r\n                    <div>\r\n                    {(curInp === input) ? (\r\n                    <div style={{background: 'black', color: '#A7AFBA', fontWeight: 'bold'}} onClick={() => this.onSelect(input, this.props.type)}\r\n                    className='modalHover'\r\n                                              key={input}\r\n                     >{input}</div>) : (<div onClick={() => this.onSelect(input, this.props.type)}\r\n                     className='modalHover'\r\n                                                                                      key={input}\r\n                                                             >{input}</div>)}\r\n                                                             </div>\r\n                );\r\n            }\r\n\r\n            )\r\n            return (\r\n\r\n            <div className='leftPaneModalTabBody'>\r\n                  {inp}\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectFunction: (value) => dispatch({type: actionTypes.SELECT_FUNCTION, val: value}),\r\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\r\n        onSelectFabrication: (value) => dispatch({type: actionTypes.SELECT_FABRICATION, val: value}),\r\n        onSelectMaterial: (value) => dispatch({type: actionTypes.SELECT_MATERIAL, val: value}),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LeftPaneModalTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './leftPane.css'\r\nimport LeftPaneModalTab from './LeftPaneModalTab';\r\n\r\nimport { Button, Fade } from 'reactstrap';\r\n\r\nclass LeftPaneModal extends Component {\r\n\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n         listArr: this.props.selArr,\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n            let funcModal = <LeftPaneModalTab style={{height: '25%'}}\r\n                                        type='Function'\r\n                                        subtypes={this.props.functions} />;\r\n\r\n            let bodyModal = <LeftPaneModalTab style={{height: '25%'}}\r\n             type='BodyZones'\r\n            subtypes={this.props.bodyZones} />;\r\n\r\n            let fabModal =  <LeftPaneModalTab style={{height: '25%'}}\r\n            type='Fabrication'\r\n            subtypes={this.props.fabrication} />;\r\n\r\n            let matModal = <LeftPaneModalTab style={{height: '25%'}}\r\n            type='Material'\r\n            subtypes={this.props.material} />;\r\n\r\n            return (\r\n\r\n\r\n            <div className=\"leftPaneModal\">\r\n\r\n                   {funcModal}\r\n                   {fabModal}\r\n                   {matModal}\r\n            </div>\r\n\r\n            );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    console.log(state.arrFunc);\r\n    return {\r\n        functions: state.arrFunc,\r\n        bodyZones: state.arrBod,\r\n        fabrication: state.arrFab,\r\n        material: state.arrMat,\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeftPaneModal);\r\n","import React, { Component } from 'react';\r\n\r\nimport { CardImg, CardBody,\r\n CardSubtitle } from 'reactstrap';\r\n\r\n import * as actionTypes from '.././store/actions';\r\n import { connect } from 'react-redux';\r\n\r\nimport './searchDisplay.css'\r\n\r\nimport { Card, Button, CardTitle, CardText, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nclass SearchDisplayTab extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tooltipOpenCost: false,\r\n      tooltipOpenImp: false,\r\n      tooltipOpenWear: false,\r\n    };\r\n\r\n    this.toggleImp = this.toggleImp.bind(this);\r\n    this.toggleCost = this.toggleCost.bind(this);\r\n    this.toggleWear = this.toggleWear.bind(this);\r\n\r\n  }\r\n\r\n  toggleCost = () => {\r\n    this.setState({\r\n      tooltipOpenCost: !this.state.tooltipOpenCost\r\n    });\r\n  }\r\n\r\n  toggleImp = () => {\r\n    this.setState({\r\n      tooltipOpenImp: !this.state.tooltipOpenImp\r\n    });\r\n  }\r\n\r\n  toggleWear = () => {\r\n    this.setState({\r\n      tooltipOpenWear: !this.state.tooltipOpenWear\r\n    });\r\n  }\r\n\r\n  updateBookmark = (name) => {\r\n\r\n    let temp = name.substring(10,30);\r\n    console.log(temp);\r\n    this.props.updateBookmark(temp);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let inp = '';\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n\r\n    if(this.props.type === 'Research')\r\n      j = 1;\r\n    else if(this.props.type === 'Tutorial')\r\n      j = 2;\r\n    else if(this.props.type === 'Aesthetic Approach')\r\n      j = 3;\r\n    else if(this.props.type === 'Design Concepts')\r\n      j = 4\r\n\r\n    inp = this.props.arr.map((input) => {\r\n\r\n      i++;\r\n      let check = this.props.bookMarks.includes(input[\"Reference Link\"].substring(10,30));\r\n\r\n\r\n      let wearToken = \"Wear1\";\r\n      if(parseInt(input[\"Wearability\"]) <= 10)\r\n        wearToken = \"Wear1\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 20)\r\n        wearToken = \"Wear2\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 50)\r\n        wearToken = \"Wear3\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 70)\r\n        wearToken = \"Wear4\";\r\n      else if(parseInt(input[\"Wearability\"]) <= 100)\r\n        wearToken = \"Wear5\";\r\n\r\n      let costToken = \"$$\"\r\n\r\n      if(parseInt(input[\"costMetric\"]) > 17)\r\n        costToken = \"$$$\";\r\n      else if(parseInt(input[\"costMetric\"]) >= 6)\r\n        costToken = \"$$\";\r\n      else\r\n        costToken = \"$\";\r\n\r\n\r\n      let col = \"green\";\r\n\r\n      if(parseInt(input[\"impMetric\"]) === 3)\r\n        col = \"red\";\r\n      else if(parseInt(input[\"impMetric\"]) === 2)\r\n        col = \"yellow\";\r\n\r\n      if(input[\"PIC ID\"] === undefined || input[\"PIC ID\"].length == 0)\r\n        return (\r\n          <div />\r\n        )\r\n\r\n      else {\r\n      return (\r\n\r\n        <div style={{marginLeft: '10px', borderWidth: \"medium\", borderStyle:\"solid\"}}>\r\n\r\n          <div className=\"bgimg\">\r\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\r\n\r\n            <img id=\"image\" src={\"ImageDatabase/\" + input[\"PIC ID\"] + \".jpg\"}  onerror={\"this.onerror=null; this.src=\" + \"ImageDatabase/\" + input[\"PIC ID\"] + \".png\"} alt=\"\" style={{height: '20vh', width: '100%', objectFit: 'cover'}}/>\r\n            </a>\r\n            <a  href={input[\"Reference Link\"]} target=\"_blank\">\r\n            <div id=\"title\" className=\"centered\">{(input[\"Reference Name\"].length < 40) ? (input[\"Reference Name\"]) : (input[\"Reference Name\"].substring(0, 40) + \"...\")}</div>\r\n            </a>\r\n\r\n            {(this.props.loggedIn) ? (<div id=\"title\" className=\"ticker\"><Input checked={check} onClick={() => this.updateBookmark(input[\"Reference Link\"])} type=\"checkbox\" />{' '}</div>) : (<div/>)}\r\n\r\n\r\n            <div className=\"cost\"><div style={{backgroundColor: \"#f7f7f7\", borderRadius: \"4px\", opacity: \"0.75\", height: '18px', width: '18px'}}>{costToken}</div>\r\n            <div class=\"tooltipCost\">Cost</div>\r\n\r\n        </div>\r\n\r\n            <div className=\"imp\">\r\n                  <div style={{height: '18px', width: '18px', backgroundColor: col}}>\r\n            </div>\r\n            <div class=\"tooltipImp\">Implementation</div>\r\n\r\n        </div>\r\n\r\n            <div className=\"wear\">\r\n                             <img src={\"ImageDatabase/Icons/\" + wearToken + \".png\"}\r\n                              alt=\"\" style={{height: '18px', width: '18px', objectFit: \"cover\"}}/>\r\n\r\n\r\n                  <div class=\"tooltipWear\">Wearability</div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n      )\r\n    }\r\n    });\r\n\r\n\r\n    return (\r\n      <div className=\"searchStore\">\r\n\r\n        <div className=\"leftPaneSearch\">\r\n            <div className=\"rotate1\">{this.props.type}</div>\r\n        </div>\r\n\r\n        <div className=\"searchTabContent\">\r\n          <div style={{display: 'flex', height: \"105%\", overflowX: 'scroll', overflowY: 'hidden'}}>\r\n            {inp}\r\n          </div>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateBookmark: (value) => dispatch({type: actionTypes.UPDATE_BOOKMARKS, val: value.toString(0,20)}),\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        bookMarks: state.bookMarks,\r\n\r\n        loggedIn: state.isLoggedIn,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplayTab);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './searchDisplay.css'\r\nimport SearchDisplayTab from './SearchDisplayTab'\r\nimport ListDisplayTab from './ListDisplayTab'\r\n\r\nimport { Table } from 'reactstrap';\r\n\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass SearchDisplay extends Component {\r\n\r\n\r\n  /*\r\n    Have a list view control variable in state\r\n  */\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n          filterData: [],\r\n          research: [],\r\n          tutorials: [],\r\n          aesthetics: [],\r\n          concepts: [],\r\n          listView: false,\r\n        };\r\n    }\r\n\r\n    filterFunc = (item) => {\r\n\r\n      return (item[\"Function 1\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 2\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()) || item[\"Function 3\"].toLowerCase().trim().includes(this.props.names[0].toLowerCase().trim()))\r\n    }\r\n\r\n    filterBod = (item) => {\r\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 2\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()) || item[\"Body Zone 3\"].toLowerCase().trim().includes(this.props.names[1].toLowerCase().trim()))\r\n    }\r\n\r\n    filterFab = (item) => {\r\n      return (item[\"Fabrication 1\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()) || item[\"Fabrication 2\"].toLowerCase().trim().includes(this.props.names[2].toLowerCase().trim()))\r\n    }\r\n\r\n    filterMat = (item) => {\r\n      return (item[\"Material 1\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 2\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()) || item[\"Material 3\"].toLowerCase().trim().includes(this.props.names[3].toLowerCase().trim()))\r\n    }\r\n\r\n    filterYear = (item) => {\r\n\r\n      return (item[\"Year\"] >= this.props.minYear && item[\"Year\"] <= this.props.maxYear)\r\n    }\r\n\r\n    filterVenue = (item) => {\r\n      console.log(this.props.venue);\r\n      return (this.props.venue === 'All' || item[\"Conference (VENUE)\"] === this.props.venue)\r\n    }\r\n\r\n    filterSource = (item) => {\r\n      return (this.props.source === 'both' || item[\"Source\"] === this.props.source)\r\n    }\r\n\r\n    shuffleArray = (array) => {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n          const j = Math.floor(this.random(i) * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n\r\n      return array;\r\n    }\r\n\r\n    random = (seed) => {\r\n      var x = Math.sin(seed++) * 10000;\r\n      return x - Math.floor(x);\r\n    }\r\n\r\n    render() {\r\n\r\n            let filterArr = this.props.allData;\r\n\r\n            if(!this.props.viewBookmarks) {\r\n                  if(!this.props.searchDisplay) {\r\n\r\n\r\n                          if(this.props.filter) {\r\n\r\n                            filterArr = filterArr.filter(this.filterYear);\r\n                            filterArr = filterArr.filter(this.filterVenue);\r\n                            filterArr = filterArr.filter(this.filterSource);\r\n                          }\r\n                            console.log(filterArr);\r\n\r\n                          if(this.props.params.includes('Function')) {\r\n                             filterArr = filterArr.filter(this.filterFunc);\r\n                          }\r\n\r\n                          if(this.props.params.includes('BodyZones')) {\r\n                             filterArr = filterArr.filter(this.filterBod);\r\n                          }\r\n                          if(this.props.params.includes('Fabrication')) {\r\n                             filterArr = filterArr.filter(this.filterFab);\r\n                          }\r\n                          if(this.props.params.includes('Material')) {\r\n                             filterArr = filterArr.filter(this.filterMat);\r\n                          }\r\n                }\r\n\r\n                else {\r\n\r\n                    filterArr = filterArr.filter((item) => {\r\n                      return item[\"Reference Name\"].toLowerCase().includes(this.props.searchQuery.toLowerCase());\r\n                  });\r\n                }\r\n          }\r\n\r\n\r\n          else {\r\n\r\n            filterArr = filterArr.filter((item) => {\r\n\r\n              console.log(item[\"Reference Link\"].substring(10,30));\r\n              console.log(this.props.bookMarks);\r\n\r\n              return this.props.bookMarks.includes(item[\"Reference Link\"].substring(10,30));\r\n            });\r\n\r\n          }\r\n\r\n          let researchArr = [];\r\n          let tutorialsArr = [];\r\n          let aestheticsArr = [];\r\n          let conceptsArr = [];\r\n          let patentsArr = [];\r\n\r\n          researchArr = filterArr.filter((item) => {\r\n            return item[\"Research\"].trim() === 'x'\r\n          });\r\n\r\n          tutorialsArr = filterArr.filter((item) => {\r\n            return item[\"Tutorial\"].trim() === 'x'\r\n          });\r\n\r\n          aestheticsArr = filterArr.filter((item) => {\r\n            return item[\"Aesthetic Approach\"].trim() === 'x'\r\n          });\r\n\r\n          conceptsArr = filterArr.filter((item) => {\r\n            return item[\"Design Concepts\"].trim() === 'x'\r\n          });\r\n\r\n          patentsArr = filterArr.filter((item) => {\r\n            return item[\"Patents\"].trim() === 'x'\r\n          });\r\n\r\n\r\n          let listView = this.props.listView;\r\n          let i = 1;\r\n          let listContents = filterArr.map((item) => {\r\n            return (\r\n              <tr>\r\n                <th scope=\"row\">{i++}</th>\r\n                <td>{item[\"Reference Name\"]}</td>\r\n                <td>{item[\"Reference Link\"]}</td>\r\n              </tr>\r\n            )\r\n          })\r\n\r\n          let corLabel = \"Pinned/Bookmarks\";\r\n\r\n          if(!this.props.viewBookmarks) {\r\n\r\n            corLabel = \"\";\r\n            if(this.props.params.includes('Function'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[0];\r\n              else {\r\n                corLabel = corLabel + ' + ' + this.props.names[0];\r\n              }\r\n\r\n            if(this.props.params.includes('BodyZones'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[1];\r\n              else {\r\n                corLabel = corLabel + ' + ' + this.props.names[1];\r\n              }\r\n\r\n            if(this.props.params.includes('Fabrication'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[2];\r\n              else {\r\n                corLabel = corLabel + ' + '  + this.props.names[2];\r\n              }\r\n\r\n            if(this.props.params.includes('Material'))\r\n              if(corLabel === \"\")\r\n                corLabel = corLabel + this.props.names[3];\r\n              else {\r\n                corLabel = corLabel + ' + ' + this.props.names[3];\r\n              }\r\n          }\r\n\r\n\r\n          return (\r\n\r\n            <div style={{width: \"100vw\"}}>\r\n              {(listView) ? (<div className=\"listSearch\">\r\n                    <Table striped>\r\n                    <thead>\r\n                      <th>#</th>\r\n                      <th>Reference Name</th>\r\n                      <th>Link</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      {listContents}\r\n                    </tbody>\r\n                  </Table>\r\n              </div>\r\n             ) : (\r\n               <div className=\"layoutSearch\">\r\n                     <SearchDisplayTab type='Research' arr={this.shuffleArray(researchArr)}/>\r\n                     <SearchDisplayTab type='Tutorials' arr={this.shuffleArray(tutorialsArr)}/>\r\n                     <SearchDisplayTab type='Aesthetics' arr={this.shuffleArray(aestheticsArr)}/>\r\n                     <SearchDisplayTab type='Concepts' arr={this.shuffleArray(conceptsArr)}/>\r\n                    <SearchDisplayTab type='Patents' arr={this.shuffleArray(patentsArr)}/>\r\n                    <div className=\"bottomBar\">\r\n                    <div onClick={this.props.backToSearch} className=\"backLabel\">\r\n                        <div>{\"<---- Go Back to Search\"}</div>\r\n                    </div>\r\n                      <div className=\"corLabel\">\r\n                          <div>{corLabel}</div>\r\n                      </div>\r\n                    </div>\r\n             </div>)}\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allData: state.searchData,\r\n        names: state.names,\r\n        params: state.params,\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n\r\n        listView: state.listView,\r\n\r\n        searchDisplay: state.searchTermDisplay,\r\n        searchQuery: state.searchTermQuery,\r\n\r\n        viewBookmarks: state.viewBookmarks,\r\n        bookMarks: state.bookMarks,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchDisplay);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CardImg, CardBody,\r\n CardSubtitle } from 'reactstrap';\r\n\r\nimport './searchDisplay.css'\r\n\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\n\r\nclass ListDisplayTab extends Component {\r\n\r\n  render() {\r\n\r\n    let inp = '';\r\n    let i = 1;\r\n    inp = this.props.arr.map((input) => {\r\n\r\n      return (\r\n        <tr>\r\n          <th scope=\"row\">{i++}</th>\r\n          <td>{input[\"Reference Name\"]}</td>\r\n          <td><a  href={input[\"Reference Link\"]}>{input[\"Reference Link\"]}</a></td>\r\n        </tr>\r\n    )});\r\n\r\n    return (\r\n      <div>\r\n      <h3>{this.props.type}</h3>\r\n      <Table dark>\r\n      <thead>\r\n        <tr>\r\n          <th>Number</th>\r\n          <th>Title</th>\r\n          <th>Link</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {inp}\r\n      </tbody>\r\n    </Table>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ListDisplayTab;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n\r\nclass ColCharts extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n  }\r\n\r\n  render() {\r\n\r\n    const label = this.props.label;\r\n\r\n    /*\r\n      I have search data and I have a label\r\n    */\r\n\r\n    let curList = [];\r\n    let data = [];\r\n    if(this.props.label === 'Function') {\r\n          curList = this.props.function;\r\n\r\n\r\n          curList = curList.map((subType) => {\r\n\r\n          let temp = this.props.searchData.filter((item) => {\r\n\r\n            return (item[\"Function 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n            || item[\"Function 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n            || item[\"Function 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n          });\r\n\r\n          return {name: subType, Results: temp.length}\r\n        });\r\n\r\n\r\n    data = curList;\r\n    }\r\n\r\n    else if(this.props.label === 'Fabrication') {\r\n\r\n      curList = this.props.fabrication;\r\n\r\n\r\n      curList = curList.map((subType) => {\r\n\r\n      let temp = this.props.searchData.filter((item) => {\r\n\r\n        return item[\"Fabrication 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Fabrication 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      });\r\n\r\n      return {name: subType, Results: temp.length}\r\n      });\r\n      data = curList;\r\n    }\r\n\r\n    else {\r\n\r\n      curList = this.props.material;\r\n\r\n\r\n      curList = curList.map((subType) => {\r\n\r\n      let temp = this.props.searchData.filter((item) => {\r\n\r\n        return (item[\"Material 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Material 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n        || item[\"Material 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n      });\r\n\r\n      return {name: subType, Results: temp.length}\r\n    });\r\n\r\n\r\n      data = curList;\r\n    }\r\n\r\n\r\n    return (\r\n      <div style={{width: \"50%\", display: \"flex\"}}>\r\n\r\n      <div style={{color:\"white\", fontWeight: \"bold\"}}>{this.props.label}</div>\r\n      <div style={{transform: \"translateX(-30px)\"}}>\r\n            <BarChart width={550} height={240} data={data}\r\n                margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n\r\n           <XAxis dataKey=\"name\"/>\r\n           <YAxis/>\r\n           <Tooltip cursor={false}/>\r\n           <Bar dataKey=\"Results\" fill=\"black\" />\r\n          </BarChart>\r\n    </div>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        function: state.functions,\r\n        material: state.material,\r\n        fabrication: state.fabrication,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ColCharts);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\n\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n\r\nclass BodyChart extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    let curList = [];\r\n    let data = [];\r\n\r\n    curList = this.props.bodyZones;\r\n\r\n    curList = curList.map((subType) => {\r\n\r\n    let temp = this.props.searchData.filter((item) => {\r\n\r\n      return (item[\"Body Zone 1\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      || item[\"Body Zone 2\"].toLowerCase().trim().includes(subType.toLowerCase().trim())\r\n      || item[\"Body Zone 3\"].toLowerCase().trim().includes(subType.toLowerCase().trim()))\r\n    });\r\n\r\n    return {name: subType, value: temp.length}\r\n  });\r\n\r\n    data = curList;\r\n    let out = {};\r\n    for(let i = 0; i < data.length; i++) {\r\n      out[data[i].name] = data[i].value;\r\n    }\r\n\r\n    console.log(out);\r\n\r\n    return (\r\n      <div style={{width: \"50%\", display: \"flex\"}}>\r\n          <div style={{color:\"white\", fontWeight: \"bold\"}}>Body Zones</div>\r\n          <div style={{transform: \"translate(20px, -30px)\", position: \"relative\"}}>\r\n              <img src={\"ImageDatabase/Icons/BodyStats.jpg\"}\r\n               alt=\"\" style={{height: '40vh', width: '25vw', objectFit: \"cover\"}}/>\r\n               <div style={{position: \"absolute\", top: \"12%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Head\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"23%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Back\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"33%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Chest\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"48%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Pelvic Region\"]}</div>\r\n               <div style={{position: \"absolute\", bottom: \"0.5%\", left: \"18%\", color: \"white\", fontSize: \"small\"}}>{out[\"Feet\"]}</div>\r\n\r\n               <div style={{position: \"absolute\", top: \"25%\", left: \"77%\", color: \"white\", fontSize: \"small\"}}>{out[\"Arms\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"48%\", left: \"78%\", color: \"white\", fontSize: \"small\"}}>{out[\"Wrist and Hand\"]}</div>\r\n               <div style={{position: \"absolute\", top: \"61%\", left: \"78%\", color: \"white\", fontSize: \"small\"}}>{out[\"Legs\"]}</div>\r\n\r\n               <div style={{position: \"absolute\", top: \"40%\", right: \"3.6%\", color: \"white\", fontSize: \"small\"}}>{out[\"Full Body\"]}</div>\r\n\r\n           </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        bodyZones: state.bodyZones,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(BodyChart);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport 'rc-slider/assets/index.css';\r\nimport './filterBody.css'\r\nimport Slider from 'rc-slider';\r\nimport * as actionTypes from '.././store/actions';\r\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\r\nimport { ButtonDropdown, Progress, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nimport ColCharts from './ColCharts'\r\nimport BodyChart from './BodyChart'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport { Label } from 'semantic-ui-react'\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = Slider.Range;\r\n\r\nclass FilterBody extends Component {\r\n\r\n    constructor(props) {\r\n          super(props);\r\n\r\n\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n          this.state = {\r\n            dropdownOpen: false,\r\n            venue: 'All',\r\n            modal: false,\r\n            showLabels: true,\r\n\r\n            sourceInit: 0,\r\n          };\r\n    }\r\n\r\n    toggleStats = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n\r\n      this.props.filterToggle();\r\n\r\n    }\r\n\r\n    toggle() {\r\n\r\n      this.setState(prevState => ({\r\n        dropdownOpen: !prevState.dropdownOpen,\r\n        showLabels: !prevState.showLabels\r\n      }));\r\n   }\r\n\r\n     onChange = (value) => {\r\n\r\n       console.log(value[1]);\r\n\r\n      this.props.filterData();\r\n      this.props.filterYear(value[0], value[1]);\r\n    }\r\n\r\n    onVenueClick = (value) => {\r\n\r\n      this.setState({\r\n        venue: value,\r\n      });\r\n\r\n      this.props.filterVenue(value);\r\n    }\r\n\r\n    onSourceClick = (value) => {\r\n\r\n      let temp = value;\r\n\r\n      if(this.state.sourceInit != 0) {\r\n      if(value === 'Engineering') {\r\n\r\n        if(this.props.source === 'Both')\r\n          temp = \"Fashion\"\r\n        else {\r\n          temp = \"Both\"\r\n        }\r\n\r\n      }\r\n      else if(value === 'Fashion') {\r\n\r\n        if(this.props.source === 'Both')\r\n          temp = \"Engineering\"\r\n        else {\r\n          temp = \"Both\"\r\n        }\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.setState(prevState => ({\r\n        sourceInit: !prevState.sourceInit + 1,\r\n      }));\r\n    }\r\n\r\n    this.props.filterSource(temp);\r\n    }\r\n\r\n    render() {\r\n\r\n      let venueArr = this.props.searchData;\r\n      venueArr = venueArr.map((venue) => venue[\"Conference (VENUE)\"]);\r\n      venueArr.unshift('All')\r\n\r\n      let filterEngineering = this.props.searchData.filter((item) => {\r\n        return (item[\"Source\"] === \"Engineering\" || item[\"Source\"] === \"Both\")\r\n      });\r\n\r\n      let filterFashion = this.props.searchData.filter((item) => {\r\n        return (item[\"Source\"] === \"Fashion\" || item[\"Source\"] === \"Both\")\r\n      });\r\n\r\n      let engLength = filterEngineering.length;\r\n      let fashLength = filterFashion.length;\r\n\r\n      engLength = engLength * 100 / (engLength + fashLength);\r\n      fashLength = fashLength * 100 / (fashLength + engLength);\r\n\r\n      venueArr = [...new Set(venueArr)];\r\n\r\n      venueArr = venueArr.map((venue) => {\r\n        return (\r\n          <DropdownItem onClick={() => this.onVenueClick(venue)}>{venue}</DropdownItem>\r\n        )\r\n      });\r\n\r\n      const style = { width: 400, margin: 50 };\r\n\r\n      const dataPie = [\r\n          {value: 25, color: \"black\", title: \"Function\"},\r\n          {value: 50, color: \"red\", title: \"BodyZones\"},\r\n          {value: 30, color: \"green\", title: \"Material\"},\r\n          {value: 20, color: \"blue\", title: \"Fabrication\"},\r\n      ]\r\n\r\n\r\n      let yearData = [];\r\n\r\n      for(let i = 1990; i <= 2018; i++) {\r\n\r\n        let temp = this.props.searchData.filter((item) => {\r\n\r\n          return item[\"Year\"] === i.toString();\r\n        })\r\n\r\n        yearData = [\r\n            ...yearData,\r\n            {\r\n              name: i.toString(),\r\n              Projects: temp.length,\r\n            }\r\n        ];\r\n\r\n\r\n      }\r\n\r\n        const closeBtn = <Button onClick={this.toggleStats} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n      return (\r\n          <div>\r\n              <div>Time Frame</div>\r\n              <BarChart width={280} height={150} data={yearData}\r\n                  margin={{top: 5, right: 30, left: 0, bottom: 0}}>\r\n                  <XAxis dataKey=\"name\" hide={true}/>\r\n                  <Tooltip viewBox={{height: 50, width: 50 }} cursor={false}/>\r\n                  <Bar dataKey=\"Projects\" />\r\n             </BarChart>\r\n\r\n              <Range handleStyle={[{ backgroundColor: 'black'}, {backgroundColor: 'black' }]} trackStyle={[{ backgroundColor: 'grey', height: \"6px\"}]}\r\n              allowCross={false}  railStyle={{ backgroundColor: 'black' }} min={1990} max={2018} defaultValue={[1990, 2018]} onChange={(value) => this.onChange(value)} />\r\n              <div>{this.props.minYear}<span style={{float: \"right\"}}>{this.props.maxYear}</span></div>\r\n              <br />\r\n              <div>Publication Venue</div>\r\n              <ButtonDropdown style={{width:\"90%\", height: '25px', transform: \"translateX(5%)\"}} isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                      <DropdownToggle style={{marginBottom: \"-5px\", backgroundColor: \"white\", color: \"#9B089A\"}} caret>\r\n                        {this.state.venue}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu style={{width:\"105%\", overflowY:\"scroll\", height:\"40vh\"}}>\r\n                        {venueArr}\r\n                      </DropdownMenu>\r\n              </ButtonDropdown>\r\n\r\n              <div style={{marginTop: \"1.3vh\"}}>Filter by:</div>\r\n              <div style={{marginTop: \"8px\", marginRight: \"20px\", marginLeft: \"20px\"}}>\r\n                {(this.props.source === 'Both' || this.props.source === 'Engineering') ? (<Button className=\"btnSelectorClicked\" onClick={() => this.onSourceClick(\"Engineering\")}>Engineering</Button>)\r\n                  : (<Button className=\"btnSelector\" onClick={() => this.onSourceClick(\"Engineering\")}>Engineering</Button>)}\r\n                {(this.props.source === 'Both' || this.props.source === 'Fashion') ? (<Button className=\"btnSelectorClicked\" style={{float: \"right\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)\r\n                 : (<Button className=\"btnSelector\" style={{float: \"right\"}} onClick={() => this.onSourceClick(\"Fashion\")}>Fashion</Button>)}\r\n              </div>\r\n\r\n              <div style={{marginTop: \"8px\"}}>\r\n                % Contribution\r\n              </div>\r\n              <div style={{marginTop: '8px', marginLeft: '10px'}}>\r\n                {(this.state.showLabels) ? (<><Label style={{transform: \"translateY(4px)\", backgroundColor: \"#f98686\"}} key=\"Orange\" />{' '}<span>Engineering</span>{' '}\r\n                <Label style={{transform: \"translateY(4px)\", marginLeft: \"10px\"}} color=\"red\" key=\"red\" />{' '}<span>Fashion</span>{' '}</>) : (<div style={{height: \"2vh\"}}>Placeholder</div>)}\r\n\r\n                  <br />\r\n                  <div>\r\n                  <br />\r\n                  <Progress multi>\r\n                    <Progress className=\"engStyle\" bar value={engLength} />\r\n                    <Progress bar color=\"danger\" value={fashLength} />\r\n                  </Progress>\r\n                  </div>\r\n              </div>\r\n\r\n              <div style={{marginTop: \"8px\", marginLeft: \"20%\"}}>\r\n                <Button onClick={this.toggleDisplay} outline color=\"secondary\">{(this.props.listView) ? (\"View Results in Original Form\") : (\"View Results in List Form\")}</Button>{' '}\r\n              </div>\r\n\r\n              {(this.props.loggedIn) ? (<div style={{marginTop: \"8px\", marginLeft: \"20%\"}}>\r\n                <Button onClick={this.toggleBookmarks} outline color=\"secondary\">{(this.props.viewBookmarks) ? (\"View all Results\") : (\"View Pinned/Bookmarks\")}</Button>{' '}\r\n              </div>) : (<div/>)}\r\n\r\n              <div style={{marginTop: \"13px\", marginLeft: \"27%\", zIndex: \"2500 !important\"}}>\r\n\r\n\r\n                      <Button outline color=\"secondary\" onClick={this.toggleStats}>Resource Statistics</Button>\r\n\r\n                      <Modal size=\"lg\" style={{maxWidth: '100vw', maxHeight: '100vh', width: '100vw', height: '100vh'}} isOpen={this.state.modal} toggle={this.toggle}>\r\n                        <ModalHeader close={closeBtn} style={{backgroundColor: \"black\", color: \"white\"}} toggle={this.toggleStats}>Resource Statistics</ModalHeader>\r\n\r\n                        <ModalBody style={{backgroundColor: \"black\", overflowY: \"auto\"}}>\r\n\r\n                            <div style={{display: \"flex\", height: \"49%\"}}>\r\n                               <ColCharts label=\"Function\" />\r\n                               <ColCharts label=\"Material\" />\r\n                            </div>\r\n\r\n                            <div style={{display: \"flex\",height: \"49%\", marginTop: \"2%\"}}>\r\n                               <ColCharts label=\"Fabrication\" />\r\n                               <BodyChart />\r\n                            </div>\r\n\r\n                        </ModalBody>\r\n\r\n                      </Modal>\r\n           </div>\r\n\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n    toggleDisplay = () => {\r\n\r\n      this.props.toggleDisplay();\r\n    }\r\n\r\n    toggleBookmarks = () => {\r\n\r\n      this.props.toggleBookmarks();\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        filterData: () => dispatch({type: actionTypes.FILTER_DATA}),\r\n        filterYear: (minYear, maxYear) => dispatch({type: actionTypes.FILTER_YEAR, minYear: minYear, maxYear: maxYear}),\r\n        filterVenue: (venue) => dispatch({type: actionTypes.FILTER_VENUE, val: venue}),\r\n        filterSource: (source) => dispatch({type: actionTypes.FILTER_SOURCE, val: source}),\r\n        toggleDisplay: () => dispatch({type: actionTypes.TOGGLE_DISPLAY}),\r\n        toggleBookmarks: () =>  dispatch({type: actionTypes.VIEW_BOOKMARKS}),\r\n\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n        filter: state.filter,\r\n        minYear: state.minYear,\r\n        maxYear: state.maxYear,\r\n        venue: state.venueFilter,\r\n        source: state.sourceFilter,\r\n        searchData: state.searchData,\r\n        listView: state.listView,\r\n        viewBookmarks: state.viewBookmarks,\r\n\r\n        loggedIn: state.isLoggedIn,\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBody);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './filterBody.css'\r\n\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nimport FilterBody from './FilterBody';\r\nimport * as actionTypes from '../store/actions';\r\n\r\nclass FilterPane extends Component {\r\n\r\n  /*\r\n    Make a boolean in store, whether results to be displayed are from searchQuery\r\n    Store the search query itself\r\n\r\n    Define an action to store search query\r\n  */\r\n\r\n\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n      this.state = {\r\n        value: '',\r\n        popoverOpen: false,\r\n        visibility: 'visible',\r\n      };\r\n    }\r\n\r\n    toggleVisibility = () => {\r\n      if(this.state.visibility === 'visible') {\r\n        this.setState({\r\n          visibility: 'hidden',\r\n        });\r\n      }\r\n      else {\r\n        this.setState({\r\n          visibility: 'visible',\r\n        });\r\n      }\r\n\r\n      console.log(this.state.visibility);\r\n    }\r\n\r\n    toggle() {\r\n      this.setState({\r\n        popoverOpen: !this.state.popoverOpen\r\n      });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n       this.setState({value: event.target.value});\r\n     }\r\n\r\n   handleSubmit = (event) => {\r\n\r\n     this.props.toggleDisplay();\r\n     this.props.searchTermDisplayUpdate();\r\n     this.props.searchTermQueryUpdate(this.state.value);\r\n\r\n     this.setState({value: ''});\r\n     event.preventDefault();\r\n\r\n   }\r\n\r\n    render() {\r\n\r\n      let val = 'translateX(-1.2vw)';\r\n      if(this.state.popoverOpen){\r\n        val = 'translateX(-24vw)';\r\n\r\n      }\r\n\r\n      let temp = 'translate(-100px, 10px)'\r\n\r\n      //if(this.state.popoverOpen)\r\n        //temp = 'translate(-350px, 10px)'\r\n\r\n      return (\r\n\r\n          <div className={(this.props.move) ? ((!this.props.listView) ? (\"filterTabMove\") : (\"filterTabExtra\")) : (\"filterTab\")}>\r\n\r\n          <div className=\"searchBar\">\r\n          <form onSubmit={this.handleSubmit} id=\"demo-2\">\r\n            <input type=\"search\" placeholder=\"Search\" value={this.state.value} onChange={this.handleChange} />\r\n          </form>\r\n          </div>\r\n\r\n          <div style={{transform: \"translate(0, 33vh)\", padding: \"0 0 0 0\", zIndex: \"999\"}}>\r\n              <div style={{transform: val}}>\r\n                  <Button className=\"rotate6\" style={{ zIndex: \"900\", width: \"180px\", height: \"25px\"}} outline color=\"info\" id={'PopoverFilter'}><div style={{ transform: \"translateY(-10px)\",  borderTopStyle: \"solid\", borderColor: \"black\", borderWidth: \"2px\"}}><b> - - - - - -</b></div></Button>\r\n               </div>\r\n\r\n               <Popover hideArrow={true} style={{width: \"102%\", height: \"100%\", color: \"black\", transform: \"translateX(-0.3vw)\", zIndex: \"10\"}} placement=\"right\" isOpen={this.state.popoverOpen} target={'PopoverFilter'} toggle={this.toggle}>\r\n                 <PopoverHeader style={{fontWeight: \"bold\", width: \"102%\", backgroundColor: \"black\", color: \"white\"}}>Data Filter</PopoverHeader>\r\n                 <PopoverBody style={{color: \"black\", width: \"102%\", fontWeight: \"bold\", backgroundColor: \"black\", color: \"white\"}}><FilterBody filterToggle={this.toggleVisibility} showLoop={this.props.showLoop}/></PopoverBody>\r\n               </Popover>\r\n               </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        searchTermDisplayUpdate: () => dispatch({type: actionTypes.SEARCH_TERM_DISPLAY}),\r\n        searchTermQueryUpdate: (value) => dispatch({type: actionTypes.SEARCH_TERM_QUERY, val: value}),\r\n        toggleDisplay: () => dispatch({type: actionTypes.SEARCH_DISPLAY}),\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listView: state.listView,\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPane);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './bodyZones.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport ImageMapper from 'react-image-mapper';\r\nimport ColCharts from './ColCharts'\r\nimport BodyChart from './BodyChart'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass BodyZones extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n          zone: 'none',\r\n          modal: false\r\n        };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n\r\n  clicked = (area) => {\r\n\r\n    if(this.state.name === 'none') {\r\n\r\n      this.setState({\r\n        zone: area.name\r\n      });\r\n\r\n      this.props.onSelectBodyZones(area.name);\r\n    }\r\n\r\n    else {\r\n\r\n      if(area.name != this.state.zone) {\r\n\r\n        this.setState({\r\n          zone: area.name\r\n        });\r\n\r\n        this.props.onSelectBodyZones(area.name);\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          zone: 'none'\r\n        });\r\n      }\r\n   }\r\n\t}\r\n\r\n    render() {\r\n\r\n      let img = \"ImageDatabase/HumanBody/Androgynous.png\";\r\n\r\n      if(this.state.zone === 'none')\r\n        img = \"ImageDatabase/HumanBody/Androgynous.png\";\r\n\r\n      else if(this.state.zone === 'Head')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_head.png\";\r\n\r\n      else if(this.state.zone === 'Chest')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_chest.png\";\r\n\r\n      else if(this.state.zone === 'Back')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_back.png\";\r\n\r\n      else if(this.state.zone === 'Pelvic Region')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_pelvicregion.png\";\r\n\r\n      else if(this.state.zone === 'Legs')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_legs.png\";\r\n\r\n      else if(this.state.zone === 'Feet')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_feet.png\";\r\n\r\n      else if(this.state.zone === 'Arms')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_arm.png\";\r\n\r\n      else if(this.state.zone === 'Wrist and Hand')\r\n        img = \"ImageDatabase/HumanBody/Androgynous_handnwrist.png\";\r\n\r\n      let myMap = {\r\n          name: \"my-map\",\r\n          areas: [\r\n          {name: \"Head\", shape: \"rect\", coords: [70, 0, 110, 57], fillColor: \"transparent\"},\r\n          {name: \"Chest\", shape: \"rect\", coords: [53, 57, 90, 164], fillColor: \"transparent\"},\r\n          {name: \"Back\", shape: \"rect\", coords: [90, 57, 127, 164], fillColor: \"transparent\"},\r\n          {name: \"Pelvic Region\", shape: \"rect\", coords: [50, 168, 130, 214], fillColor: \"transparent\"},\r\n          {name: \"Legs\", shape: \"rect\", coords: [50, 214, 130, 368], fillColor: \"transparent\"},\r\n          {name: \"Feet\", shape: \"rect\", coords: [45, 368, 135, 400], fillColor: \"transparent\"},\r\n\r\n          {name: \"Arms\", shape: \"rect\", coords: [22, 67, 53, 174], fillColor: \"transparent\"},\r\n          {name: \"Arms\", shape: \"rect\", coords: [127, 67, 158, 174], fillColor: \"transparent\"},\r\n\r\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [0, 174, 30, 215], fillColor: \"transparent\"},\r\n          {name: \"Wrist and Hand\", shape: \"rect\", coords: [148, 174, 178, 215], fillColor: \"transparent\"}\r\n          ]\r\n      }\r\n\r\n            const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n            return (\r\n             <div className=\"container\">\r\n                 <div style={{transform: \"translate(-5%, 20%)\"}}>\r\n                       <ImageMapper src={img} map={myMap} width={225} height={400}\r\n                        \tonClick={area => this.clicked(area)}\r\n                        />\r\n                        <div style={{marginTop: \"10%\", color: \"white\", fontWeight: \"600\", fontSize: \"small\"}}>\r\n                            <div>CLICK ON THE</div>\r\n                            <div>BODY ZONES SELECTION</div>\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSelectBodyZones: (value) => dispatch({type: actionTypes.SELECT_BODYZONES, val: value}),\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(BodyZones);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomePage.css'\r\nimport * as actionTypes from '../store/actions';\r\nimport {Alert} from 'reactstrap';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nclass HomePage extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n        this.state = {\r\n          zone: 'none',\r\n          signUpEmail: '',\r\n          signUpUsername: '',\r\n          signUpPassword: '',\r\n          signUpWarning: '',\r\n          loginUsername: '',\r\n          loginPassword: '',\r\n          loginWarning: '',\r\n          modal: false\r\n        };\r\n\r\n      this.onSignUpEmailChange = this.onSignUpEmailChange.bind(this);\r\n      this.onSignUpUsernameChange = this.onSignUpUsernameChange.bind(this);\r\n      this.onSignUpPasswordChange = this.onSignUpPasswordChange.bind(this);\r\n      this.onSignUpWarningChange = this.onSignUpWarningChange.bind(this);\r\n\r\n      this.onLoginUsernameChange = this.onLoginUsernameChange.bind(this);\r\n      this.onLoginPasswordChange = this.onLoginPasswordChange.bind(this);\r\n      this.onLoginWarningChange = this.onLoginWarningChange.bind(this);\r\n\r\n      this.onSignUpSubmit = this.onSignUpSubmit.bind(this);\r\n      this.onLoginSubmit = this.onLoginSubmit.bind(this);\r\n  }\r\n\r\n    toggle = () => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal\r\n      }));\r\n    }\r\n\r\n    onSignUpWarningChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpWarning: 'Invalid credentials',\r\n      });\r\n    }\r\n\r\n    onLoginWarningChange = (event) => {\r\n\r\n      this.setState({\r\n        loginWarning: 'Invalid credentials',\r\n      });\r\n    }\r\n\r\n    onSignUpUsernameChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpUsername: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginUsernameChange = (event) => {\r\n\r\n      this.setState({\r\n        loginUsername: event.target.value,\r\n      });\r\n    }\r\n\r\n\r\n    onSignUpEmailChange = (event) => {\r\n\r\n\r\n      this.setState({\r\n        signUpEmail: event.target.value,\r\n      });\r\n    }\r\n\r\n    onSignUpPasswordChange = (event) => {\r\n\r\n      this.setState({\r\n        signUpPassword: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginPasswordChange = (event) => {\r\n\r\n      this.setState({\r\n        loginPassword: event.target.value,\r\n      });\r\n    }\r\n\r\n    onLoginSubmit = () => {\r\n\r\n      let success = true;\r\n      let bookMarks = [];\r\n\r\n      let authSuccess = this.props.authSuccess;\r\n      let toggleDisp = this.props.toggle;\r\n\r\n      let onLoginWarningChange = this.onLoginWarningChange;\r\n\r\n      let jsonToSend = JSON.stringify({\r\n           username: this.state.loginUsername,\r\n           password: this.state.loginPassword\r\n       })\r\n\r\n       let pwd = this.state.loginPassword;\r\n\r\n       var request = new Request('https://chimerabackend.herokuapp.com/api/login/', {\r\n             method: 'POST',\r\n             headers: {\r\n               'Content-Type': 'application/json',\r\n             },\r\n             body: jsonToSend\r\n           });\r\n       fetch(request).then(function(response){\r\n\r\n          if(response.status.toString() === '200') {\r\n             response.text().then(function(text) {\r\n\r\n                 var objReceived = JSON.parse(text);\r\n                 if (objReceived.message === 'SUCCESS') {\r\n\r\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\r\n                    toggleDisp();\r\n                 }\r\n                 else {\r\n\r\n                     onLoginWarningChange();\r\n\r\n                 }\r\n             })\r\n           }\r\n\r\n           else {\r\n             onLoginWarningChange();\r\n           }\r\n       })\r\n\r\n    }\r\n\r\n    onSignUpSubmit = () => {\r\n\r\n      let success = true;\r\n      let bookMarks = [];\r\n\r\n      let authSuccess = this.props.authSuccess;\r\n      let toggleDisp = this.props.toggle;\r\n\r\n      let onSignUpWarningChange = this.onSignUpWarningChange;\r\n\r\n      let pwd = this.state.signUpPassword;\r\n\r\n      let jsonToSend = JSON.stringify({\r\n           username: this.state.signUpUsername,\r\n           email: this.state.signUpEmail,\r\n           password: this.state.signUpPassword\r\n       })\r\n\r\n       var request = new Request('https://chimerabackend.herokuapp.com/api/signup/', {\r\n             method: 'POST',\r\n             headers: {\r\n               'Content-Type': 'application/json',\r\n             },\r\n             body: jsonToSend\r\n           });\r\n       fetch(request).then(function(response){\r\n\r\n          if(response.status.toString() === '200') {\r\n             response.text().then(function(text) {\r\n\r\n                 var objReceived = JSON.parse(text);\r\n                 if (objReceived.message === 'SUCCESS') {\r\n\r\n                    console.log(objReceived);\r\n                    authSuccess(objReceived.username, pwd, objReceived.bookmarks);\r\n                    toggleDisp();\r\n                 }\r\n                 else {\r\n\r\n                     onSignUpWarningChange();\r\n\r\n                 }\r\n             })\r\n           }\r\n\r\n           else {\r\n             onSignUpWarningChange();\r\n           }\r\n       })\r\n    }\r\n\r\n    render() {\r\n\r\n      const closeBtn = <Button onClick={this.toggle} color=\"secondary\">{\"Close (X)\"}</Button>\r\n\r\n      /*\r\n        Make sign up warning and login warning in store and if success, call searchDisplay or toggleSearchDisplay.\r\n        Whateva\r\n      */\r\n\r\n\r\n\r\n      return (\r\n\r\n      <div style={{height: \"100vh\", width:\"100vw\", backgroundSize: \"cover\", backgroundColor: \"black\"}}>\r\n\r\n      <div style={{height: '50%', width: '50%'}}>\r\n      <img src={\"ImageDatabase/Icons/Home.png\"}\r\n       alt=\"\" style={{width: '50vw', transform: \"translate(26vw, 18vh)\", objectFit: \"cover\"}}/>\r\n      </div>\r\n\r\n         <div className=\"containerHome\">\r\n\r\n         <div style={{color: \"white\", textAlign: \"center\", marginLeft: \"5%\", marginTop: \"5%\"}}>Welcome to Chimera, an interactive search engine for Wearables</div>\r\n\r\n         <Button outline size=\"lg\" style={{color: \"white\", marginLeft: \"50%\", marginTop: \"2%\", borderStyle: \"thin\", borderColor: \"white\", borderRadius: \"2px\"}} color=\"black\" onClick={this.toggle}>Enter</Button>{' '}\r\n\r\n         <Modal size=\"lg\" style={{backgroundColor: \"black\", maxWidth: '90vw',  maxHeight: '90vh', width: '90vw', height: '90vh'}} isOpen={this.state.modal} toggle={this.toggle}>\r\n\r\n           <ModalBody style={{backgroundColor: \"black\", color: \"white\"}}>\r\n           <div style={{display: \"flex\"}}>\r\n            <div style={{width: \"30%\", marginTop: \"1.25%\"}}>\r\n               <Form>\r\n                      {(this.state.loginWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.loginWarning}</div>) : (<div></div>)}\r\n                       <div>Username</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onLoginUsernameChange} value={this.state.loginUsername}/>\r\n\r\n                       <div style={{marginTop: \"4.83%\"}}>Password</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onLoginPasswordChange} value={this.state.loginPassword} />\r\n\r\n                     <Button onClick={this.onLoginSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Login</Button>\r\n                </Form>\r\n            </div>\r\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\r\n               <Form>\r\n                        {(this.state.signUpWarning !== '') ? (<div style={{color: \"red\"}}>{this.state.signUpWarning}</div>) : (<div></div>)}\r\n                       <div style={{marginTop: \"10px\"}}>Username</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"text\" onChange={this.onSignUpUsernameChange} value={this.state.signUpUsername}/>\r\n\r\n                       <div style={{marginTop: \"10px\"}}>Email</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\" onChange={this.onSignUpEmailChange} value={this.state.signUpEmail}/>\r\n\r\n                       <div style={{marginTop: \"10px\"}}>Password</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"password\" onChange={this.onSignUpPasswordChange} value={this.state.signUpPassword} />\r\n\r\n                      <Button onClick={this.onSignUpSubmit} style={{marginTop: \"10%\", marginLeft: \"38%\"}} color=\"secondary\">Sign Up</Button>\r\n                </Form>\r\n            </div>\r\n\r\n            <div style={{width: \"30%\", marginLeft: \"7%\"}}>\r\n               <Form>\r\n                       <div style={{marginTop: \"10px\"}}>Username</div>\r\n                       <Input style={{ borderRadius: \"0px\"}} type=\"email\"/>\r\n\r\n                      <Button onClick={this.props.toggle} style={{marginTop: \"10%\", marginLeft: \"35%\"}} color=\"secondary\">Guest Mode</Button>\r\n                </Form>\r\n            </div>\r\n\r\n            </div>\r\n            <img src={\"ImageDatabase/Icons/MiniHome.png\"}\r\n             alt=\"\" style={{width: '10%', height: \"20%\", transform: \"translate(39vw, 18vh)\", objectFit: \"cover\"}}/>\r\n           </ModalBody>\r\n\r\n         </Modal>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchData: state.searchData,\r\n        function: state.functions,\r\n        material: state.material,\r\n        fabrication: state.fabrication,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authSuccess: (valuename, valuepass, value) => dispatch({type: actionTypes.AUTH_SUCCESS, valName: valuename, valPassword: valuepass, val: value}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\nimport \"react-awesome-popover/build/index.css\";\r\nimport { connect } from 'react-redux';\r\nimport LeftPane from './components/LeftPane';\r\nimport Matrix from './components/Matrix';\r\nimport LeftPaneModal from './components/LeftPaneModal';\r\nimport SearchDisplay from './components/SearchDisplay';\r\nimport FilterPane from './components/FilterPane';\r\nimport BodyZones from './components/BodyZones';\r\nimport HomePage from './components/HomePage'\r\nimport { Button, Fade } from 'reactstrap';\r\nimport Tabletop from 'tabletop';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport * as actionTypes from './store/actions';\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        data: [],\r\n        displayHome: true,\r\n      }\r\n  }\r\n\r\n  toggleToSearch = () => {\r\n\r\n    this.setState({\r\n      displayHome: false,\r\n    })\r\n  }\r\n\r\n  toggleBack = () => {\r\n\r\n    this.setState({\r\n      displayHome: true,\r\n    })\r\n  }\r\n\r\n/*\r\n    1) Create a modal for login when start is clicked\r\n    2) Make a state variable, isLoggen in, only display bookmark related features if user is indeed logged in\r\n*/\r\n    componentDidMount() {\r\n\r\n        Tabletop.init({\r\n          key: '19SNEbgmJqzFkXajdTnCDN5S6-PHmqFIGoN_MCFeOMcc',\r\n          callback: googleData => {\r\n\r\n            let temp = googleData[\"Sheet1\"].elements;\r\n\r\n            let wearability = this.computeWearability(googleData[\"Wearability\"].elements);\r\n            let costmetric = this.computeCostMetric(googleData[\"Sheet1\"].elements);\r\n            let impMetric = this.computeImplementationMetric(googleData[\"Sheet1\"].elements);\r\n            for(let i = 0; i < temp.length; i++) {\r\n                  temp[i] = {\r\n                 ...temp[i],\r\n                 Wearability: wearability[i][\"Wearability\"],\r\n                 costMetric: costmetric[i][\"costMetric\"],\r\n                 impMetric: impMetric[i][\"impMetric\"],\r\n               };\r\n            }\r\n\r\n            console.log(temp);\r\n            this.props.updateSearchData(temp);\r\n          },\r\n          simpleSheet: false\r\n        })\r\n\r\n    }\r\n\r\n    computeImplementationMetric = (data) => {\r\n\r\n      let fabricationChart =\r\n      {\"laser cutting\":\t3,\"3d printing\":\t9,\"layering\": 1,\"printing\": 3,\"painting\": 3,\r\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 9,\"soldering\":\t3,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\r\n       \"knit\": 9,\"embroidery and applique\":\t9,\r\n       \"patchwork and patterning\": 3,\"woven\": 3,\"non woven\":\t3,\r\n      \"machining\":\t3,\"cut and sew\":\t1, \"joining\": 1};\r\n\r\n      let functionChart =\r\n        {'storage': 1, 'breathability': 3, 'energy harvesting': 9, 'feedback': 9,\r\n         'display': 3, 'electronic elements connections': 3, 'wireless communication': 9, 'control': 9, 'movement': 3,\r\n          'sensing': 3, 'protective': 1, 'magnetic': 1, 'cognitive': 9, 'modularity': 3, 'emissivity': 3,\r\n        'wearability': 3, 'morphology': 3, 'aesthetics': 3, 'gestures': 3};\r\n\r\n      let impMetric = [];\r\n\r\n      for(let i = 0; i < data.length; i++) {\r\n\r\n          let fabScore = 0;\r\n          let funcScore = 0;\r\n\r\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\r\n            fabScore += fabricationChart[data[i][\"Fabrication 1\"]];\r\n          }\r\n\r\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\r\n            fabScore += fabricationChart[data[i][\"Fabrication 2\"]];\r\n          }\r\n\r\n          if(data[i][\"Function 1\"].toLowerCase() in functionChart) {\r\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 1\"]]);\r\n          }\r\n\r\n          if(data[i][\"Function 2\"].toLowerCase() in functionChart) {\r\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 2\"]]);\r\n          }\r\n\r\n          if(data[i][\"Function 3\"].toLowerCase() in functionChart) {\r\n            funcScore = Math.max(funcScore, functionChart[data[i][\"Function 3\"]]);\r\n          }\r\n\r\n          let temp = fabScore * funcScore;\r\n\r\n          let ans = 1;\r\n          if(temp <= 12)\r\n            ans = 1;\r\n          else if(temp > 12 && temp < 54)\r\n            ans = 2;\r\n          else {\r\n            ans = 3;\r\n          }\r\n\r\n          impMetric[i] = {\"impMetric\": ans};\r\n      }\r\n\r\n\r\n      return impMetric;\r\n\r\n\r\n  }\r\n\r\n    computeCostMetric = (data) => {\r\n\r\n      let fabricationChart =\r\n      {\"laser cutting\":\t9,\"3d printing\":\t9,\"layering\": 3,\"printing\": 3,\"painting\": 3,\r\n      \"sticking\": 1,\"heat pressing\": 9,\"heat transfer\": 3,\"soldering\":\t1,\"origami\":\t1,\"molding and casting\":\t9,\"pleating and folding\": 3,\r\n       \"knit\": 1,\"embroidery and applique\":\t3,\r\n       \"patchwork and patterning\": 3,\"woven\": 9,\"non woven\":\t9,\r\n       \"machining\":\t9,\"cut and wew\":\t1, \"joining\": 3};\r\n\r\n\r\n      /*\r\n        INKS AND FINISHES\r\n      */\r\n      let materialChart =\r\n      {\r\n          \"conductive inks\": 3,\r\n          \"polymers\": 9,\r\n          \"molding materials\": 9,\r\n          \"threads\": 1,\r\n          \"conductive threads\":\t3,\r\n          \"adhesives\": 3,\r\n          \"paper and cardboard\": 1,\r\n          \"electronics\": 9,\r\n          \"textiles and composites\": 1,\r\n          \"hide\":\t1,\r\n          \"hardware\": 1,\r\n          \"organic materials\": 9,\r\n          \"inks & finishes\": 0,\r\n          \"metal\": 3,\r\n          \"shape memory alloy\": 9\r\n      };\r\n\r\n      let costMetric = [];\r\n\r\n      for(let i = 0; i < data.length; i++) {\r\n\r\n          let fabScore = 0;\r\n          let matScore = 0;\r\n\r\n          if(data[i][\"Fabrication 1\"].toLowerCase() in fabricationChart) {\r\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 1\"]]);\r\n          }\r\n\r\n          if(data[i][\"Fabrication 2\"].toLowerCase() in fabricationChart) {\r\n            fabScore = Math.max(fabScore, fabricationChart[data[i][\"Fabrication 2\"]]);\r\n          }\r\n\r\n          if(data[i][\"Material 1\"].toLowerCase() in materialChart) {\r\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 1\"]]);\r\n          }\r\n\r\n          if(data[i][\"Material 2\"].toLowerCase() in materialChart) {\r\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 2\"]]);\r\n          }\r\n\r\n          if(data[i][\"Material 3\"].toLowerCase() in materialChart) {\r\n            matScore = Math.max(matScore, materialChart[data[i][\"Material 3\"]]);\r\n          }\r\n\r\n          costMetric[i] = {\"costMetric\": fabScore + matScore};\r\n      }\r\n      return costMetric;\r\n    }\r\n\r\n    computeWearability = (wearability) => {\r\n\r\n      wearability = wearability.map((item) => {\r\n\r\n        let count = 0\r\n        let totalCount = 50\r\n\r\n        let attachScore = item[\"Attachment to the Body\"];\r\n\r\n        switch (attachScore) {\r\n\r\n            case \"Threads\":\r\n              attachScore = 5;\r\n              break;\r\n            case \"Velcro\":\r\n              attachScore = 3;\r\n              break;\r\n            case \"Adhesives\":\r\n               attachScore = 4;\r\n              break;\r\n            case \"Embedded\":\r\n              attachScore = 2;\r\n              break;\r\n            case \"Straps\":\r\n              attachScore = 1;\r\n              break;\r\n            case \"Clips\":\r\n              attachScore = 4;\r\n              break;\r\n            default:\r\n              attachScore = 0;\r\n              totalCount = totalCount - 5;\r\n\r\n        }\r\n\r\n        let mainScore = item[\"Maintenance required\"];\r\n\r\n        if(isNaN(mainScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n\r\n          count += parseInt(mainScore);\r\n        }\r\n\r\n        let actScore = item[\"activity obstruction\"];\r\n\r\n        if(isNaN(actScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(actScore);\r\n        }\r\n\r\n        let intScore = item[\"Integration (form and size)\"];\r\n\r\n        if(isNaN(intScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(intScore);\r\n        }\r\n\r\n        let conScore = item[\"Context\"];\r\n\r\n        if(isNaN(conScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(conScore);\r\n        }\r\n\r\n        let aesScore = item[\"Aesthetics\"];\r\n\r\n        if(isNaN(aesScore)) {\r\n          totalCount = totalCount - 9;\r\n        }\r\n\r\n        else {\r\n          count += parseInt(aesScore);\r\n        }\r\n\r\n        return {\"Wearability\": ((count / totalCount) * 100).toFixed(2)}\r\n      })\r\n\r\n      return wearability;\r\n    }\r\n\r\n  displayMatrix = () => {\r\n    this.setState({\r\n      displayHome: false,\r\n    });\r\n  }\r\n\r\n    render() {\r\n\r\n        return (\r\n          <BrowserRouter>\r\n          {(this.state.displayHome) ? (<HomePage toggle={this.toggleToSearch} />) : ((!this.props.searchDisplay) ? (<div className=\"layout\">\r\n             <LeftPane />\r\n             <LeftPaneModal />\r\n             <Matrix />\r\n             <BodyZones />\r\n             <FilterPane move={false} showLoop={true}/>\r\n          </div>) : (<div className=\"layout\"><SearchDisplay backToSearch={this.props.updateSearchDisplay}/>\r\n          <FilterPane move={true} showLoop={true}/></div>)\r\n        )}\r\n        </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchDisplay: state.searchDisplay,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateSearchData: (value) => dispatch({type: actionTypes.UPDATE_DATA, value: value}),\r\n        updateSearchDisplay: () => dispatch({type: actionTypes.REMOVE_SEARCH_DISPLAY})\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './store/reducers/index'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootReducer = reducer;\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}